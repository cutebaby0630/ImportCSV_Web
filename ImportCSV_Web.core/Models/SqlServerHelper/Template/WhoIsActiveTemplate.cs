// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace SqlServerHelper.Core.Template
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;

    /// <summary>
    /// Class to produce the template output
    /// </summary>

#line 1 "D:\WorkSpace\iDigitStudio\CodeGenerator\SqlServerHelper.Core\Template\WhoIsActiveTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class WhoIsActiveTemplate : WhoIsActiveTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("SET QUOTED_IDENTIFIER ON;\r\nSET ANSI_PADDING ON;\r\nSET CONCAT_NULL_YIELDS_NULL ON;\r" +
                    "\nSET ANSI_WARNINGS ON;\r\nSET NUMERIC_ROUNDABORT OFF;\r\nSET ARITHABORT ON;\r\nGO\r\n\r\nI" +
                    "F NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = \'sp" +
                    "_WhoIsActive\')\r\n\tEXEC (\'CREATE PROC dbo.sp_WhoIsActive AS SELECT \'\'stub version," +
                    " to be replaced\'\'\')\r\nGO\r\n\r\n/****************************************************" +
                    "*****************************************\r\nWho Is Active? v11.32 (2018-07-03)\r\n(" +
                    "C) 2007-2018, Adam Machanic\r\n\r\nFeedback: mailto:adam@dataeducation.com\r\nUpdates:" +
                    " http://whoisactive.com\r\nBlog: http://dataeducation.com\r\n\r\nLicense: \r\n\tWho is Ac" +
                    "tive? is free to download and use for personal, educational, and internal \r\n\tcor" +
                    "porate purposes, provided that this header is preserved. Redistribution or sale " +
                    "\r\n\tof Who is Active?, in whole or in part, is prohibited without the author\'s ex" +
                    "press \r\n\twritten consent.\r\n*****************************************************" +
                    "****************************************/\r\nALTER PROC dbo.sp_WhoIsActive\r\n(\r\n--~" +
                    "\r\n\t--Filters--Both inclusive and exclusive\r\n\t--Set either filter to \'\' to disabl" +
                    "e\r\n\t--Valid filter types are: session, program, database, login, and host\r\n\t--Se" +
                    "ssion is a session ID, and either 0 or \'\' can be used to indicate \"all\" sessions" +
                    "\r\n\t--All other filter types support % or _ as wildcards\r\n\t@filter sysname = \'\',\r" +
                    "\n\t@filter_type VARCHAR(10) = \'session\',\r\n\t@not_filter sysname = \'\',\r\n\t@not_filte" +
                    "r_type VARCHAR(10) = \'session\',\r\n\r\n\t--Retrieve data about the calling session?\r\n" +
                    "\t@show_own_spid BIT = 0,\r\n\r\n\t--Retrieve data about system sessions?\r\n\t@show_syst" +
                    "em_spids BIT = 0,\r\n\r\n\t--Controls how sleeping SPIDs are handled, based on the id" +
                    "ea of levels of interest\r\n\t--0 does not pull any sleeping SPIDs\r\n\t--1 pulls only" +
                    " those sleeping SPIDs that also have an open transaction\r\n\t--2 pulls all sleepin" +
                    "g SPIDs\r\n\t@show_sleeping_spids TINYINT = 1,\r\n\r\n\t--If 1, gets the full stored pro" +
                    "cedure or running batch, when available\r\n\t--If 0, gets only the actual statement" +
                    " that is currently running in the batch or procedure\r\n\t@get_full_inner_text BIT " +
                    "= 0,\r\n\r\n\t--Get associated query plans for running tasks, if available\r\n\t--If @ge" +
                    "t_plans = 1, gets the plan based on the request\'s statement offset\r\n\t--If @get_p" +
                    "lans = 2, gets the entire plan based on the request\'s plan_handle\r\n\t@get_plans T" +
                    "INYINT = 0,\r\n\r\n\t--Get the associated outer ad hoc query or stored procedure call" +
                    ", if available\r\n\t@get_outer_command BIT = 0,\r\n\r\n\t--Enables pulling transaction l" +
                    "og write info and transaction duration\r\n\t@get_transaction_info BIT = 0,\r\n\r\n\t--Ge" +
                    "t information on active tasks, based on three interest levels\r\n\t--Level 0 does n" +
                    "ot pull any task-related information\r\n\t--Level 1 is a lightweight mode that pull" +
                    "s the top non-CXPACKET wait, giving preference to blockers\r\n\t--Level 2 pulls all" +
                    " available task-based metrics, including: \r\n\t--number of active tasks, current w" +
                    "ait stats, physical I/O, context switches, and blocker information\r\n\t@get_task_i" +
                    "nfo TINYINT = 1,\r\n\r\n\t--Gets associated locks for each request, aggregated in an " +
                    "XML format\r\n\t@get_locks BIT = 0,\r\n\r\n\t--Get average time for past runs of an acti" +
                    "ve query\r\n\t--(based on the combination of plan handle, sql handle, and offset)\r\n" +
                    "\t@get_avg_time BIT = 0,\r\n\r\n\t--Get additional non-performance-related information" +
                    " about the session or request\r\n\t--text_size, language, date_format, date_first, " +
                    "quoted_identifier, arithabort, ansi_null_dflt_on, \r\n\t--ansi_defaults, ansi_warni" +
                    "ngs, ansi_padding, ansi_nulls, concat_null_yields_null, \r\n\t--transaction_isolati" +
                    "on_level, lock_timeout, deadlock_priority, row_count, command_type\r\n\t--\r\n\t--If a" +
                    " SQL Agent job is running, an subnode called agent_info will be populated with s" +
                    "ome or all of\r\n\t--the following: job_id, job_name, step_id, step_name, msdb_quer" +
                    "y_error (in the event of an error)\r\n\t--\r\n\t--If @get_task_info is set to 2 and a " +
                    "lock wait is detected, a subnode called block_info will be\r\n\t--populated with so" +
                    "me or all of the following: lock_type, database_name, object_id, file_id, hobt_i" +
                    "d, \r\n\t--applock_hash, metadata_resource, metadata_class_id, object_name, schema_" +
                    "name\r\n\t@get_additional_info BIT = 0,\r\n\r\n\t--Walk the blocking chain and count the" +
                    " number of \r\n\t--total SPIDs blocked all the way down by a given session\r\n\t--Also" +
                    " enables task_info Level 1, if @get_task_info is set to 0\r\n\t@find_block_leaders " +
                    "BIT = 0,\r\n\r\n\t--Pull deltas on various metrics\r\n\t--Interval in seconds to wait be" +
                    "fore doing the second data pull\r\n\t@delta_interval TINYINT = 0,\r\n\r\n\t--List of des" +
                    "ired output columns, in desired order\r\n\t--Note that the final output will be the" +
                    " intersection of all enabled features and all \r\n\t--columns in the list. Therefor" +
                    "e, only columns associated with enabled features will \r\n\t--actually appear in th" +
                    "e output. Likewise, removing columns from this list may effectively\r\n\t--disable " +
                    "features, even if they are turned on\r\n\t--\r\n\t--Each element in this list must be " +
                    "one of the valid output column names. Names must be\r\n\t--delimited by square brac" +
                    "kets. White space, formatting, and additional characters are\r\n\t--allowed, as lon" +
                    "g as the list contains exact matches of delimited valid column names.\r\n\t@output_" +
                    "column_list VARCHAR(8000) = \'[dd%][session_id][sql_text][sql_command][login_name" +
                    "][wait_info][tasks][tran_log%][cpu%][temp%][block%][reads%][writes%][context%][p" +
                    "hysical%][query_plan][locks][%]\',\r\n\r\n\t--Column(s) by which to sort output, optio" +
                    "nally with sort directions. \r\n\t\t--Valid column choices:\r\n\t\t--session_id, physica" +
                    "l_io, reads, physical_reads, writes, tempdb_allocations, \r\n\t\t--tempdb_current, C" +
                    "PU, context_switches, used_memory, physical_io_delta, reads_delta, \r\n\t\t--physica" +
                    "l_reads_delta, writes_delta, tempdb_allocations_delta, tempdb_current_delta, \r\n\t" +
                    "\t--CPU_delta, context_switches_delta, used_memory_delta, tasks, tran_start_time," +
                    " \r\n\t\t--open_tran_count, blocking_session_id, blocked_session_count, percent_comp" +
                    "lete, \r\n\t\t--host_name, login_name, database_name, start_time, login_time, progra" +
                    "m_name\r\n\t\t--\r\n\t\t--Note that column names in the list must be bracket-delimited. " +
                    "Commas and/or white\r\n\t\t--space are not required. \r\n\t@sort_order VARCHAR(500) = \'" +
                    "[start_time] ASC\',\r\n\r\n\t--Formats some of the output columns in a more \"human rea" +
                    "dable\" form\r\n\t--0 disables outfput format\r\n\t--1 formats the output for variable-" +
                    "width fonts\r\n\t--2 formats the output for fixed-width fonts\r\n\t@format_output TINY" +
                    "INT = 1,\r\n\r\n\t--If set to a non-blank value, the script will attempt to insert in" +
                    "to the specified \r\n\t--destination table. Please note that the script will not ve" +
                    "rify that the table exists, \r\n\t--or that it has the correct schema, before doing" +
                    " the insert.\r\n\t--Table can be specified in one, two, or three-part format\r\n\t@des" +
                    "tination_table VARCHAR(4000) = \'\',\r\n\r\n\t--If set to 1, no data collection will ha" +
                    "ppen and no result set will be returned; instead,\r\n\t--a CREATE TABLE statement w" +
                    "ill be returned via the @schema parameter, which will match \r\n\t--the schema of t" +
                    "he result set that would be returned by using the same collection of the\r\n\t--res" +
                    "t of the parameters. The CREATE TABLE statement will have a placeholder token of" +
                    " \r\n\t--<table_name> in place of an actual table name.\r\n\t@return_schema BIT = 0,\r\n" +
                    "\t@schema VARCHAR(MAX) = NULL OUTPUT,\r\n\r\n\t--Help! What do I do?\r\n\t@help BIT = 0\r\n" +
                    "--~\r\n)\r\n/*\r\nOUTPUT COLUMNS\r\n--------------\r\nFormatted/Non:\t[session_id] [smallin" +
                    "t] NOT NULL\r\n\tSession ID (a.k.a. SPID)\r\n\r\nFormatted:\t\t[dd hh:mm:ss.mss] [varchar" +
                    "](15) NULL\r\nNon-Formatted:\t<not returned>\r\n\tFor an active request, time the quer" +
                    "y has been running\r\n\tFor a sleeping session, time since the last batch completed" +
                    "\r\n\r\nFormatted:\t\t[dd hh:mm:ss.mss (avg)] [varchar](15) NULL\r\nNon-Formatted:\t[avg_" +
                    "elapsed_time] [int] NULL\r\n\t(Requires @get_avg_time option)\r\n\tHow much time has t" +
                    "he active portion of the query taken in the past, on average?\r\n\r\nFormatted:\t\t[ph" +
                    "ysical_io] [varchar](30) NULL\r\nNon-Formatted:\t[physical_io] [bigint] NULL\r\n\tShow" +
                    "s the number of physical I/Os, for active requests\r\n\r\nFormatted:\t\t[reads] [varch" +
                    "ar](30) NULL\r\nNon-Formatted:\t[reads] [bigint] NULL\r\n\tFor an active request, numb" +
                    "er of reads done for the current query\r\n\tFor a sleeping session, total number of" +
                    " reads done over the lifetime of the session\r\n\r\nFormatted:\t\t[physical_reads] [va" +
                    "rchar](30) NULL\r\nNon-Formatted:\t[physical_reads] [bigint] NULL\r\n\tFor an active r" +
                    "equest, number of physical reads done for the current query\r\n\tFor a sleeping ses" +
                    "sion, total number of physical reads done over the lifetime of the session\r\n\r\nFo" +
                    "rmatted:\t\t[writes] [varchar](30) NULL\r\nNon-Formatted:\t[writes] [bigint] NULL\r\n\tF" +
                    "or an active request, number of writes done for the current query\r\n\tFor a sleepi" +
                    "ng session, total number of writes done over the lifetime of the session\r\n\r\nForm" +
                    "atted:\t\t[tempdb_allocations] [varchar](30) NULL\r\nNon-Formatted:\t[tempdb_allocati" +
                    "ons] [bigint] NULL\r\n\tFor an active request, number of TempDB writes done for the" +
                    " current query\r\n\tFor a sleeping session, total number of TempDB writes done over" +
                    " the lifetime of the session\r\n\r\nFormatted:\t\t[tempdb_current] [varchar](30) NULL\r" +
                    "\nNon-Formatted:\t[tempdb_current] [bigint] NULL\r\n\tFor an active request, number o" +
                    "f TempDB pages currently allocated for the query\r\n\tFor a sleeping session, numbe" +
                    "r of TempDB pages currently allocated for the session\r\n\r\nFormatted:\t\t[CPU] [varc" +
                    "har](30) NULL\r\nNon-Formatted:\t[CPU] [int] NULL\r\n\tFor an active request, total CP" +
                    "U time consumed by the current query\r\n\tFor a sleeping session, total CPU time co" +
                    "nsumed over the lifetime of the session\r\n\r\nFormatted:\t\t[context_switches] [varch" +
                    "ar](30) NULL\r\nNon-Formatted:\t[context_switches] [bigint] NULL\r\n\tShows the number" +
                    " of context switches, for active requests\r\n\r\nFormatted:\t\t[used_memory] [varchar]" +
                    "(30) NOT NULL\r\nNon-Formatted:\t[used_memory] [bigint] NOT NULL\r\n\tFor an active re" +
                    "quest, total memory consumption for the current query\r\n\tFor a sleeping session, " +
                    "total current memory consumption\r\n\r\nFormatted:\t\t[physical_io_delta] [varchar](30" +
                    ") NULL\r\nNon-Formatted:\t[physical_io_delta] [bigint] NULL\r\n\t(Requires @delta_inte" +
                    "rval option)\r\n\tDifference between the number of physical I/Os reported on the fi" +
                    "rst and second collections. \r\n\tIf the request started after the first collection" +
                    ", the value will be NULL\r\n\r\nFormatted:\t\t[reads_delta] [varchar](30) NULL\r\nNon-Fo" +
                    "rmatted:\t[reads_delta] [bigint] NULL\r\n\t(Requires @delta_interval option)\r\n\tDiffe" +
                    "rence between the number of reads reported on the first and second collections. " +
                    "\r\n\tIf the request started after the first collection, the value will be NULL\r\n\r\n" +
                    "Formatted:\t\t[physical_reads_delta] [varchar](30) NULL\r\nNon-Formatted:\t[physical_" +
                    "reads_delta] [bigint] NULL\r\n\t(Requires @delta_interval option)\r\n\tDifference betw" +
                    "een the number of physical reads reported on the first and second collections. \r" +
                    "\n\tIf the request started after the first collection, the value will be NULL\r\n\r\nF" +
                    "ormatted:\t\t[writes_delta] [varchar](30) NULL\r\nNon-Formatted:\t[writes_delta] [big" +
                    "int] NULL\r\n\t(Requires @delta_interval option)\r\n\tDifference between the number of" +
                    " writes reported on the first and second collections. \r\n\tIf the request started " +
                    "after the first collection, the value will be NULL\r\n\r\nFormatted:\t\t[tempdb_alloca" +
                    "tions_delta] [varchar](30) NULL\r\nNon-Formatted:\t[tempdb_allocations_delta] [bigi" +
                    "nt] NULL\r\n\t(Requires @delta_interval option)\r\n\tDifference between the number of " +
                    "TempDB writes reported on the first and second collections. \r\n\tIf the request st" +
                    "arted after the first collection, the value will be NULL\r\n\r\nFormatted:\t\t[tempdb_" +
                    "current_delta] [varchar](30) NULL\r\nNon-Formatted:\t[tempdb_current_delta] [bigint" +
                    "] NULL\r\n\t(Requires @delta_interval option)\r\n\tDifference between the number of al" +
                    "located TempDB pages reported on the first and second \r\n\tcollections. If the req" +
                    "uest started after the first collection, the value will be NULL\r\n\r\nFormatted:\t\t[" +
                    "CPU_delta] [varchar](30) NULL\r\nNon-Formatted:\t[CPU_delta] [int] NULL\r\n\t(Requires" +
                    " @delta_interval option)\r\n\tDifference between the CPU time reported on the first" +
                    " and second collections. \r\n\tIf the request started after the first collection, t" +
                    "he value will be NULL\r\n\r\nFormatted:\t\t[context_switches_delta] [varchar](30) NULL" +
                    "\r\nNon-Formatted:\t[context_switches_delta] [bigint] NULL\r\n\t(Requires @delta_inter" +
                    "val option)\r\n\tDifference between the context switches count reported on the firs" +
                    "t and second collections\r\n\tIf the request started after the first collection, th" +
                    "e value will be NULL\r\n\r\nFormatted:\t\t[used_memory_delta] [varchar](30) NULL\r\nNon-" +
                    "Formatted:\t[used_memory_delta] [bigint] NULL\r\n\tDifference between the memory usa" +
                    "ge reported on the first and second collections\r\n\tIf the request started after t" +
                    "he first collection, the value will be NULL\r\n\r\nFormatted:\t\t[tasks] [varchar](30)" +
                    " NULL\r\nNon-Formatted:\t[tasks] [smallint] NULL\r\n\tNumber of worker tasks currently" +
                    " allocated, for active requests\r\n\r\nFormatted/Non:\t[status] [varchar](30) NOT NUL" +
                    "L\r\n\tActivity status for the session (running, sleeping, etc)\r\n\r\nFormatted/Non:\t[" +
                    "wait_info] [nvarchar](4000) NULL\r\n\tAggregates wait information, in the following" +
                    " format:\r\n\t\t(Ax: Bms/Cms/Dms)E\r\n\tA is the number of waiting tasks currently wait" +
                    "ing on resource type E. B/C/D are wait\r\n\ttimes, in milliseconds. If only one thr" +
                    "ead is waiting, its wait time will be shown as B.\r\n\tIf two tasks are waiting, ea" +
                    "ch of their wait times will be shown (B/C). If three or more \r\n\ttasks are waitin" +
                    "g, the minimum, average, and maximum wait times will be shown (B/C/D).\r\n\tIf wait" +
                    " type E is a page latch wait and the page is of a \"special\" type (e.g. PFS, GAM," +
                    " SGAM), \r\n\tthe page type will be identified.\r\n\tIf wait type E is CXPACKET, the n" +
                    "odeId from the query plan will be identified\r\n\r\nFormatted/Non:\t[locks] [xml] NUL" +
                    "L\r\n\t(Requires @get_locks option)\r\n\tAggregates lock information, in XML format.\r\n" +
                    "\tThe lock XML includes the lock mode, locked object, and aggregates the number o" +
                    "f requests. \r\n\tAttempts are made to identify locked objects by name\r\n\r\nFormatted" +
                    "/Non:\t[tran_start_time] [datetime] NULL\r\n\t(Requires @get_transaction_info option" +
                    ")\r\n\tDate and time that the first transaction opened by a session caused a transa" +
                    "ction log \r\n\twrite to occur.\r\n\r\nFormatted/Non:\t[tran_log_writes] [nvarchar](4000" +
                    ") NULL\r\n\t(Requires @get_transaction_info option)\r\n\tAggregates transaction log wr" +
                    "ite information, in the following format:\r\n\tA:wB (C kB)\r\n\tA is a database that h" +
                    "as been touched by an active transaction\r\n\tB is the number of log writes that ha" +
                    "ve been made in the database as a result of the transaction\r\n\tC is the number of" +
                    " log kilobytes consumed by the log records\r\n\r\nFormatted:\t\t[open_tran_count] [var" +
                    "char](30) NULL\r\nNon-Formatted:\t[open_tran_count] [smallint] NULL\r\n\tShows the num" +
                    "ber of open transactions the session has open\r\n\r\nFormatted:\t\t[sql_command] [xml]" +
                    " NULL\r\nNon-Formatted:\t[sql_command] [nvarchar](max) NULL\r\n\t(Requires @get_outer_" +
                    "command option)\r\n\tShows the \"outer\" SQL command, i.e. the text of the batch or R" +
                    "PC sent to the server, \r\n\tif available\r\n\r\nFormatted:\t\t[sql_text] [xml] NULL\r\nNon" +
                    "-Formatted:\t[sql_text] [nvarchar](max) NULL\r\n\tShows the SQL text for active requ" +
                    "ests or the last statement executed\r\n\tfor sleeping sessions, if available in eit" +
                    "her case.\r\n\tIf @get_full_inner_text option is set, shows the full text of the ba" +
                    "tch.\r\n\tOtherwise, shows only the active statement within the batch.\r\n\tIf the que" +
                    "ry text is locked, a special timeout message will be sent, in the following form" +
                    "at:\r\n\t\t<timeout_exceeded />\r\n\tIf an error occurs, an error message will be sent," +
                    " in the following format:\r\n\t\t<error message=\"message\" />\r\n\r\nFormatted/Non:\t[quer" +
                    "y_plan] [xml] NULL\r\n\t(Requires @get_plans option)\r\n\tShows the query plan for the" +
                    " request, if available.\r\n\tIf the plan is locked, a special timeout message will " +
                    "be sent, in the following format:\r\n\t\t<timeout_exceeded />\r\n\tIf an error occurs, " +
                    "an error message will be sent, in the following format:\r\n\t\t<error message=\"messa" +
                    "ge\" />\r\n\r\nFormatted/Non:\t[blocking_session_id] [smallint] NULL\r\n\tWhen applicable" +
                    ", shows the blocking SPID\r\n\r\nFormatted:\t\t[blocked_session_count] [varchar](30) N" +
                    "ULL\r\nNon-Formatted:\t[blocked_session_count] [smallint] NULL\r\n\t(Requires @find_bl" +
                    "ock_leaders option)\r\n\tThe total number of SPIDs blocked by this session,\r\n\tall t" +
                    "he way down the blocking chain.\r\n\r\nFormatted:\t\t[percent_complete] [varchar](30) " +
                    "NULL\r\nNon-Formatted:\t[percent_complete] [real] NULL\r\n\tWhen applicable, shows the" +
                    " percent complete (e.g. for backups, restores, and some rollbacks)\r\n\r\nFormatted/" +
                    "Non:\t[host_name] [sysname] NOT NULL\r\n\tShows the host name for the connection\r\n\r\n" +
                    "Formatted/Non:\t[login_name] [sysname] NOT NULL\r\n\tShows the login name for the co" +
                    "nnection\r\n\r\nFormatted/Non:\t[database_name] [sysname] NULL\r\n\tShows the connected " +
                    "database\r\n\r\nFormatted/Non:\t[program_name] [sysname] NULL\r\n\tShows the reported pr" +
                    "ogram/application name\r\n\r\nFormatted/Non:\t[additional_info] [xml] NULL\r\n\t(Require" +
                    "s @get_additional_info option)\r\n\tReturns additional non-performance-related sess" +
                    "ion/request information\r\n\tIf the script finds a SQL Agent job running, the name " +
                    "of the job and job step will be reported\r\n\tIf @get_task_info = 2 and the script " +
                    "finds a lock wait, the locked object will be reported\r\n\r\nFormatted/Non:\t[start_t" +
                    "ime] [datetime] NOT NULL\r\n\tFor active requests, shows the time the request start" +
                    "ed\r\n\tFor sleeping sessions, shows the time the last batch completed\r\n\r\nFormatted" +
                    "/Non:\t[login_time] [datetime] NOT NULL\r\n\tShows the time that the session connect" +
                    "ed\r\n\r\nFormatted/Non:\t[request_id] [int] NULL\r\n\tFor active requests, shows the re" +
                    "quest_id\r\n\tShould be 0 unless MARS is being used\r\n\r\nFormatted/Non:\t[collection_t" +
                    "ime] [datetime] NOT NULL\r\n\tTime that this script\'s final SELECT ran\r\n*/\r\nAS\r\nBEG" +
                    "IN;\r\n\tSET NOCOUNT ON; \r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\tSET" +
                    " QUOTED_IDENTIFIER ON;\r\n\tSET ANSI_PADDING ON;\r\n\tSET CONCAT_NULL_YIELDS_NULL ON;\r" +
                    "\n\tSET ANSI_WARNINGS ON;\r\n\tSET NUMERIC_ROUNDABORT OFF;\r\n\tSET ARITHABORT ON;\r\n\r\n\tI" +
                    "F\r\n\t\t@filter IS NULL\r\n\t\tOR @filter_type IS NULL\r\n\t\tOR @not_filter IS NULL\r\n\t\tOR " +
                    "@not_filter_type IS NULL\r\n\t\tOR @show_own_spid IS NULL\r\n\t\tOR @show_system_spids I" +
                    "S NULL\r\n\t\tOR @show_sleeping_spids IS NULL\r\n\t\tOR @get_full_inner_text IS NULL\r\n\t\t" +
                    "OR @get_plans IS NULL\r\n\t\tOR @get_outer_command IS NULL\r\n\t\tOR @get_transaction_in" +
                    "fo IS NULL\r\n\t\tOR @get_task_info IS NULL\r\n\t\tOR @get_locks IS NULL\r\n\t\tOR @get_avg_" +
                    "time IS NULL\r\n\t\tOR @get_additional_info IS NULL\r\n\t\tOR @find_block_leaders IS NUL" +
                    "L\r\n\t\tOR @delta_interval IS NULL\r\n\t\tOR @format_output IS NULL\r\n\t\tOR @output_colum" +
                    "n_list IS NULL\r\n\t\tOR @sort_order IS NULL\r\n\t\tOR @return_schema IS NULL\r\n\t\tOR @des" +
                    "tination_table IS NULL\r\n\t\tOR @help IS NULL\r\n\tBEGIN;\r\n\t\tRAISERROR(\'Input paramete" +
                    "rs cannot be NULL\', 16, 1);\r\n\t\tRETURN;\r\n\tEND;\r\n\t\r\n\tIF @filter_type NOT IN (\'sess" +
                    "ion\', \'program\', \'database\', \'login\', \'host\')\r\n\tBEGIN;\r\n\t\tRAISERROR(\'Valid filte" +
                    "r types are: session, program, database, login, host\', 16, 1);\r\n\t\tRETURN;\r\n\tEND;" +
                    "\r\n\t\r\n\tIF @filter_type = \'session\' AND @filter LIKE \'%[^0123456789]%\'\r\n\tBEGIN;\r\n\t" +
                    "\tRAISERROR(\'Session filters must be valid integers\', 16, 1);\r\n\t\tRETURN;\r\n\tEND;\r\n" +
                    "\t\r\n\tIF @not_filter_type NOT IN (\'session\', \'program\', \'database\', \'login\', \'host" +
                    "\')\r\n\tBEGIN;\r\n\t\tRAISERROR(\'Valid filter types are: session, program, database, lo" +
                    "gin, host\', 16, 1);\r\n\t\tRETURN;\r\n\tEND;\r\n\t\r\n\tIF @not_filter_type = \'session\' AND @" +
                    "not_filter LIKE \'%[^0123456789]%\'\r\n\tBEGIN;\r\n\t\tRAISERROR(\'Session filters must be" +
                    " valid integers\', 16, 1);\r\n\t\tRETURN;\r\n\tEND;\r\n\t\r\n\tIF @show_sleeping_spids NOT IN " +
                    "(0, 1, 2)\r\n\tBEGIN;\r\n\t\tRAISERROR(\'Valid values for @show_sleeping_spids are: 0, 1" +
                    ", or 2\', 16, 1);\r\n\t\tRETURN;\r\n\tEND;\r\n\t\r\n\tIF @get_plans NOT IN (0, 1, 2)\r\n\tBEGIN;\r" +
                    "\n\t\tRAISERROR(\'Valid values for @get_plans are: 0, 1, or 2\', 16, 1);\r\n\t\tRETURN;\r\n" +
                    "\tEND;\r\n\r\n\tIF @get_task_info NOT IN (0, 1, 2)\r\n\tBEGIN;\r\n\t\tRAISERROR(\'Valid values" +
                    " for @get_task_info are: 0, 1, or 2\', 16, 1);\r\n\t\tRETURN;\r\n\tEND;\r\n\r\n\tIF @format_o" +
                    "utput NOT IN (0, 1, 2)\r\n\tBEGIN;\r\n\t\tRAISERROR(\'Valid values for @format_output ar" +
                    "e: 0, 1, or 2\', 16, 1);\r\n\t\tRETURN;\r\n\tEND;\r\n\t\r\n\tIF @help = 1\r\n\tBEGIN;\r\n\t\tDECLARE " +
                    "\r\n\t\t\t@header VARCHAR(MAX),\r\n\t\t\t@params VARCHAR(MAX),\r\n\t\t\t@outputs VARCHAR(MAX);\r" +
                    "\n\r\n\t\tSELECT \r\n\t\t\t@header =\r\n\t\t\t\tREPLACE\r\n\t\t\t\t(\r\n\t\t\t\t\tREPLACE\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tCONV" +
                    "ERT\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tVARCHAR(MAX),\r\n\t\t\t\t\t\t\tSUBSTRING\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tt.text, " +
                    "\r\n\t\t\t\t\t\t\t\tCHARINDEX(\'/\' + REPLICATE(\'*\', 93), t.text) + 94,\r\n\t\t\t\t\t\t\t\tCHARINDEX(R" +
                    "EPLICATE(\'*\', 93) + \'/\', t.text) - (CHARINDEX(\'/\' + REPLICATE(\'*\', 93), t.text) " +
                    "+ 94)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tCHAR(13)+CHAR(10),\r\n\t\t\t\t\t\tCHAR(13)\r\n\t\t\t\t\t),\r\n\t\t" +
                    "\t\t\t\'\t\',\r\n\t\t\t\t\t\'\'\r\n\t\t\t\t),\r\n\t\t\t@params =\r\n\t\t\t\tCHAR(13) +\r\n\t\t\t\t\tREPLACE\r\n\t\t\t\t\t(\r\n\t\t" +
                    "\t\t\t\tREPLACE\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tCONVERT\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tVARCHAR(MAX),\r\n\t\t\t\t\t\t\t\tS" +
                    "UBSTRING\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tt.text, \r\n\t\t\t\t\t\t\t\t\tCHARINDEX(\'--~\', t.text) + 5, \r" +
                    "\n\t\t\t\t\t\t\t\t\tCHARINDEX(\'--~\', t.text, CHARINDEX(\'--~\', t.text) + 5) - (CHARINDEX(\'-" +
                    "-~\', t.text) + 5)\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tCHAR(13)+CHAR(10),\r\n\t\t\t\t\t\t\tCHAR(" +
                    "13)\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\'\t\',\r\n\t\t\t\t\t\t\'\'\r\n\t\t\t\t\t),\r\n\t\t\t\t@outputs = \r\n\t\t\t\t\tCHAR(13) +\r\n" +
                    "\t\t\t\t\t\tREPLACE\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tREPLACE\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tREPLACE\r\n\t\t\t\t\t\t\t\t(\r\n\t\t" +
                    "\t\t\t\t\t\t\tCONVERT\r\n\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\tVARCHAR(MAX),\r\n\t\t\t\t\t\t\t\t\t\tSUBSTRING\r\n\t\t\t\t\t\t" +
                    "\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\tt.text, \r\n\t\t\t\t\t\t\t\t\t\t\tCHARINDEX(\'OUTPUT COLUMNS\'+CHAR(13)+CHAR(" +
                    "10)+\'--------------\', t.text) + 32,\r\n\t\t\t\t\t\t\t\t\t\t\tCHARINDEX(\'*/\', t.text, CHARINDE" +
                    "X(\'OUTPUT COLUMNS\'+CHAR(13)+CHAR(10)+\'--------------\', t.text) + 32) - (CHARINDE" +
                    "X(\'OUTPUT COLUMNS\'+CHAR(13)+CHAR(10)+\'--------------\', t.text) + 32)\r\n\t\t\t\t\t\t\t\t\t\t" +
                    ")\r\n\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\tCHAR(9),\r\n\t\t\t\t\t\t\t\t\tCHAR(255)\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\tCHAR(" +
                    "13)+CHAR(10),\r\n\t\t\t\t\t\t\t\tCHAR(13)\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\'\t\',\r\n\t\t\t\t\t\t\t\'\'\r\n\t\t\t\t\t\t) +\r\n\t" +
                    "\t\t\t\t\tCHAR(13)\r\n\t\tFROM sys.dm_exec_requests AS r\r\n\t\tCROSS APPLY sys.dm_exec_sql_t" +
                    "ext(r.sql_handle) AS t\r\n\t\tWHERE\r\n\t\t\tr.session_id = @@SPID;\r\n\r\n\t\tWITH\r\n\t\ta0 AS\r\n\t" +
                    "\t(SELECT 1 AS n UNION ALL SELECT 1),\r\n\t\ta1 AS\r\n\t\t(SELECT 1 AS n FROM a0 AS a, a0" +
                    " AS b),\r\n\t\ta2 AS\r\n\t\t(SELECT 1 AS n FROM a1 AS a, a1 AS b),\r\n\t\ta3 AS\r\n\t\t(SELECT 1" +
                    " AS n FROM a2 AS a, a2 AS b),\r\n\t\ta4 AS\r\n\t\t(SELECT 1 AS n FROM a3 AS a, a3 AS b)," +
                    "\r\n\t\tnumbers AS\r\n\t\t(\r\n\t\t\tSELECT TOP(LEN(@header) - 1)\r\n\t\t\t\tROW_NUMBER() OVER\r\n\t\t\t" +
                    "\t(\r\n\t\t\t\t\tORDER BY (SELECT NULL)\r\n\t\t\t\t) AS number\r\n\t\t\tFROM a4\r\n\t\t\tORDER BY\r\n\t\t\t\tn" +
                    "umber\r\n\t\t)\r\n\t\tSELECT\r\n\t\t\tRTRIM(LTRIM(\r\n\t\t\t\tSUBSTRING\r\n\t\t\t\t(\r\n\t\t\t\t\t@header,\r\n\t\t\t\t" +
                    "\tnumber + 1,\r\n\t\t\t\t\tCHARINDEX(CHAR(13), @header, number + 1) - number - 1\r\n\t\t\t\t)\r" +
                    "\n\t\t\t)) AS [------header---------------------------------------------------------" +
                    "------------------------------------------------------]\r\n\t\tFROM numbers\r\n\t\tWHERE" +
                    "\r\n\t\t\tSUBSTRING(@header, number, 1) = CHAR(13);\r\n\r\n\t\tWITH\r\n\t\ta0 AS\r\n\t\t(SELECT 1 A" +
                    "S n UNION ALL SELECT 1),\r\n\t\ta1 AS\r\n\t\t(SELECT 1 AS n FROM a0 AS a, a0 AS b),\r\n\t\ta" +
                    "2 AS\r\n\t\t(SELECT 1 AS n FROM a1 AS a, a1 AS b),\r\n\t\ta3 AS\r\n\t\t(SELECT 1 AS n FROM a" +
                    "2 AS a, a2 AS b),\r\n\t\ta4 AS\r\n\t\t(SELECT 1 AS n FROM a3 AS a, a3 AS b),\r\n\t\tnumbers " +
                    "AS\r\n\t\t(\r\n\t\t\tSELECT TOP(LEN(@params) - 1)\r\n\t\t\t\tROW_NUMBER() OVER\r\n\t\t\t\t(\r\n\t\t\t\t\tORD" +
                    "ER BY (SELECT NULL)\r\n\t\t\t\t) AS number\r\n\t\t\tFROM a4\r\n\t\t\tORDER BY\r\n\t\t\t\tnumber\r\n\t\t),\r" +
                    "\n\t\ttokens AS\r\n\t\t(\r\n\t\t\tSELECT \r\n\t\t\t\tRTRIM(LTRIM(\r\n\t\t\t\t\tSUBSTRING\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t@" +
                    "params,\r\n\t\t\t\t\t\tnumber + 1,\r\n\t\t\t\t\t\tCHARINDEX(CHAR(13), @params, number + 1) - num" +
                    "ber - 1\r\n\t\t\t\t\t)\r\n\t\t\t\t)) AS token,\r\n\t\t\t\tnumber,\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN SUBSTRING(@p" +
                    "arams, number + 1, 1) = CHAR(13) THEN number\r\n\t\t\t\t\tELSE COALESCE(NULLIF(CHARINDE" +
                    "X(\',\' + CHAR(13) + CHAR(13), @params, number), 0), LEN(@params)) \r\n\t\t\t\tEND AS pa" +
                    "ram_group,\r\n\t\t\t\tROW_NUMBER() OVER\r\n\t\t\t\t(\r\n\t\t\t\t\tPARTITION BY\r\n\t\t\t\t\t\tCHARINDEX(\',\'" +
                    " + CHAR(13) + CHAR(13), @params, number),\r\n\t\t\t\t\t\tSUBSTRING(@params, number+1, 1)" +
                    "\r\n\t\t\t\t\tORDER BY \r\n\t\t\t\t\t\tnumber\r\n\t\t\t\t) AS group_order\r\n\t\t\tFROM numbers\r\n\t\t\tWHERE\r" +
                    "\n\t\t\t\tSUBSTRING(@params, number, 1) = CHAR(13)\r\n\t\t),\r\n\t\tparsed_tokens AS\r\n\t\t(\r\n\t\t" +
                    "\tSELECT\r\n\t\t\t\tMIN\r\n\t\t\t\t(\r\n\t\t\t\t\tCASE\r\n\t\t\t\t\t\tWHEN token LIKE \'@%\' THEN token\r\n\t\t\t\t\t" +
                    "\tELSE NULL\r\n\t\t\t\t\tEND\r\n\t\t\t\t) AS parameter,\r\n\t\t\t\tMIN\r\n\t\t\t\t(\r\n\t\t\t\t\tCASE\r\n\t\t\t\t\t\tWHEN" +
                    " token LIKE \'--%\' THEN RIGHT(token, LEN(token) - 2)\r\n\t\t\t\t\t\tELSE NULL\r\n\t\t\t\t\tEND\r\n" +
                    "\t\t\t\t) AS description,\r\n\t\t\t\tparam_group,\r\n\t\t\t\tgroup_order\r\n\t\t\tFROM tokens\r\n\t\t\tWHE" +
                    "RE\r\n\t\t\t\tNOT \r\n\t\t\t\t(\r\n\t\t\t\t\ttoken = \'\' \r\n\t\t\t\t\tAND group_order > 1\r\n\t\t\t\t)\r\n\t\t\tGROUP" +
                    " BY\r\n\t\t\t\tparam_group,\r\n\t\t\t\tgroup_order\r\n\t\t)\r\n\t\tSELECT\r\n\t\t\tCASE\r\n\t\t\t\tWHEN descrip" +
                    "tion IS NULL AND parameter IS NULL THEN \'---------------------------------------" +
                    "----------------------------------\'\r\n\t\t\t\tWHEN param_group = MAX(param_group) OVE" +
                    "R() THEN parameter\r\n\t\t\t\tELSE COALESCE(LEFT(parameter, LEN(parameter) - 1), \'\')\r\n" +
                    "\t\t\tEND AS [------parameter------------------------------------------------------" +
                    "----],\r\n\t\t\tCASE\r\n\t\t\t\tWHEN description IS NULL AND parameter IS NULL THEN \'------" +
                    "--------------------------------------------------------------------------------" +
                    "--------------------------------\'\r\n\t\t\t\tELSE COALESCE(description, \'\')\r\n\t\t\tEND AS" +
                    " [------description-------------------------------------------------------------" +
                    "----------------------------------------]\r\n\t\tFROM parsed_tokens\r\n\t\tORDER BY\r\n\t\t\t" +
                    "param_group, \r\n\t\t\tgroup_order;\r\n\t\t\r\n\t\tWITH\r\n\t\ta0 AS\r\n\t\t(SELECT 1 AS n UNION ALL " +
                    "SELECT 1),\r\n\t\ta1 AS\r\n\t\t(SELECT 1 AS n FROM a0 AS a, a0 AS b),\r\n\t\ta2 AS\r\n\t\t(SELEC" +
                    "T 1 AS n FROM a1 AS a, a1 AS b),\r\n\t\ta3 AS\r\n\t\t(SELECT 1 AS n FROM a2 AS a, a2 AS " +
                    "b),\r\n\t\ta4 AS\r\n\t\t(SELECT 1 AS n FROM a3 AS a, a3 AS b),\r\n\t\tnumbers AS\r\n\t\t(\r\n\t\t\tSE" +
                    "LECT TOP(LEN(@outputs) - 1)\r\n\t\t\t\tROW_NUMBER() OVER\r\n\t\t\t\t(\r\n\t\t\t\t\tORDER BY (SELECT" +
                    " NULL)\r\n\t\t\t\t) AS number\r\n\t\t\tFROM a4\r\n\t\t\tORDER BY\r\n\t\t\t\tnumber\r\n\t\t),\r\n\t\ttokens AS\r" +
                    "\n\t\t(\r\n\t\t\tSELECT \r\n\t\t\t\tRTRIM(LTRIM(\r\n\t\t\t\t\tSUBSTRING\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t@outputs,\r\n\t\t\t" +
                    "\t\t\tnumber + 1,\r\n\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t\t\tCOALESCE(NULLIF(CHARINDEX(CHAR" +
                    "(13) + \'Formatted\', @outputs, number + 1), 0), LEN(@outputs)) < \r\n\t\t\t\t\t\t\t\tCOALES" +
                    "CE(NULLIF(CHARINDEX(CHAR(13) + CHAR(255) COLLATE Latin1_General_Bin2, @outputs, " +
                    "number + 1), 0), LEN(@outputs))\r\n\t\t\t\t\t\t\t\tTHEN COALESCE(NULLIF(CHARINDEX(CHAR(13)" +
                    " + \'Formatted\', @outputs, number + 1), 0), LEN(@outputs)) - number - 1\r\n\t\t\t\t\t\t\tE" +
                    "LSE\r\n\t\t\t\t\t\t\t\tCOALESCE(NULLIF(CHARINDEX(CHAR(13) + CHAR(255) COLLATE Latin1_Gener" +
                    "al_Bin2, @outputs, number + 1), 0), LEN(@outputs)) - number - 1\r\n\t\t\t\t\t\tEND\r\n\t\t\t\t" +
                    "\t)\r\n\t\t\t\t)) AS token,\r\n\t\t\t\tnumber,\r\n\t\t\t\tCOALESCE(NULLIF(CHARINDEX(CHAR(13) + \'For" +
                    "matted\', @outputs, number + 1), 0), LEN(@outputs)) AS output_group,\r\n\t\t\t\tROW_NUM" +
                    "BER() OVER\r\n\t\t\t\t(\r\n\t\t\t\t\tPARTITION BY \r\n\t\t\t\t\t\tCOALESCE(NULLIF(CHARINDEX(CHAR(13) " +
                    "+ \'Formatted\', @outputs, number + 1), 0), LEN(@outputs))\r\n\t\t\t\t\tORDER BY\r\n\t\t\t\t\t\tn" +
                    "umber\r\n\t\t\t\t) AS output_group_order\r\n\t\t\tFROM numbers\r\n\t\t\tWHERE\r\n\t\t\t\tSUBSTRING(@ou" +
                    "tputs, number, 10) = CHAR(13) + \'Formatted\'\r\n\t\t\t\tOR SUBSTRING(@outputs, number, " +
                    "2) = CHAR(13) + CHAR(255) COLLATE Latin1_General_Bin2\r\n\t\t),\r\n\t\toutput_tokens AS\r" +
                    "\n\t\t(\r\n\t\t\tSELECT \r\n\t\t\t\t*,\r\n\t\t\t\tCASE output_group_order\r\n\t\t\t\t\tWHEN 2 THEN MAX(CASE" +
                    " output_group_order WHEN 1 THEN token ELSE NULL END) OVER (PARTITION BY output_g" +
                    "roup)\r\n\t\t\t\t\tELSE \'\'\r\n\t\t\t\tEND COLLATE Latin1_General_Bin2 AS column_info\r\n\t\t\tFROM" +
                    " tokens\r\n\t\t)\r\n\t\tSELECT\r\n\t\t\tCASE output_group_order\r\n\t\t\t\tWHEN 1 THEN \'-----------" +
                    "------------------------\'\r\n\t\t\t\tWHEN 2 THEN \r\n\t\t\t\t\tCASE\r\n\t\t\t\t\t\tWHEN CHARINDEX(\'Fo" +
                    "rmatted/Non:\', column_info) = 1 THEN\r\n\t\t\t\t\t\t\tSUBSTRING(column_info, CHARINDEX(CH" +
                    "AR(255) COLLATE Latin1_General_Bin2, column_info)+1, CHARINDEX(\']\', column_info," +
                    " CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info)+2) - CHARINDEX(CH" +
                    "AR(255) COLLATE Latin1_General_Bin2, column_info))\r\n\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\tSUBSTRING" +
                    "(column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info)+2, C" +
                    "HARINDEX(\']\', column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, colu" +
                    "mn_info)+2) - CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info)-1)\r\n" +
                    "\t\t\t\t\tEND\r\n\t\t\t\tELSE \'\'\r\n\t\t\tEND AS formatted_column_name,\r\n\t\t\tCASE output_group_or" +
                    "der\r\n\t\t\t\tWHEN 1 THEN \'-----------------------------------\'\r\n\t\t\t\tWHEN 2 THEN \r\n\t\t" +
                    "\t\t\tCASE\r\n\t\t\t\t\t\tWHEN CHARINDEX(\'Formatted/Non:\', column_info) = 1 THEN\r\n\t\t\t\t\t\t\tSU" +
                    "BSTRING(column_info, CHARINDEX(\']\', column_info)+2, LEN(column_info))\r\n\t\t\t\t\t\tELS" +
                    "E\r\n\t\t\t\t\t\t\tSUBSTRING(column_info, CHARINDEX(\']\', column_info)+2, CHARINDEX(\'Non-F" +
                    "ormatted:\', column_info, CHARINDEX(\']\', column_info)+2) - CHARINDEX(\']\', column_" +
                    "info)-3)\r\n\t\t\t\t\tEND\r\n\t\t\t\tELSE \'\'\r\n\t\t\tEND AS formatted_column_type,\r\n\t\t\tCASE outpu" +
                    "t_group_order\r\n\t\t\t\tWHEN 1 THEN \'---------------------------------------\'\r\n\t\t\t\tWH" +
                    "EN 2 THEN \r\n\t\t\t\t\tCASE\r\n\t\t\t\t\t\tWHEN CHARINDEX(\'Formatted/Non:\', column_info) = 1 T" +
                    "HEN \'\'\r\n\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\tWHEN SUBSTRING(column_info, CHARINDEX(C" +
                    "HAR(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX(\'Non-Formatted:\', c" +
                    "olumn_info))+1, 1) = \'<\' THEN\r\n\t\t\t\t\t\t\t\t\tSUBSTRING(column_info, CHARINDEX(CHAR(25" +
                    "5) COLLATE Latin1_General_Bin2, column_info, CHARINDEX(\'Non-Formatted:\', column_" +
                    "info))+1, CHARINDEX(\'>\', column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General" +
                    "_Bin2, column_info, CHARINDEX(\'Non-Formatted:\', column_info))+1) - CHARINDEX(CHA" +
                    "R(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX(\'Non-Formatted:\', col" +
                    "umn_info)))\r\n\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\tSUBSTRING(column_info, CHARINDEX(CHAR(255) C" +
                    "OLLATE Latin1_General_Bin2, column_info, CHARINDEX(\'Non-Formatted:\', column_info" +
                    "))+1, CHARINDEX(\']\', column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin" +
                    "2, column_info, CHARINDEX(\'Non-Formatted:\', column_info))+1) - CHARINDEX(CHAR(25" +
                    "5) COLLATE Latin1_General_Bin2, column_info, CHARINDEX(\'Non-Formatted:\', column_" +
                    "info)))\r\n\t\t\t\t\t\t\tEND\r\n\t\t\t\t\tEND\r\n\t\t\t\tELSE \'\'\r\n\t\t\tEND AS unformatted_column_name,\r\n" +
                    "\t\t\tCASE output_group_order\r\n\t\t\t\tWHEN 1 THEN \'-----------------------------------" +
                    "----\'\r\n\t\t\t\tWHEN 2 THEN \r\n\t\t\t\t\tCASE\r\n\t\t\t\t\t\tWHEN CHARINDEX(\'Formatted/Non:\', colum" +
                    "n_info) = 1 THEN \'\'\r\n\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\tWHEN SUBSTRING(column_info" +
                    ", CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX(\'Non-F" +
                    "ormatted:\', column_info))+1, 1) = \'<\' THEN \'\'\r\n\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\tSUBSTRING(" +
                    "column_info, CHARINDEX(\']\', column_info, CHARINDEX(\'Non-Formatted:\', column_info" +
                    "))+2, CHARINDEX(\'Non-Formatted:\', column_info, CHARINDEX(\']\', column_info)+2) - " +
                    "CHARINDEX(\']\', column_info)-3)\r\n\t\t\t\t\t\t\tEND\r\n\t\t\t\t\tEND\r\n\t\t\t\tELSE \'\'\r\n\t\t\tEND AS unf" +
                    "ormatted_column_type,\r\n\t\t\tCASE output_group_order\r\n\t\t\t\tWHEN 1 THEN \'------------" +
                    "--------------------------------------------------------------------------------" +
                    "--------------------------\'\r\n\t\t\t\tELSE REPLACE(token, CHAR(255) COLLATE Latin1_Ge" +
                    "neral_Bin2, \'\')\r\n\t\t\tEND AS [------description-----------------------------------" +
                    "------------------------------------------------------------------]\r\n\t\tFROM outp" +
                    "ut_tokens\r\n\t\tWHERE\r\n\t\t\tNOT \r\n\t\t\t(\r\n\t\t\t\toutput_group_order = 1 \r\n\t\t\t\tAND output_g" +
                    "roup = LEN(@outputs)\r\n\t\t\t)\r\n\t\tORDER BY\r\n\t\t\toutput_group,\r\n\t\t\tCASE output_group_o" +
                    "rder\r\n\t\t\t\tWHEN 1 THEN 99\r\n\t\t\t\tELSE output_group_order\r\n\t\t\tEND;\r\n\r\n\t\tRETURN;\r\n\tEN" +
                    "D;\r\n\r\n\tWITH\r\n\ta0 AS\r\n\t(SELECT 1 AS n UNION ALL SELECT 1),\r\n\ta1 AS\r\n\t(SELECT 1 AS" +
                    " n FROM a0 AS a, a0 AS b),\r\n\ta2 AS\r\n\t(SELECT 1 AS n FROM a1 AS a, a1 AS b),\r\n\ta3" +
                    " AS\r\n\t(SELECT 1 AS n FROM a2 AS a, a2 AS b),\r\n\ta4 AS\r\n\t(SELECT 1 AS n FROM a3 AS" +
                    " a, a3 AS b),\r\n\tnumbers AS\r\n\t(\r\n\t\tSELECT TOP(LEN(@output_column_list))\r\n\t\t\tROW_N" +
                    "UMBER() OVER\r\n\t\t\t(\r\n\t\t\t\tORDER BY (SELECT NULL)\r\n\t\t\t) AS number\r\n\t\tFROM a4\r\n\t\tORD" +
                    "ER BY\r\n\t\t\tnumber\r\n\t),\r\n\ttokens AS\r\n\t(\r\n\t\tSELECT \r\n\t\t\t\'|[\' +\r\n\t\t\t\tSUBSTRING\r\n\t\t\t\t" +
                    "(\r\n\t\t\t\t\t@output_column_list,\r\n\t\t\t\t\tnumber + 1,\r\n\t\t\t\t\tCHARINDEX(\']\', @output_colu" +
                    "mn_list, number) - number - 1\r\n\t\t\t\t) + \'|]\' AS token,\r\n\t\t\tnumber\r\n\t\tFROM numbers" +
                    "\r\n\t\tWHERE\r\n\t\t\tSUBSTRING(@output_column_list, number, 1) = \'[\'\r\n\t),\r\n\tordered_col" +
                    "umns AS\r\n\t(\r\n\t\tSELECT\r\n\t\t\tx.column_name,\r\n\t\t\tROW_NUMBER() OVER\r\n\t\t\t(\r\n\t\t\t\tPARTIT" +
                    "ION BY\r\n\t\t\t\t\tx.column_name\r\n\t\t\t\tORDER BY\r\n\t\t\t\t\ttokens.number,\r\n\t\t\t\t\tx.default_or" +
                    "der\r\n\t\t\t) AS r,\r\n\t\t\tROW_NUMBER() OVER\r\n\t\t\t(\r\n\t\t\t\tORDER BY\r\n\t\t\t\t\ttokens.number,\r\n" +
                    "\t\t\t\t\tx.default_order\r\n\t\t\t) AS s\r\n\t\tFROM tokens\r\n\t\tJOIN\r\n\t\t(\r\n\t\t\tSELECT \'[session" +
                    "_id]\' AS column_name, 1 AS default_order\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[dd hh:mm:ss." +
                    "mss]\', 2\r\n\t\t\tWHERE\r\n\t\t\t\t@format_output IN (1, 2)\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[dd h" +
                    "h:mm:ss.mss (avg)]\', 3\r\n\t\t\tWHERE\r\n\t\t\t\t@format_output IN (1, 2)\r\n\t\t\t\tAND @get_avg" +
                    "_time = 1\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[avg_elapsed_time]\', 4\r\n\t\t\tWHERE\r\n\t\t\t\t@forma" +
                    "t_output = 0\r\n\t\t\t\tAND @get_avg_time = 1\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[physical_io]\'" +
                    ", 5\r\n\t\t\tWHERE\r\n\t\t\t\t@get_task_info = 2\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[reads]\', 6\r\n\t\t\t" +
                    "UNION ALL\r\n\t\t\tSELECT \'[physical_reads]\', 7\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[writes]\', " +
                    "8\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[tempdb_allocations]\', 9\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[" +
                    "tempdb_current]\', 10\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[CPU]\', 11\r\n\t\t\tUNION ALL\r\n\t\t\tSELE" +
                    "CT \'[context_switches]\', 12\r\n\t\t\tWHERE\r\n\t\t\t\t@get_task_info = 2\r\n\t\t\tUNION ALL\r\n\t\t\t" +
                    "SELECT \'[used_memory]\', 13\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[physical_io_delta]\', 14\r\n\t" +
                    "\t\tWHERE\r\n\t\t\t\t@delta_interval > 0\t\r\n\t\t\t\tAND @get_task_info = 2\r\n\t\t\tUNION ALL\r\n\t\t\t" +
                    "SELECT \'[reads_delta]\', 15\r\n\t\t\tWHERE\r\n\t\t\t\t@delta_interval > 0\r\n\t\t\tUNION ALL\r\n\t\t\t" +
                    "SELECT \'[physical_reads_delta]\', 16\r\n\t\t\tWHERE\r\n\t\t\t\t@delta_interval > 0\r\n\t\t\tUNION" +
                    " ALL\r\n\t\t\tSELECT \'[writes_delta]\', 17\r\n\t\t\tWHERE\r\n\t\t\t\t@delta_interval > 0\r\n\t\t\tUNIO" +
                    "N ALL\r\n\t\t\tSELECT \'[tempdb_allocations_delta]\', 18\r\n\t\t\tWHERE\r\n\t\t\t\t@delta_interval" +
                    " > 0\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[tempdb_current_delta]\', 19\r\n\t\t\tWHERE\r\n\t\t\t\t@delta" +
                    "_interval > 0\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[CPU_delta]\', 20\r\n\t\t\tWHERE\r\n\t\t\t\t@delta_i" +
                    "nterval > 0\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[context_switches_delta]\', 21\r\n\t\t\tWHERE\r\n\t" +
                    "\t\t\t@delta_interval > 0\r\n\t\t\t\tAND @get_task_info = 2\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[us" +
                    "ed_memory_delta]\', 22\r\n\t\t\tWHERE\r\n\t\t\t\t@delta_interval > 0\r\n\t\t\tUNION ALL\r\n\t\t\tSELEC" +
                    "T \'[tasks]\', 23\r\n\t\t\tWHERE\r\n\t\t\t\t@get_task_info = 2\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[sta" +
                    "tus]\', 24\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[wait_info]\', 25\r\n\t\t\tWHERE\r\n\t\t\t\t@get_task_in" +
                    "fo > 0\r\n\t\t\t\tOR @find_block_leaders = 1\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[locks]\', 26\r\n\t" +
                    "\t\tWHERE\r\n\t\t\t\t@get_locks = 1\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[tran_start_time]\', 27\r\n\t\t" +
                    "\tWHERE\r\n\t\t\t\t@get_transaction_info = 1\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[tran_log_writes" +
                    "]\', 28\r\n\t\t\tWHERE\r\n\t\t\t\t@get_transaction_info = 1\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[open_" +
                    "tran_count]\', 29\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[sql_command]\', 30\r\n\t\t\tWHERE\r\n\t\t\t\t@ge" +
                    "t_outer_command = 1\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[sql_text]\', 31\r\n\t\t\tUNION ALL\r\n\t\t\t" +
                    "SELECT \'[query_plan]\', 32\r\n\t\t\tWHERE\r\n\t\t\t\t@get_plans >= 1\r\n\t\t\tUNION ALL\r\n\t\t\tSELEC" +
                    "T \'[blocking_session_id]\', 33\r\n\t\t\tWHERE\r\n\t\t\t\t@get_task_info > 0\r\n\t\t\t\tOR @find_bl" +
                    "ock_leaders = 1\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[blocked_session_count]\', 34\r\n\t\t\tWHERE" +
                    "\r\n\t\t\t\t@find_block_leaders = 1\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[percent_complete]\', 35\r" +
                    "\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[host_name]\', 36\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[login_name" +
                    "]\', 37\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[database_name]\', 38\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'" +
                    "[program_name]\', 39\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[additional_info]\', 40\r\n\t\t\tWHERE\r\n" +
                    "\t\t\t\t@get_additional_info = 1\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[start_time]\', 41\r\n\t\t\tUNI" +
                    "ON ALL\r\n\t\t\tSELECT \'[login_time]\', 42\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[request_id]\', 43" +
                    "\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[collection_time]\', 44\r\n\t\t) AS x ON \r\n\t\t\tx.column_nam" +
                    "e LIKE token ESCAPE \'|\'\r\n\t)\r\n\tSELECT\r\n\t\t@output_column_list =\r\n\t\t\tSTUFF\r\n\t\t\t(\r\n\t" +
                    "\t\t\t(\r\n\t\t\t\t\tSELECT\r\n\t\t\t\t\t\t\',\' + column_name as [text()]\r\n\t\t\t\t\tFROM ordered_column" +
                    "s\r\n\t\t\t\t\tWHERE\r\n\t\t\t\t\t\tr = 1\r\n\t\t\t\t\tORDER BY\r\n\t\t\t\t\t\ts\r\n\t\t\t\t\tFOR XML\r\n\t\t\t\t\t\tPATH(\'\')" +
                    "\r\n\t\t\t\t),\r\n\t\t\t\t1,\r\n\t\t\t\t1,\r\n\t\t\t\t\'\'\r\n\t\t\t);\r\n\t\r\n\tIF COALESCE(RTRIM(@output_column_li" +
                    "st), \'\') = \'\'\r\n\tBEGIN;\r\n\t\tRAISERROR(\'No valid column matches found in @output_co" +
                    "lumn_list or no columns remain due to selected options.\', 16, 1);\r\n\t\tRETURN;\r\n\tE" +
                    "ND;\r\n\t\r\n\tIF @destination_table <> \'\'\r\n\tBEGIN;\r\n\t\tSET @destination_table = \r\n\t\t\t-" +
                    "-database\r\n\t\t\tCOALESCE(QUOTENAME(PARSENAME(@destination_table, 3)) + \'.\', \'\') +\r" +
                    "\n\t\t\t--schema\r\n\t\t\tCOALESCE(QUOTENAME(PARSENAME(@destination_table, 2)) + \'.\', \'\')" +
                    " +\r\n\t\t\t--table\r\n\t\t\tCOALESCE(QUOTENAME(PARSENAME(@destination_table, 1)), \'\');\r\n\t" +
                    "\t\t\r\n\t\tIF COALESCE(RTRIM(@destination_table), \'\') = \'\'\r\n\t\tBEGIN;\r\n\t\t\tRAISERROR(\'D" +
                    "estination table not properly formatted.\', 16, 1);\r\n\t\t\tRETURN;\r\n\t\tEND;\r\n\tEND;\r\n\r" +
                    "\n\tWITH\r\n\ta0 AS\r\n\t(SELECT 1 AS n UNION ALL SELECT 1),\r\n\ta1 AS\r\n\t(SELECT 1 AS n FR" +
                    "OM a0 AS a, a0 AS b),\r\n\ta2 AS\r\n\t(SELECT 1 AS n FROM a1 AS a, a1 AS b),\r\n\ta3 AS\r\n" +
                    "\t(SELECT 1 AS n FROM a2 AS a, a2 AS b),\r\n\ta4 AS\r\n\t(SELECT 1 AS n FROM a3 AS a, a" +
                    "3 AS b),\r\n\tnumbers AS\r\n\t(\r\n\t\tSELECT TOP(LEN(@sort_order))\r\n\t\t\tROW_NUMBER() OVER\r" +
                    "\n\t\t\t(\r\n\t\t\t\tORDER BY (SELECT NULL)\r\n\t\t\t) AS number\r\n\t\tFROM a4\r\n\t\tORDER BY\r\n\t\t\tnum" +
                    "ber\r\n\t),\r\n\ttokens AS\r\n\t(\r\n\t\tSELECT \r\n\t\t\t\'|[\' +\r\n\t\t\t\tSUBSTRING\r\n\t\t\t\t(\r\n\t\t\t\t\t@sort" +
                    "_order,\r\n\t\t\t\t\tnumber + 1,\r\n\t\t\t\t\tCHARINDEX(\']\', @sort_order, number) - number - 1" +
                    "\r\n\t\t\t\t) + \'|]\' AS token,\r\n\t\t\tSUBSTRING\r\n\t\t\t(\r\n\t\t\t\t@sort_order,\r\n\t\t\t\tCHARINDEX(\']" +
                    "\', @sort_order, number) + 1,\r\n\t\t\t\tCOALESCE(NULLIF(CHARINDEX(\'[\', @sort_order, CH" +
                    "ARINDEX(\']\', @sort_order, number)), 0), LEN(@sort_order)) - CHARINDEX(\']\', @sort" +
                    "_order, number)\r\n\t\t\t) AS next_chunk,\r\n\t\t\tnumber\r\n\t\tFROM numbers\r\n\t\tWHERE\r\n\t\t\tSUB" +
                    "STRING(@sort_order, number, 1) = \'[\'\r\n\t),\r\n\tordered_columns AS\r\n\t(\r\n\t\tSELECT\r\n\t\t" +
                    "\tx.column_name +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN tokens.next_chunk LIKE \'%asc%\' THEN \' ASC\'" +
                    "\r\n\t\t\t\t\tWHEN tokens.next_chunk LIKE \'%desc%\' THEN \' DESC\'\r\n\t\t\t\t\tELSE \'\'\r\n\t\t\t\tEND " +
                    "AS column_name,\r\n\t\t\tROW_NUMBER() OVER\r\n\t\t\t(\r\n\t\t\t\tPARTITION BY\r\n\t\t\t\t\tx.column_nam" +
                    "e\r\n\t\t\t\tORDER BY\r\n\t\t\t\t\ttokens.number\r\n\t\t\t) AS r,\r\n\t\t\ttokens.number\r\n\t\tFROM tokens" +
                    "\r\n\t\tJOIN\r\n\t\t(\r\n\t\t\tSELECT \'[session_id]\' AS column_name\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT " +
                    "\'[physical_io]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[reads]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[ph" +
                    "ysical_reads]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[writes]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[te" +
                    "mpdb_allocations]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[tempdb_current]\'\r\n\t\t\tUNION ALL\r\n\t\t" +
                    "\tSELECT \'[CPU]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[context_switches]\'\r\n\t\t\tUNION ALL\r\n\t\t\t" +
                    "SELECT \'[used_memory]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[physical_io_delta]\'\r\n\t\t\tUNION " +
                    "ALL\r\n\t\t\tSELECT \'[reads_delta]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[physical_reads_delta]\'" +
                    "\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[writes_delta]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[tempdb_all" +
                    "ocations_delta]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[tempdb_current_delta]\'\r\n\t\t\tUNION ALL" +
                    "\r\n\t\t\tSELECT \'[CPU_delta]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[context_switches_delta]\'\r\n\t" +
                    "\t\tUNION ALL\r\n\t\t\tSELECT \'[used_memory_delta]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[tasks]\'\r" +
                    "\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[tran_start_time]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[open_tra" +
                    "n_count]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[blocking_session_id]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSEL" +
                    "ECT \'[blocked_session_count]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[percent_complete]\'\r\n\t\t\t" +
                    "UNION ALL\r\n\t\t\tSELECT \'[host_name]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[login_name]\'\r\n\t\t\tU" +
                    "NION ALL\r\n\t\t\tSELECT \'[database_name]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[start_time]\'\r\n\t" +
                    "\t\tUNION ALL\r\n\t\t\tSELECT \'[login_time]\'\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT \'[program_name]\'\r" +
                    "\n\t\t) AS x ON \r\n\t\t\tx.column_name LIKE token ESCAPE \'|\'\r\n\t)\r\n\tSELECT\r\n\t\t@sort_orde" +
                    "r = COALESCE(z.sort_order, \'\')\r\n\tFROM\r\n\t(\r\n\t\tSELECT\r\n\t\t\tSTUFF\r\n\t\t\t(\r\n\t\t\t\t(\r\n\t\t\t\t" +
                    "\tSELECT\r\n\t\t\t\t\t\t\',\' + column_name as [text()]\r\n\t\t\t\t\tFROM ordered_columns\r\n\t\t\t\t\tWH" +
                    "ERE\r\n\t\t\t\t\t\tr = 1\r\n\t\t\t\t\tORDER BY\r\n\t\t\t\t\t\tnumber\r\n\t\t\t\t\tFOR XML\r\n\t\t\t\t\t\tPATH(\'\')\r\n\t\t\t" +
                    "\t),\r\n\t\t\t\t1,\r\n\t\t\t\t1,\r\n\t\t\t\t\'\'\r\n\t\t\t) AS sort_order\r\n\t) AS z;\r\n\r\n\tCREATE TABLE #sess" +
                    "ions\r\n\t(\r\n\t\trecursion SMALLINT NOT NULL,\r\n\t\tsession_id SMALLINT NOT NULL,\r\n\t\treq" +
                    "uest_id INT NOT NULL,\r\n\t\tsession_number INT NOT NULL,\r\n\t\telapsed_time INT NOT NU" +
                    "LL,\r\n\t\tavg_elapsed_time INT NULL,\r\n\t\tphysical_io BIGINT NULL,\r\n\t\treads BIGINT NU" +
                    "LL,\r\n\t\tphysical_reads BIGINT NULL,\r\n\t\twrites BIGINT NULL,\r\n\t\ttempdb_allocations " +
                    "BIGINT NULL,\r\n\t\ttempdb_current BIGINT NULL,\r\n\t\tCPU INT NULL,\r\n\t\tthread_CPU_snaps" +
                    "hot BIGINT NULL,\r\n\t\tcontext_switches BIGINT NULL,\r\n\t\tused_memory BIGINT NOT NULL" +
                    ", \r\n\t\ttasks SMALLINT NULL,\r\n\t\tstatus VARCHAR(30) NOT NULL,\r\n\t\twait_info NVARCHAR" +
                    "(4000) NULL,\r\n\t\tlocks XML NULL,\r\n\t\ttransaction_id BIGINT NULL,\r\n\t\ttran_start_tim" +
                    "e DATETIME NULL,\r\n\t\ttran_log_writes NVARCHAR(4000) NULL,\r\n\t\topen_tran_count SMAL" +
                    "LINT NULL,\r\n\t\tsql_command XML NULL,\r\n\t\tsql_handle VARBINARY(64) NULL,\r\n\t\tstateme" +
                    "nt_start_offset INT NULL,\r\n\t\tstatement_end_offset INT NULL,\r\n\t\tsql_text XML NULL" +
                    ",\r\n\t\tplan_handle VARBINARY(64) NULL,\r\n\t\tquery_plan XML NULL,\r\n\t\tblocking_session" +
                    "_id SMALLINT NULL,\r\n\t\tblocked_session_count SMALLINT NULL,\r\n\t\tpercent_complete R" +
                    "EAL NULL,\r\n\t\thost_name sysname NULL,\r\n\t\tlogin_name sysname NOT NULL,\r\n\t\tdatabase" +
                    "_name sysname NULL,\r\n\t\tprogram_name sysname NULL,\r\n\t\tadditional_info XML NULL,\r\n" +
                    "\t\tstart_time DATETIME NOT NULL,\r\n\t\tlogin_time DATETIME NULL,\r\n\t\tlast_request_sta" +
                    "rt_time DATETIME NULL,\r\n\t\tPRIMARY KEY CLUSTERED (session_id, request_id, recursi" +
                    "on) WITH (IGNORE_DUP_KEY = ON),\r\n\t\tUNIQUE NONCLUSTERED (transaction_id, session_" +
                    "id, request_id, recursion) WITH (IGNORE_DUP_KEY = ON)\r\n\t);\r\n\r\n\tIF @return_schema" +
                    " = 0\r\n\tBEGIN;\r\n\t\t--Disable unnecessary autostats on the table\r\n\t\tCREATE STATISTI" +
                    "CS s_session_id ON #sessions (session_id)\r\n\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE;\r\n\t" +
                    "\tCREATE STATISTICS s_request_id ON #sessions (request_id)\r\n\t\tWITH SAMPLE 0 ROWS," +
                    " NORECOMPUTE;\r\n\t\tCREATE STATISTICS s_transaction_id ON #sessions (transaction_id" +
                    ")\r\n\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE;\r\n\t\tCREATE STATISTICS s_session_number ON #" +
                    "sessions (session_number)\r\n\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE;\r\n\t\tCREATE STATISTI" +
                    "CS s_status ON #sessions (status)\r\n\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE;\r\n\t\tCREATE " +
                    "STATISTICS s_start_time ON #sessions (start_time)\r\n\t\tWITH SAMPLE 0 ROWS, NORECOM" +
                    "PUTE;\r\n\t\tCREATE STATISTICS s_last_request_start_time ON #sessions (last_request_" +
                    "start_time)\r\n\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE;\r\n\t\tCREATE STATISTICS s_recursion" +
                    " ON #sessions (recursion)\r\n\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE;\r\n\r\n\t\tDECLARE @recu" +
                    "rsion SMALLINT;\r\n\t\tSET @recursion = \r\n\t\t\tCASE @delta_interval\r\n\t\t\t\tWHEN 0 THEN 1" +
                    "\r\n\t\t\t\tELSE -1\r\n\t\t\tEND;\r\n\r\n\t\tDECLARE @first_collection_ms_ticks BIGINT;\r\n\t\tDECLAR" +
                    "E @last_collection_start DATETIME;\r\n\t\tDECLARE @sys_info BIT;\r\n\t\tSET @sys_info = " +
                    "ISNULL(CONVERT(BIT, SIGN(OBJECT_ID(\'sys.dm_os_sys_info\'))), 0);\r\n\r\n\t\t--Used for " +
                    "the delta pull\r\n\t\tREDO:;\r\n\t\t\r\n\t\tIF \r\n\t\t\t@get_locks = 1 \r\n\t\t\tAND @recursion = 1\r\n" +
                    "\t\t\tAND @output_column_list LIKE \'%|[locks|]%\' ESCAPE \'|\'\r\n\t\tBEGIN;\r\n\t\t\tSELECT\r\n\t" +
                    "\t\t\ty.resource_type,\r\n\t\t\t\ty.database_name,\r\n\t\t\t\ty.object_id,\r\n\t\t\t\ty.file_id,\r\n\t\t\t" +
                    "\ty.page_type,\r\n\t\t\t\ty.hobt_id,\r\n\t\t\t\ty.allocation_unit_id,\r\n\t\t\t\ty.index_id,\r\n\t\t\t\ty" +
                    ".schema_id,\r\n\t\t\t\ty.principal_id,\r\n\t\t\t\ty.request_mode,\r\n\t\t\t\ty.request_status,\r\n\t\t" +
                    "\t\ty.session_id,\r\n\t\t\t\ty.resource_description,\r\n\t\t\t\ty.request_count,\r\n\t\t\t\ts.reques" +
                    "t_id,\r\n\t\t\t\ts.start_time,\r\n\t\t\t\tCONVERT(sysname, NULL) AS object_name,\r\n\t\t\t\tCONVER" +
                    "T(sysname, NULL) AS index_name,\r\n\t\t\t\tCONVERT(sysname, NULL) AS schema_name,\r\n\t\t\t" +
                    "\tCONVERT(sysname, NULL) AS principal_name,\r\n\t\t\t\tCONVERT(NVARCHAR(2048), NULL) AS" +
                    " query_error\r\n\t\t\tINTO #locks\r\n\t\t\tFROM\r\n\t\t\t(\r\n\t\t\t\tSELECT\r\n\t\t\t\t\tsp.spid AS session" +
                    "_id,\r\n\t\t\t\t\tCASE sp.status\r\n\t\t\t\t\t\tWHEN \'sleeping\' THEN CONVERT(INT, 0)\r\n\t\t\t\t\t\tELS" +
                    "E sp.request_id\r\n\t\t\t\t\tEND AS request_id,\r\n\t\t\t\t\tCASE sp.status\r\n\t\t\t\t\t\tWHEN \'sleep" +
                    "ing\' THEN sp.last_batch\r\n\t\t\t\t\t\tELSE COALESCE(req.start_time, sp.last_batch)\r\n\t\t\t" +
                    "\t\tEND AS start_time,\r\n\t\t\t\t\tsp.dbid\r\n\t\t\t\tFROM sys.sysprocesses AS sp\r\n\t\t\t\tOUTER A" +
                    "PPLY\r\n\t\t\t\t(\r\n\t\t\t\t\tSELECT TOP(1)\r\n\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tsp." +
                    "hostprocess > \'\'\r\n\t\t\t\t\t\t\t\tOR r.total_elapsed_time < 0\r\n\t\t\t\t\t\t\t) THEN\r\n\t\t\t\t\t\t\t\tr." +
                    "start_time\r\n\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\tDATEADD\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tms, \r\n\t\t\t\t\t\t\t\t\t100" +
                    "0 * (DATEPART(ms, DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())) / " +
                    "500) - DATEPART(ms, DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE()))," +
                    " \r\n\t\t\t\t\t\t\t\t\tDATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())\r\n\t\t\t\t\t\t\t\t" +
                    ")\r\n\t\t\t\t\t\tEND AS start_time\r\n\t\t\t\t\tFROM sys.dm_exec_requests AS r\r\n\t\t\t\t\tWHERE\r\n\t\t\t" +
                    "\t\t\tr.session_id = sp.spid\r\n\t\t\t\t\t\tAND r.request_id = sp.request_id\r\n\t\t\t\t) AS req\r" +
                    "\n\t\t\t\tWHERE\r\n\t\t\t\t\t--Process inclusive filter\r\n\t\t\t\t\t1 =\r\n\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\tWHEN @" +
                    "filter <> \'\' THEN\r\n\t\t\t\t\t\t\t\tCASE @filter_type\r\n\t\t\t\t\t\t\t\t\tWHEN \'session\' THEN\r\n\t\t\t\t" +
                    "\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(SMALLINT, @filter) = 0\r\n\t\t\t\t\t\t\t" +
                    "\t\t\t\t\tOR sp.spid = CONVERT(SMALLINT, @filter)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN 1\r\n\t\t\t\t\t\t\t\t\t\t\tEL" +
                    "SE 0\r\n\t\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t\t\tWHEN \'program\' THEN\r\n\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\tWH" +
                    "EN sp.program_name LIKE @filter THEN 1\r\n\t\t\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t" +
                    "\t\t\tWHEN \'login\' THEN\r\n\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN sp.loginame LIKE @filter T" +
                    "HEN 1\r\n\t\t\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t\t\tWHEN \'host\' THEN\r\n\t\t\t\t\t\t\t\t\t\tCA" +
                    "SE\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN sp.hostname LIKE @filter THEN 1\r\n\t\t\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\t" +
                    "\t\tEND\r\n\t\t\t\t\t\t\t\t\tWHEN \'database\' THEN\r\n\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN DB_NAME(sp" +
                    ".dbid) LIKE @filter THEN 1\r\n\t\t\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t\t\tELSE 0\r\n\t" +
                    "\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\tELSE 1\r\n\t\t\t\t\t\tEND\r\n\t\t\t\t\t--Process exclusive filter\r\n\t\t\t\t\tAND " +
                    "0 =\r\n\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\tWHEN @not_filter <> \'\' THEN\r\n\t\t\t\t\t\t\t\tCASE @not_filter_ty" +
                    "pe\r\n\t\t\t\t\t\t\t\t\tWHEN \'session\' THEN\r\n\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN sp.spid = CONV" +
                    "ERT(SMALLINT, @not_filter) THEN 1\r\n\t\t\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t\t\tWH" +
                    "EN \'program\' THEN\r\n\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN sp.program_name LIKE @not_fil" +
                    "ter THEN 1\r\n\t\t\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t\t\tWHEN \'login\' THEN\r\n\t\t\t\t\t\t" +
                    "\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN sp.loginame LIKE @not_filter THEN 1\r\n\t\t\t\t\t\t\t\t\t\t\tELSE 0" +
                    "\r\n\t\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t\t\tWHEN \'host\' THEN\r\n\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN sp.h" +
                    "ostname LIKE @not_filter THEN 1\r\n\t\t\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t\t\tWHEN" +
                    " \'database\' THEN\r\n\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN DB_NAME(sp.dbid) LIKE @not_fil" +
                    "ter THEN 1\r\n\t\t\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t" +
                    "\t\t\tELSE 0\r\n\t\t\t\t\t\tEND\r\n\t\t\t\t\tAND \r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t@show_own_spid = 1\r\n\t\t\t\t\t\tOR sp.s" +
                    "pid <> @@SPID\r\n\t\t\t\t\t)\r\n\t\t\t\t\tAND \r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t@show_system_spids = 1\r\n\t\t\t\t\t\tOR" +
                    " sp.hostprocess > \'\'\r\n\t\t\t\t\t)\r\n\t\t\t\t\tAND sp.ecid = 0\r\n\t\t\t) AS s\r\n\t\t\tINNER HASH JOI" +
                    "N\r\n\t\t\t(\r\n\t\t\t\tSELECT\r\n\t\t\t\t\tx.resource_type,\r\n\t\t\t\t\tx.database_name,\r\n\t\t\t\t\tx.object" +
                    "_id,\r\n\t\t\t\t\tx.file_id,\r\n\t\t\t\t\tCASE\r\n\t\t\t\t\t\tWHEN x.page_no = 1 OR x.page_no % 8088 =" +
                    " 0 THEN \'PFS\'\r\n\t\t\t\t\t\tWHEN x.page_no = 2 OR x.page_no % 511232 = 0 THEN \'GAM\'\r\n\t\t" +
                    "\t\t\t\tWHEN x.page_no = 3 OR (x.page_no - 1) % 511232 = 0 THEN \'SGAM\'\r\n\t\t\t\t\t\tWHEN x" +
                    ".page_no = 6 OR (x.page_no - 6) % 511232 = 0 THEN \'DCM\'\r\n\t\t\t\t\t\tWHEN x.page_no = " +
                    "7 OR (x.page_no - 7) % 511232 = 0 THEN \'BCM\'\r\n\t\t\t\t\t\tWHEN x.page_no IS NOT NULL T" +
                    "HEN \'*\'\r\n\t\t\t\t\t\tELSE NULL\r\n\t\t\t\t\tEND AS page_type,\r\n\t\t\t\t\tx.hobt_id,\r\n\t\t\t\t\tx.alloca" +
                    "tion_unit_id,\r\n\t\t\t\t\tx.index_id,\r\n\t\t\t\t\tx.schema_id,\r\n\t\t\t\t\tx.principal_id,\r\n\t\t\t\t\tx" +
                    ".request_mode,\r\n\t\t\t\t\tx.request_status,\r\n\t\t\t\t\tx.session_id,\r\n\t\t\t\t\tx.request_id,\r\n" +
                    "\t\t\t\t\tCASE\r\n\t\t\t\t\t\tWHEN COALESCE(x.object_id, x.file_id, x.hobt_id, x.allocation_u" +
                    "nit_id, x.index_id, x.schema_id, x.principal_id) IS NULL THEN NULLIF(resource_de" +
                    "scription, \'\')\r\n\t\t\t\t\t\tELSE NULL\r\n\t\t\t\t\tEND AS resource_description,\r\n\t\t\t\t\tCOUNT(*" +
                    ") AS request_count\r\n\t\t\t\tFROM\r\n\t\t\t\t(\r\n\t\t\t\t\tSELECT\r\n\t\t\t\t\t\ttl.resource_type +\r\n\t\t\t\t" +
                    "\t\t\tCASE\r\n\t\t\t\t\t\t\t\tWHEN tl.resource_subtype = \'\' THEN \'\'\r\n\t\t\t\t\t\t\t\tELSE \'.\' + tl.re" +
                    "source_subtype\r\n\t\t\t\t\t\t\tEND AS resource_type,\r\n\t\t\t\t\t\tCOALESCE(DB_NAME(tl.resource" +
                    "_database_id), N\'(null)\') AS database_name,\r\n\t\t\t\t\t\tCONVERT\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tINT," +
                    "\r\n\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\tWHEN tl.resource_type = \'OBJECT\' THEN tl.resource_associa" +
                    "ted_entity_id\r\n\t\t\t\t\t\t\t\tWHEN tl.resource_description LIKE \'%object_id = %\' THEN\r\n" +
                    "\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\tSUBSTRING\r\n\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\ttl.resource_description" +
                    ", \r\n\t\t\t\t\t\t\t\t\t\t\t(CHARINDEX(\'object_id = \', tl.resource_description) + 12), \r\n\t\t\t\t" +
                    "\t\t\t\t\t\t\tCOALESCE\r\n\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\tNULLIF\r\n\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tC" +
                    "HARINDEX(\',\', tl.resource_description, CHARINDEX(\'object_id = \', tl.resource_des" +
                    "cription) + 12),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\t\t\t), \r\n\t\t\t\t\t\t\t\t\t\t\t\tDATALENGTH(tl.res" +
                    "ource_description)+1\r\n\t\t\t\t\t\t\t\t\t\t\t) - (CHARINDEX(\'object_id = \', tl.resource_desc" +
                    "ription) + 12)\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\tELSE NULL\r\n\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t) " +
                    "AS object_id,\r\n\t\t\t\t\t\tCONVERT\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tINT,\r\n\t\t\t\t\t\t\tCASE \r\n\t\t\t\t\t\t\t\tWHEN t" +
                    "l.resource_type = \'FILE\' THEN CONVERT(INT, tl.resource_description)\r\n\t\t\t\t\t\t\t\tWHE" +
                    "N tl.resource_type IN (\'PAGE\', \'EXTENT\', \'RID\') THEN LEFT(tl.resource_descriptio" +
                    "n, CHARINDEX(\':\', tl.resource_description)-1)\r\n\t\t\t\t\t\t\t\tELSE NULL\r\n\t\t\t\t\t\t\tEND\r\n\t\t" +
                    "\t\t\t\t) AS file_id,\r\n\t\t\t\t\t\tCONVERT\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tINT,\r\n\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\tWHE" +
                    "N tl.resource_type IN (\'PAGE\', \'EXTENT\', \'RID\') THEN \r\n\t\t\t\t\t\t\t\t\tSUBSTRING\r\n\t\t\t\t\t" +
                    "\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\ttl.resource_description, \r\n\t\t\t\t\t\t\t\t\t\tCHARINDEX(\':\', tl.resource" +
                    "_description) + 1, \r\n\t\t\t\t\t\t\t\t\t\tCOALESCE\r\n\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\tNULLIF\r\n\t\t\t\t\t\t\t" +
                    "\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\tCHARINDEX(\':\', tl.resource_description, CHARINDEX(\':\', tl.res" +
                    "ource_description) + 1), \r\n\t\t\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\t\t), \r\n\t\t\t\t\t\t\t\t\t\t\tDATALENGTH(" +
                    "tl.resource_description)+1\r\n\t\t\t\t\t\t\t\t\t\t) - (CHARINDEX(\':\', tl.resource_descriptio" +
                    "n) + 1)\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\tELSE NULL\r\n\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t) AS page_no,\r\n\t\t\t\t\t\tC" +
                    "ASE\r\n\t\t\t\t\t\t\tWHEN tl.resource_type IN (\'PAGE\', \'KEY\', \'RID\', \'HOBT\') THEN tl.reso" +
                    "urce_associated_entity_id\r\n\t\t\t\t\t\t\tELSE NULL\r\n\t\t\t\t\t\tEND AS hobt_id,\r\n\t\t\t\t\t\tCASE\r\n" +
                    "\t\t\t\t\t\t\tWHEN tl.resource_type = \'ALLOCATION_UNIT\' THEN tl.resource_associated_ent" +
                    "ity_id\r\n\t\t\t\t\t\t\tELSE NULL\r\n\t\t\t\t\t\tEND AS allocation_unit_id,\r\n\t\t\t\t\t\tCONVERT\r\n\t\t\t\t\t" +
                    "\t(\r\n\t\t\t\t\t\t\tINT,\r\n\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t\t\t\t/*TODO: Deal with server pr" +
                    "incipals*/ \r\n\t\t\t\t\t\t\t\t\ttl.resource_subtype <> \'SERVER_PRINCIPAL\' \r\n\t\t\t\t\t\t\t\t\tAND t" +
                    "l.resource_description LIKE \'%index_id or stats_id = %\' THEN\r\n\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t" +
                    "\t\t\t\tSUBSTRING\r\n\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\ttl.resource_description, \r\n\t\t\t\t\t\t\t\t\t\t\t(CH" +
                    "ARINDEX(\'index_id or stats_id = \', tl.resource_description) + 23), \r\n\t\t\t\t\t\t\t\t\t\t\t" +
                    "COALESCE\r\n\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\tNULLIF\r\n\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCHARINDE" +
                    "X(\',\', tl.resource_description, CHARINDEX(\'index_id or stats_id = \', tl.resource" +
                    "_description) + 23), \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\t\t\t), \r\n\t\t\t\t\t\t\t\t\t\t\t\tDATALENGTH(t" +
                    "l.resource_description)+1\r\n\t\t\t\t\t\t\t\t\t\t\t) - (CHARINDEX(\'index_id or stats_id = \', " +
                    "tl.resource_description) + 23)\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\tELSE NULL\r\n\t\t\t\t" +
                    "\t\t\tEND \r\n\t\t\t\t\t\t) AS index_id,\r\n\t\t\t\t\t\tCONVERT\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tINT,\r\n\t\t\t\t\t\t\tCASE\r" +
                    "\n\t\t\t\t\t\t\t\tWHEN tl.resource_description LIKE \'%schema_id = %\' THEN\r\n\t\t\t\t\t\t\t\t\t(\r\n\t\t" +
                    "\t\t\t\t\t\t\t\tSUBSTRING\r\n\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\ttl.resource_description, \r\n\t\t\t\t\t\t\t\t\t\t" +
                    "\t(CHARINDEX(\'schema_id = \', tl.resource_description) + 12), \r\n\t\t\t\t\t\t\t\t\t\t\tCOALESC" +
                    "E\r\n\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\tNULLIF\r\n\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCHARINDEX(\',\', " +
                    "tl.resource_description, CHARINDEX(\'schema_id = \', tl.resource_description) + 12" +
                    "), \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\t\t\t), \r\n\t\t\t\t\t\t\t\t\t\t\t\tDATALENGTH(tl.resource_descrip" +
                    "tion)+1\r\n\t\t\t\t\t\t\t\t\t\t\t) - (CHARINDEX(\'schema_id = \', tl.resource_description) + 12" +
                    ")\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\tELSE NULL\r\n\t\t\t\t\t\t\tEND \r\n\t\t\t\t\t\t) AS schema_id" +
                    ",\r\n\t\t\t\t\t\tCONVERT\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tINT,\r\n\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\tWHEN tl.resource_de" +
                    "scription LIKE \'%principal_id = %\' THEN\r\n\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\tSUBSTRING\r\n\t\t\t\t\t\t" +
                    "\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\ttl.resource_description, \r\n\t\t\t\t\t\t\t\t\t\t\t(CHARINDEX(\'principal_id" +
                    " = \', tl.resource_description) + 15), \r\n\t\t\t\t\t\t\t\t\t\t\tCOALESCE\r\n\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t" +
                    "\t\t\t\t\t\t\tNULLIF\r\n\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCHARINDEX(\',\', tl.resource_descriptio" +
                    "n, CHARINDEX(\'principal_id = \', tl.resource_description) + 15), \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t0" +
                    "\r\n\t\t\t\t\t\t\t\t\t\t\t\t), \r\n\t\t\t\t\t\t\t\t\t\t\t\tDATALENGTH(tl.resource_description)+1\r\n\t\t\t\t\t\t\t\t\t\t" +
                    "\t) - (CHARINDEX(\'principal_id = \', tl.resource_description) + 15)\r\n\t\t\t\t\t\t\t\t\t\t)\r\n" +
                    "\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\tELSE NULL\r\n\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t) AS principal_id,\r\n\t\t\t\t\t\ttl.re" +
                    "quest_mode,\r\n\t\t\t\t\t\ttl.request_status,\r\n\t\t\t\t\t\ttl.request_session_id AS session_id" +
                    ",\r\n\t\t\t\t\t\ttl.request_request_id AS request_id,\r\n\r\n\t\t\t\t\t\t/*TODO: Applocks, other r" +
                    "esource_descriptions*/\r\n\t\t\t\t\t\tRTRIM(tl.resource_description) AS resource_descrip" +
                    "tion,\r\n\t\t\t\t\t\ttl.resource_associated_entity_id\r\n\t\t\t\t\t\t/**************************" +
                    "*******************/\r\n\t\t\t\t\tFROM \r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tSELECT \r\n\t\t\t\t\t\t\trequest_session_" +
                    "id,\r\n\t\t\t\t\t\t\tCONVERT(VARCHAR(120), resource_type) COLLATE Latin1_General_Bin2 AS " +
                    "resource_type,\r\n\t\t\t\t\t\t\tCONVERT(VARCHAR(120), resource_subtype) COLLATE Latin1_Ge" +
                    "neral_Bin2 AS resource_subtype,\r\n\t\t\t\t\t\t\tresource_database_id,\r\n\t\t\t\t\t\t\tCONVERT(VA" +
                    "RCHAR(512), resource_description) COLLATE Latin1_General_Bin2 AS resource_descri" +
                    "ption,\r\n\t\t\t\t\t\t\tresource_associated_entity_id,\r\n\t\t\t\t\t\t\tCONVERT(VARCHAR(120), requ" +
                    "est_mode) COLLATE Latin1_General_Bin2 AS request_mode,\r\n\t\t\t\t\t\t\tCONVERT(VARCHAR(1" +
                    "20), request_status) COLLATE Latin1_General_Bin2 AS request_status,\r\n\t\t\t\t\t\t\trequ" +
                    "est_request_id\r\n\t\t\t\t\t\tFROM sys.dm_tran_locks\r\n\t\t\t\t\t) AS tl\r\n\t\t\t\t) AS x\r\n\t\t\t\tGROU" +
                    "P BY\r\n\t\t\t\t\tx.resource_type,\r\n\t\t\t\t\tx.database_name,\r\n\t\t\t\t\tx.object_id,\r\n\t\t\t\t\tx.fi" +
                    "le_id,\r\n\t\t\t\t\tCASE\r\n\t\t\t\t\t\tWHEN x.page_no = 1 OR x.page_no % 8088 = 0 THEN \'PFS\'\r\n" +
                    "\t\t\t\t\t\tWHEN x.page_no = 2 OR x.page_no % 511232 = 0 THEN \'GAM\'\r\n\t\t\t\t\t\tWHEN x.page" +
                    "_no = 3 OR (x.page_no - 1) % 511232 = 0 THEN \'SGAM\'\r\n\t\t\t\t\t\tWHEN x.page_no = 6 OR" +
                    " (x.page_no - 6) % 511232 = 0 THEN \'DCM\'\r\n\t\t\t\t\t\tWHEN x.page_no = 7 OR (x.page_no" +
                    " - 7) % 511232 = 0 THEN \'BCM\'\r\n\t\t\t\t\t\tWHEN x.page_no IS NOT NULL THEN \'*\'\r\n\t\t\t\t\t\t" +
                    "ELSE NULL\r\n\t\t\t\t\tEND,\r\n\t\t\t\t\tx.hobt_id,\r\n\t\t\t\t\tx.allocation_unit_id,\r\n\t\t\t\t\tx.index_" +
                    "id,\r\n\t\t\t\t\tx.schema_id,\r\n\t\t\t\t\tx.principal_id,\r\n\t\t\t\t\tx.request_mode,\r\n\t\t\t\t\tx.reque" +
                    "st_status,\r\n\t\t\t\t\tx.session_id,\r\n\t\t\t\t\tx.request_id,\r\n\t\t\t\t\tCASE\r\n\t\t\t\t\t\tWHEN COALES" +
                    "CE(x.object_id, x.file_id, x.hobt_id, x.allocation_unit_id, x.index_id, x.schema" +
                    "_id, x.principal_id) IS NULL THEN NULLIF(resource_description, \'\')\r\n\t\t\t\t\t\tELSE N" +
                    "ULL\r\n\t\t\t\t\tEND\r\n\t\t\t) AS y ON\r\n\t\t\t\ty.session_id = s.session_id\r\n\t\t\t\tAND y.request_" +
                    "id = s.request_id\r\n\t\t\tOPTION (HASH GROUP);\r\n\r\n\t\t\t--Disable unnecessary autostats" +
                    " on the table\r\n\t\t\tCREATE STATISTICS s_database_name ON #locks (database_name)\r\n\t" +
                    "\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE;\r\n\t\t\tCREATE STATISTICS s_object_id ON #locks (" +
                    "object_id)\r\n\t\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE;\r\n\t\t\tCREATE STATISTICS s_hobt_id " +
                    "ON #locks (hobt_id)\r\n\t\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE;\r\n\t\t\tCREATE STATISTICS s" +
                    "_allocation_unit_id ON #locks (allocation_unit_id)\r\n\t\t\tWITH SAMPLE 0 ROWS, NOREC" +
                    "OMPUTE;\r\n\t\t\tCREATE STATISTICS s_index_id ON #locks (index_id)\r\n\t\t\tWITH SAMPLE 0 " +
                    "ROWS, NORECOMPUTE;\r\n\t\t\tCREATE STATISTICS s_schema_id ON #locks (schema_id)\r\n\t\t\tW" +
                    "ITH SAMPLE 0 ROWS, NORECOMPUTE;\r\n\t\t\tCREATE STATISTICS s_principal_id ON #locks (" +
                    "principal_id)\r\n\t\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE;\r\n\t\t\tCREATE STATISTICS s_reque" +
                    "st_id ON #locks (request_id)\r\n\t\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE;\r\n\t\t\tCREATE STA" +
                    "TISTICS s_start_time ON #locks (start_time)\r\n\t\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE;" +
                    "\r\n\t\t\tCREATE STATISTICS s_resource_type ON #locks (resource_type)\r\n\t\t\tWITH SAMPLE" +
                    " 0 ROWS, NORECOMPUTE;\r\n\t\t\tCREATE STATISTICS s_object_name ON #locks (object_name" +
                    ")\r\n\t\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE;\r\n\t\t\tCREATE STATISTICS s_schema_name ON #l" +
                    "ocks (schema_name)\r\n\t\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE;\r\n\t\t\tCREATE STATISTICS s_" +
                    "page_type ON #locks (page_type)\r\n\t\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE;\r\n\t\t\tCREATE " +
                    "STATISTICS s_request_mode ON #locks (request_mode)\r\n\t\t\tWITH SAMPLE 0 ROWS, NOREC" +
                    "OMPUTE;\r\n\t\t\tCREATE STATISTICS s_request_status ON #locks (request_status)\r\n\t\t\tWI" +
                    "TH SAMPLE 0 ROWS, NORECOMPUTE;\r\n\t\t\tCREATE STATISTICS s_resource_description ON #" +
                    "locks (resource_description)\r\n\t\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE;\r\n\t\t\tCREATE STA" +
                    "TISTICS s_index_name ON #locks (index_name)\r\n\t\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE;" +
                    "\r\n\t\t\tCREATE STATISTICS s_principal_name ON #locks (principal_name)\r\n\t\t\tWITH SAMP" +
                    "LE 0 ROWS, NORECOMPUTE;\r\n\t\tEND;\r\n\t\t\r\n\t\tDECLARE \r\n\t\t\t@sql VARCHAR(MAX), \r\n\t\t\t@sql" +
                    "_n NVARCHAR(MAX);\r\n\r\n\t\tSET @sql = \r\n\t\t\tCONVERT(VARCHAR(MAX), \'\') +\r\n\t\t\t\'DECLARE " +
                    "@blocker BIT;\r\n\t\t\tSET @blocker = 0;\r\n\t\t\tDECLARE @i INT;\r\n\t\t\tSET @i = 2147483647;" +
                    "\r\n\r\n\t\t\tDECLARE @sessions TABLE\r\n\t\t\t(\r\n\t\t\t\tsession_id SMALLINT NOT NULL,\r\n\t\t\t\treq" +
                    "uest_id INT NOT NULL,\r\n\t\t\t\tlogin_time DATETIME,\r\n\t\t\t\tlast_request_end_time DATET" +
                    "IME,\r\n\t\t\t\tstatus VARCHAR(30),\r\n\t\t\t\tstatement_start_offset INT,\r\n\t\t\t\tstatement_en" +
                    "d_offset INT,\r\n\t\t\t\tsql_handle BINARY(20),\r\n\t\t\t\thost_name NVARCHAR(128),\r\n\t\t\t\tlog" +
                    "in_name NVARCHAR(128),\r\n\t\t\t\tprogram_name NVARCHAR(128),\r\n\t\t\t\tdatabase_id SMALLIN" +
                    "T,\r\n\t\t\t\tmemory_usage INT,\r\n\t\t\t\topen_tran_count SMALLINT, \r\n\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t" +
                    "\t\t\tWHEN \r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t@get_task_info <> 0 \r\n\t\t\t\t\t\tOR @find_block_leaders = 1 \r" +
                    "\n\t\t\t\t\t) THEN\r\n\t\t\t\t\t\t\'wait_type NVARCHAR(32),\r\n\t\t\t\t\t\twait_resource NVARCHAR(256)," +
                    "\r\n\t\t\t\t\t\twait_time BIGINT, \r\n\t\t\t\t\t\t\'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'\'\r\n\t\t\t\tEND +\r\n\t\t\t\t\'block" +
                    "ed SMALLINT,\r\n\t\t\t\tis_user_process BIT,\r\n\t\t\t\tcmd VARCHAR(32),\r\n\t\t\t\tPRIMARY KEY CL" +
                    "USTERED (session_id, request_id) WITH (IGNORE_DUP_KEY = ON)\r\n\t\t\t);\r\n\r\n\t\t\tDECLARE" +
                    " @blockers TABLE\r\n\t\t\t(\r\n\t\t\t\tsession_id INT NOT NULL PRIMARY KEY WITH (IGNORE_DUP" +
                    "_KEY = ON)\r\n\t\t\t);\r\n\r\n\t\t\tBLOCKERS:;\r\n\r\n\t\t\tINSERT @sessions\r\n\t\t\t(\r\n\t\t\t\tsession_id," +
                    "\r\n\t\t\t\trequest_id,\r\n\t\t\t\tlogin_time,\r\n\t\t\t\tlast_request_end_time,\r\n\t\t\t\tstatus,\r\n\t\t\t" +
                    "\tstatement_start_offset,\r\n\t\t\t\tstatement_end_offset,\r\n\t\t\t\tsql_handle,\r\n\t\t\t\thost_n" +
                    "ame,\r\n\t\t\t\tlogin_name,\r\n\t\t\t\tprogram_name,\r\n\t\t\t\tdatabase_id,\r\n\t\t\t\tmemory_usage,\r\n\t" +
                    "\t\t\topen_tran_count, \r\n\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t@get_task_inf" +
                    "o <> 0\r\n\t\t\t\t\t\tOR @find_block_leaders = 1 \r\n\t\t\t\t\t) THEN\r\n\t\t\t\t\t\t\'wait_type,\r\n\t\t\t\t\t" +
                    "\twait_resource,\r\n\t\t\t\t\t\twait_time, \r\n\t\t\t\t\t\t\'\r\n\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\'\'\r\n\t\t\t\tEND +\r\n\t\t\t" +
                    "\t\'blocked,\r\n\t\t\t\tis_user_process,\r\n\t\t\t\tcmd \r\n\t\t\t)\r\n\t\t\tSELECT TOP(@i)\r\n\t\t\t\tspy.ses" +
                    "sion_id,\r\n\t\t\t\tspy.request_id,\r\n\t\t\t\tspy.login_time,\r\n\t\t\t\tspy.last_request_end_tim" +
                    "e,\r\n\t\t\t\tspy.status,\r\n\t\t\t\tspy.statement_start_offset,\r\n\t\t\t\tspy.statement_end_offs" +
                    "et,\r\n\t\t\t\tspy.sql_handle,\r\n\t\t\t\tspy.host_name,\r\n\t\t\t\tspy.login_name,\r\n\t\t\t\tspy.progr" +
                    "am_name,\r\n\t\t\t\tspy.database_id,\r\n\t\t\t\tspy.memory_usage,\r\n\t\t\t\tspy.open_tran_count,\r" +
                    "\n\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t@get_task_info <> 0  \r\n\t\t\t\t\t\tOR @f" +
                    "ind_block_leaders = 1 \r\n\t\t\t\t\t) THEN\r\n\t\t\t\t\t\t\'spy.wait_type,\r\n\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\tW" +
                    "HEN\r\n\t\t\t\t\t\t\t\tspy.wait_type LIKE N\'\'PAGE%LATCH_%\'\'\r\n\t\t\t\t\t\t\t\tOR spy.wait_type = N\'" +
                    "\'CXPACKET\'\'\r\n\t\t\t\t\t\t\t\tOR spy.wait_type LIKE N\'\'LATCH[_]%\'\'\r\n\t\t\t\t\t\t\t\tOR spy.wait_t" +
                    "ype = N\'\'OLEDB\'\' THEN\r\n\t\t\t\t\t\t\t\t\tspy.wait_resource\r\n\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\tNULL\r\n\t\t" +
                    "\t\t\t\tEND AS wait_resource,\r\n\t\t\t\t\t\tspy.wait_time, \r\n\t\t\t\t\t\t\'\r\n\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\'\'\r\n" +
                    "\t\t\t\tEND +\r\n\t\t\t\t\'spy.blocked,\r\n\t\t\t\tspy.is_user_process,\r\n\t\t\t\tspy.cmd\r\n\t\t\tFROM\r\n\t\t" +
                    "\t(\r\n\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\tspx.*, \r\n\t\t\t\t\t\' +\r\n\t\t\t\t\tCASE\r\n\t\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t(\r" +
                    "\n\t\t\t\t\t\t\t@get_task_info <> 0 \r\n\t\t\t\t\t\t\tOR @find_block_leaders = 1 \r\n\t\t\t\t\t\t) THEN\r\n" +
                    "\t\t\t\t\t\t\t\'ROW_NUMBER() OVER\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tPARTITION BY\r\n\t\t\t\t\t\t\t\t\tspx.session_" +
                    "id,\r\n\t\t\t\t\t\t\t\t\tspx.request_id\r\n\t\t\t\t\t\t\t\tORDER BY\r\n\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\tWHEN sp" +
                    "x.wait_type LIKE N\'\'LCK[_]%\'\' THEN \r\n\t\t\t\t\t\t\t\t\t\t\t1\r\n\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t99" +
                    "\r\n\t\t\t\t\t\t\t\t\tEND,\r\n\t\t\t\t\t\t\t\t\tspx.wait_time DESC,\r\n\t\t\t\t\t\t\t\t\tspx.blocked DESC\r\n\t\t\t\t\t\t" +
                    "\t) AS r \r\n\t\t\t\t\t\t\t\'\r\n\t\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\t\'1 AS r \r\n\t\t\t\t\t\t\t\'\r\n\t\t\t\t\tEND +\r\n\t\t\t\t\'FRO" +
                    "M\r\n\t\t\t\t(\r\n\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\tsp0.session_id,\r\n\t\t\t\t\t\tsp0.request_id,\r\n\t\t\t" +
                    "\t\t\tsp0.login_time,\r\n\t\t\t\t\t\tsp0.last_request_end_time,\r\n\t\t\t\t\t\tLOWER(sp0.status) AS" +
                    " status,\r\n\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\tWHEN sp0.cmd = \'\'CREATE INDEX\'\' THEN\r\n\t\t\t\t\t\t\t\t0\r\n\t\t" +
                    "\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\tsp0.stmt_start\r\n\t\t\t\t\t\tEND AS statement_start_offset,\r\n\t\t\t\t\t\tC" +
                    "ASE\r\n\t\t\t\t\t\t\tWHEN sp0.cmd = N\'\'CREATE INDEX\'\' THEN\r\n\t\t\t\t\t\t\t\t-1\r\n\t\t\t\t\t\t\tELSE\r\n\t\t\t\t" +
                    "\t\t\t\tCOALESCE(NULLIF(sp0.stmt_end, 0), -1)\r\n\t\t\t\t\t\tEND AS statement_end_offset,\r\n\t" +
                    "\t\t\t\t\tsp0.sql_handle,\r\n\t\t\t\t\t\tsp0.host_name,\r\n\t\t\t\t\t\tsp0.login_name,\r\n\t\t\t\t\t\tsp0.pro" +
                    "gram_name,\r\n\t\t\t\t\t\tsp0.database_id,\r\n\t\t\t\t\t\tsp0.memory_usage,\r\n\t\t\t\t\t\tsp0.open_tran" +
                    "_count, \r\n\t\t\t\t\t\t\' +\r\n\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t@get_task_info " +
                    "<> 0 \r\n\t\t\t\t\t\t\t\tOR @find_block_leaders = 1 \r\n\t\t\t\t\t\t\t) THEN\r\n\t\t\t\t\t\t\t\t\'CASE\r\n\t\t\t\t\t\t" +
                    "\t\t\tWHEN sp0.wait_time > 0 AND sp0.wait_type <> N\'\'CXPACKET\'\' THEN\r\n\t\t\t\t\t\t\t\t\t\tsp0" +
                    ".wait_type\r\n\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\tNULL\r\n\t\t\t\t\t\t\t\tEND AS wait_type,\r\n\t\t\t\t\t\t\t\tCA" +
                    "SE\r\n\t\t\t\t\t\t\t\t\tWHEN sp0.wait_time > 0 AND sp0.wait_type <> N\'\'CXPACKET\'\' THEN \r\n\t\t" +
                    "\t\t\t\t\t\t\t\tsp0.wait_resource\r\n\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\tNULL\r\n\t\t\t\t\t\t\t\tEND AS wait_re" +
                    "source,\r\n\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN sp0.wait_type <> N\'\'CXPACKET\'\' THEN\r\n\t\t\t\t\t\t" +
                    "\t\t\t\tsp0.wait_time\r\n\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\tEND AS wait_time, \r\n\t\t\t\t\t" +
                    "\t\t\t\'\r\n\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\'\'\r\n\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\t\'sp0.blocked,\r\n\t\t\t\t\t\tsp0.is_us" +
                    "er_process,\r\n\t\t\t\t\t\tsp0.cmd\r\n\t\t\t\t\tFROM\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\tsp1." +
                    "session_id,\r\n\t\t\t\t\t\t\tsp1.request_id,\r\n\t\t\t\t\t\t\tsp1.login_time,\r\n\t\t\t\t\t\t\tsp1.last_req" +
                    "uest_end_time,\r\n\t\t\t\t\t\t\tsp1.status,\r\n\t\t\t\t\t\t\tsp1.cmd,\r\n\t\t\t\t\t\t\tsp1.stmt_start,\r\n\t\t\t" +
                    "\t\t\t\tsp1.stmt_end,\r\n\t\t\t\t\t\t\tMAX(NULLIF(sp1.sql_handle, 0x00)) OVER (PARTITION BY s" +
                    "p1.session_id, sp1.request_id) AS sql_handle,\r\n\t\t\t\t\t\t\tsp1.host_name,\r\n\t\t\t\t\t\t\tMAX" +
                    "(sp1.login_name) OVER (PARTITION BY sp1.session_id, sp1.request_id) AS login_nam" +
                    "e,\r\n\t\t\t\t\t\t\tsp1.program_name,\r\n\t\t\t\t\t\t\tsp1.database_id,\r\n\t\t\t\t\t\t\tMAX(sp1.memory_usa" +
                    "ge)  OVER (PARTITION BY sp1.session_id, sp1.request_id) AS memory_usage,\r\n\t\t\t\t\t\t" +
                    "\tMAX(sp1.open_tran_count)  OVER (PARTITION BY sp1.session_id, sp1.request_id) AS" +
                    " open_tran_count,\r\n\t\t\t\t\t\t\tsp1.wait_type,\r\n\t\t\t\t\t\t\tsp1.wait_resource,\r\n\t\t\t\t\t\t\tsp1." +
                    "wait_time,\r\n\t\t\t\t\t\t\tsp1.blocked,\r\n\t\t\t\t\t\t\tsp1.hostprocess,\r\n\t\t\t\t\t\t\tsp1.is_user_pro" +
                    "cess\r\n\t\t\t\t\t\tFROM\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\t\tsp2.spid AS session_id" +
                    ",\r\n\t\t\t\t\t\t\t\tCASE sp2.status\r\n\t\t\t\t\t\t\t\t\tWHEN \'\'sleeping\'\' THEN\r\n\t\t\t\t\t\t\t\t\t\tCONVERT(I" +
                    "NT, 0)\r\n\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\tsp2.request_id\r\n\t\t\t\t\t\t\t\tEND AS request_id,\r\n\t\t\t" +
                    "\t\t\t\t\tMAX(sp2.login_time) AS login_time,\r\n\t\t\t\t\t\t\t\tMAX(sp2.last_batch) AS last_req" +
                    "uest_end_time,\r\n\t\t\t\t\t\t\t\tMAX(CONVERT(VARCHAR(30), RTRIM(sp2.status)) COLLATE Lati" +
                    "n1_General_Bin2) AS status,\r\n\t\t\t\t\t\t\t\tMAX(CONVERT(VARCHAR(32), RTRIM(sp2.cmd)) CO" +
                    "LLATE Latin1_General_Bin2) AS cmd,\r\n\t\t\t\t\t\t\t\tMAX(sp2.stmt_start) AS stmt_start,\r\n" +
                    "\t\t\t\t\t\t\t\tMAX(sp2.stmt_end) AS stmt_end,\r\n\t\t\t\t\t\t\t\tMAX(sp2.sql_handle) AS sql_handl" +
                    "e,\r\n\t\t\t\t\t\t\t\tMAX(CONVERT(sysname, RTRIM(sp2.hostname)) COLLATE SQL_Latin1_General" +
                    "_CP1_CI_AS) AS host_name,\r\n\t\t\t\t\t\t\t\tMAX(CONVERT(sysname, RTRIM(sp2.loginame)) COL" +
                    "LATE SQL_Latin1_General_CP1_CI_AS) AS login_name,\r\n\t\t\t\t\t\t\t\tMAX\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t" +
                    "\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\tWHEN blk.queue_id IS NOT NULL THEN\r\n\t\t\t\t\t\t\t\t\t\t\tN\'\'Service Br" +
                    "oker\r\n\t\t\t\t\t\t\t\t\t\t\t\tdatabase_id: \'\' + CONVERT(NVARCHAR, blk.database_id) +\r\n\t\t\t\t\t\t" +
                    "\t\t\t\t\t\tN\'\' queue_id: \'\' + CONVERT(NVARCHAR, blk.queue_id)\r\n\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t" +
                    "\t\t\t\t\tCONVERT\r\n\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\tsysname,\r\n\t\t\t\t\t\t\t\t\t\t\t\tRTRIM(sp2.program_" +
                    "name)\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\tEND COLLATE SQL_Latin1_General_CP1_CI_AS\r\n\t\t\t\t\t\t\t\t" +
                    ") AS program_name,\r\n\t\t\t\t\t\t\t\tMAX(sp2.dbid) AS database_id,\r\n\t\t\t\t\t\t\t\tMAX(sp2.memus" +
                    "age) AS memory_usage,\r\n\t\t\t\t\t\t\t\tMAX(sp2.open_tran) AS open_tran_count,\r\n\t\t\t\t\t\t\t\tR" +
                    "TRIM(sp2.lastwaittype) AS wait_type,\r\n\t\t\t\t\t\t\t\tRTRIM(sp2.waitresource) AS wait_re" +
                    "source,\r\n\t\t\t\t\t\t\t\tMAX(sp2.waittime) AS wait_time,\r\n\t\t\t\t\t\t\t\tCOALESCE(NULLIF(sp2.bl" +
                    "ocked, sp2.spid), 0) AS blocked,\r\n\t\t\t\t\t\t\t\tMAX\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t" +
                    "\t\t\tWHEN blk.session_id = sp2.spid THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\'\'blocker\'\'\r\n\t\t\t\t\t\t\t\t\t\tELSE\r\n" +
                    "\t\t\t\t\t\t\t\t\t\t\tRTRIM(sp2.hostprocess)\r\n\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t\t) AS hostprocess,\r\n\t\t\t\t" +
                    "\t\t\t\tCONVERT\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tBIT,\r\n\t\t\t\t\t\t\t\t\tMAX\r\n\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\tCASE\r" +
                    "\n\t\t\t\t\t\t\t\t\t\t\tWHEN sp2.hostprocess > \'\'\'\' THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t1\r\n\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t) AS is_user_process\r\n\t\t\t\t\t\t\tFRO" +
                    "M\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\t\t\tsession_id,\r\n\t\t\t\t\t\t\t\t\tCONVERT(INT," +
                    " NULL) AS queue_id,\r\n\t\t\t\t\t\t\t\t\tCONVERT(INT, NULL) AS database_id\r\n\t\t\t\t\t\t\t\tFROM @b" +
                    "lockers\r\n\r\n\t\t\t\t\t\t\t\tUNION ALL\r\n\r\n\t\t\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\t\t\tCONVERT(SMALLIN" +
                    "T, 0),\r\n\t\t\t\t\t\t\t\t\tCONVERT(INT, NULL) AS queue_id,\r\n\t\t\t\t\t\t\t\t\tCONVERT(INT, NULL) AS" +
                    " database_id\r\n\t\t\t\t\t\t\t\tWHERE\r\n\t\t\t\t\t\t\t\t\t@blocker = 0\r\n\r\n\t\t\t\t\t\t\t\tUNION ALL\r\n\r\n\t\t\t\t\t" +
                    "\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\t\t\tCONVERT(SMALLINT, spid),\r\n\t\t\t\t\t\t\t\t\tqueue_id,\r\n\t\t\t\t\t\t" +
                    "\t\t\tdatabase_id\r\n\t\t\t\t\t\t\t\tFROM sys.dm_broker_activated_tasks\r\n\t\t\t\t\t\t\t\tWHERE\r\n\t\t\t\t\t" +
                    "\t\t\t\t@blocker = 0\r\n\t\t\t\t\t\t\t) AS blk\r\n\t\t\t\t\t\t\tINNER JOIN sys.sysprocesses AS sp2 ON\r" +
                    "\n\t\t\t\t\t\t\t\tsp2.spid = blk.session_id\r\n\t\t\t\t\t\t\t\tOR\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tblk.session_" +
                    "id = 0\r\n\t\t\t\t\t\t\t\t\tAND @blocker = 0\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\' +\r\n\t\t\t\t\t\t\tCASE \r\n\t\t\t\t\t\t\t\t" +
                    "WHEN \r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t@get_task_info = 0 \r\n\t\t\t\t\t\t\t\t\tAND @find_block_leaders" +
                    " = 0\r\n\t\t\t\t\t\t\t\t) THEN\r\n\t\t\t\t\t\t\t\t\t\'WHERE\r\n\t\t\t\t\t\t\t\t\t\tsp2.ecid = 0 \r\n\t\t\t\t\t\t\t\t\t\' \r\n\t\t\t" +
                    "\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\'\'\r\n\t\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\t\t\'GROUP BY\r\n\t\t\t\t\t\t\t\tsp2.spid,\r\n\t\t\t\t\t" +
                    "\t\t\tCASE sp2.status\r\n\t\t\t\t\t\t\t\t\tWHEN \'\'sleeping\'\' THEN\r\n\t\t\t\t\t\t\t\t\t\tCONVERT(INT, 0)\r\n" +
                    "\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\tsp2.request_id\r\n\t\t\t\t\t\t\t\tEND,\r\n\t\t\t\t\t\t\t\tRTRIM(sp2.lastwai" +
                    "ttype),\r\n\t\t\t\t\t\t\t\tRTRIM(sp2.waitresource),\r\n\t\t\t\t\t\t\t\tCOALESCE(NULLIF(sp2.blocked, " +
                    "sp2.spid), 0)\r\n\t\t\t\t\t\t) AS sp1\r\n\t\t\t\t\t) AS sp0\r\n\t\t\t\t\tWHERE\r\n\t\t\t\t\t\t@blocker = 1\r\n\t\t" +
                    "\t\t\t\tOR\r\n\t\t\t\t\t\t(1=1 \r\n\t\t\t\t\t\t\' +\r\n\t\t\t\t\t\t\t--inclusive filter\r\n\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t" +
                    "WHEN @filter <> \'\' THEN\r\n\t\t\t\t\t\t\t\t\tCASE @filter_type\r\n\t\t\t\t\t\t\t\t\t\tWHEN \'session\' TH" +
                    "EN\r\n\t\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\tWHEN CONVERT(SMALLINT, @filter) <> 0 THEN\r\n\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\'AND sp0.session_id = CONVERT(SMALLINT, @filter) \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t" +
                    "\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\'\'\r\n\t\t\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t\t\t\tWHEN \'program\' THEN\r\n\t\t" +
                    "\t\t\t\t\t\t\t\t\t\'AND sp0.program_name LIKE @filter \r\n\t\t\t\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t\t\t\t\t\t\tWHEN \'logi" +
                    "n\' THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\'AND sp0.login_name LIKE @filter \r\n\t\t\t\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t\t\t\t\t\t\tW" +
                    "HEN \'host\' THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\'AND sp0.host_name LIKE @filter \r\n\t\t\t\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t" +
                    "\t\t\t\t\t\tWHEN \'database\' THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\'AND DB_NAME(sp0.database_id) LIKE @filte" +
                    "r \r\n\t\t\t\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\'\'\r\n\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t\tELSE\r\n\t\t\t" +
                    "\t\t\t\t\t\t\'\'\r\n\t\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\t\t--exclusive filter\r\n\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\tWHEN @no" +
                    "t_filter <> \'\' THEN\r\n\t\t\t\t\t\t\t\t\tCASE @not_filter_type\r\n\t\t\t\t\t\t\t\t\t\tWHEN \'session\' TH" +
                    "EN\r\n\t\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\tWHEN CONVERT(SMALLINT, @not_filter) <> 0 THEN\r\n" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t\'AND sp0.session_id <> CONVERT(SMALLINT, @not_filter) \r\n\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\'\r\n\t\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\'\'\r\n\t\t\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t\t\t\tWHEN \'program\'" +
                    " THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\'AND sp0.program_name NOT LIKE @not_filter \r\n\t\t\t\t\t\t\t\t\t\t\t\'\r\n\t\t\t" +
                    "\t\t\t\t\t\t\tWHEN \'login\' THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\'AND sp0.login_name NOT LIKE @not_filter \r\n" +
                    "\t\t\t\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t\t\t\t\t\t\tWHEN \'host\' THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\'AND sp0.host_name NOT LIKE" +
                    " @not_filter \r\n\t\t\t\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t\t\t\t\t\t\tWHEN \'database\' THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\'AND DB_" +
                    "NAME(sp0.database_id) NOT LIKE @not_filter \r\n\t\t\t\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t" +
                    "\t\t\t\t\t\t\'\'\r\n\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\'\'\r\n\t\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\t\tCASE @sh" +
                    "ow_own_spid\r\n\t\t\t\t\t\t\t\tWHEN 1 THEN\r\n\t\t\t\t\t\t\t\t\t\'\'\r\n\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\'AND sp0.s" +
                    "ession_id <> @@spid \r\n\t\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\t\tCASE \r\n\t\t\t\t\t\t\t\tWHEN @show" +
                    "_system_spids = 0 THEN\r\n\t\t\t\t\t\t\t\t\t\'AND sp0.hostprocess > \'\'\'\' \r\n\t\t\t\t\t\t\t\t\t\' \r\n\t\t\t\t" +
                    "\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\'\'\r\n\t\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\t\tCASE @show_sleeping_spids\r\n\t\t\t\t\t\t\t\tW" +
                    "HEN 0 THEN\r\n\t\t\t\t\t\t\t\t\t\'AND sp0.status <> \'\'sleeping\'\' \r\n\t\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t\t\t\t\tWHEN " +
                    "1 THEN\r\n\t\t\t\t\t\t\t\t\t\'AND\r\n\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\tsp0.status <> \'\'sleeping\'\'\r\n\t\t\t\t\t\t\t" +
                    "\t\t\tOR sp0.open_tran_count > 0\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\'\'" +
                    "\r\n\t\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\t\')\r\n\t\t\t\t) AS spx\r\n\t\t\t) AS spy\r\n\t\t\tWHERE\r\n\t\t\t\tspy.r = 1; \r\n" +
                    "\t\t\t\' + \r\n\t\t\tCASE @recursion\r\n\t\t\t\tWHEN 1 THEN \r\n\t\t\t\t\t\'IF @@ROWCOUNT > 0\r\n\t\t\t\t\tBEG" +
                    "IN;\r\n\t\t\t\t\t\tINSERT @blockers\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tsession_id\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tSELECT T" +
                    "OP(@i)\r\n\t\t\t\t\t\t\tblocked\r\n\t\t\t\t\t\tFROM @sessions\r\n\t\t\t\t\t\tWHERE\r\n\t\t\t\t\t\t\tNULLIF(blocked" +
                    ", 0) IS NOT NULL\r\n\r\n\t\t\t\t\t\tEXCEPT\r\n\r\n\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\tsession_id\r\n\t\t\t" +
                    "\t\t\tFROM @sessions; \r\n\t\t\t\t\t\t\' +\r\n\r\n\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t@ge" +
                    "t_task_info > 0\r\n\t\t\t\t\t\t\t\tOR @find_block_leaders = 1\r\n\t\t\t\t\t\t\t) THEN\r\n\t\t\t\t\t\t\t\t\'IF " +
                    "@@ROWCOUNT > 0\r\n\t\t\t\t\t\t\t\tBEGIN;\r\n\t\t\t\t\t\t\t\t\tSET @blocker = 1;\r\n\t\t\t\t\t\t\t\t\tGOTO BLOCKE" +
                    "RS;\r\n\t\t\t\t\t\t\t\tEND; \r\n\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\t\t\'\'\r\n\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\'END;" +
                    " \r\n\t\t\t\t\t\'\r\n\t\t\t\tELSE \r\n\t\t\t\t\t\'\'\r\n\t\t\tEND +\r\n\t\t\t\'SELECT TOP(@i)\r\n\t\t\t\t@recursion AS r" +
                    "ecursion,\r\n\t\t\t\tx.session_id,\r\n\t\t\t\tx.request_id,\r\n\t\t\t\tDENSE_RANK() OVER\r\n\t\t\t\t(\r\n\t" +
                    "\t\t\t\tORDER BY\r\n\t\t\t\t\t\tx.session_id\r\n\t\t\t\t) AS session_number,\r\n\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t" +
                    "\t\t\t\tWHEN @output_column_list LIKE \'%|[dd hh:mm:ss.mss|]%\' ESCAPE \'|\' THEN \r\n\t\t\t\t" +
                    "\t\t\'x.elapsed_time \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'0 \'\r\n\t\t\t\tEND + \r\n\t\t\t\t\t\'AS elapsed_time, " +
                    "\r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t@output_column_list LIKE \'%|[dd" +
                    " hh:mm:ss.mss (avg)|]%\' ESCAPE \'|\' OR \r\n\t\t\t\t\t\t\t@output_column_list LIKE \'%|[avg_" +
                    "elapsed_time|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tAND @recursion = 1\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t" +
                    "\t\t\t\t\t\t\'x.avg_elapsed_time / 1000 \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'NULL \'\r\n\t\t\t\tEND + \r\n\t\t\t\t\t" +
                    "\'AS avg_elapsed_time, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t@output_column_lis" +
                    "t LIKE \'%|[physical_io|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\tOR @output_column_list LIKE \'%|[phy" +
                    "sical_io_delta|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\'x.physical_io \'\r\n\t\t\t\t\tELSE" +
                    " \r\n\t\t\t\t\t\t\'NULL \'\r\n\t\t\t\tEND + \r\n\t\t\t\t\t\'AS physical_io, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tW" +
                    "HEN \r\n\t\t\t\t\t\t@output_column_list LIKE \'%|[reads|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\tOR @output_" +
                    "column_list LIKE \'%|[reads_delta|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\'x.reads " +
                    "\'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'0 \'\r\n\t\t\t\tEND + \r\n\t\t\t\t\t\'AS reads, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t" +
                    "\t\tWHEN \r\n\t\t\t\t\t\t@output_column_list LIKE \'%|[physical_reads|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t" +
                    "\tOR @output_column_list LIKE \'%|[physical_reads_delta|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\t\tTHE" +
                    "N \r\n\t\t\t\t\t\t\t\t\'x.physical_reads \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'0 \'\r\n\t\t\t\tEND + \r\n\t\t\t\t\t\'AS ph" +
                    "ysical_reads, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t@output_column_list LIKE \'" +
                    "%|[writes|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\tOR @output_column_list LIKE \'%|[writes_delta|]%\'" +
                    " ESCAPE \'|\'\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\'x.writes \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'0 \'\r\n\t\t\t\tEND " +
                    "+ \r\n\t\t\t\t\t\'AS writes, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t@output_column_list" +
                    " LIKE \'%|[tempdb_allocations|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\tOR @output_column_list LIKE \'" +
                    "%|[tempdb_allocations_delta|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\'x.tempdb_allo" +
                    "cations \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'0 \'\r\n\t\t\t\tEND + \r\n\t\t\t\t\t\'AS tempdb_allocations, \r\n\t\t" +
                    "\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t@output_column_list LIKE \'%|[tempdb_current|" +
                    "]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\tOR @output_column_list LIKE \'%|[tempdb_current_delta|]%\' E" +
                    "SCAPE \'|\'\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\'x.tempdb_current \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'0 \'\r\n\t\t" +
                    "\t\tEND + \r\n\t\t\t\t\t\'AS tempdb_current, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t@outp" +
                    "ut_column_list LIKE \'%|[CPU|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\tOR @output_column_list LIKE \'%" +
                    "|[CPU_delta|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\t\tTHEN\r\n\t\t\t\t\t\t\t\t\'x.CPU \'\r\n\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\'0 \'" +
                    "\r\n\t\t\t\tEND + \r\n\t\t\t\t\t\'AS CPU, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t@output_colu" +
                    "mn_list LIKE \'%|[CPU_delta|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\tAND @get_task_info = 2\r\n\t\t\t\t\t\tA" +
                    "ND @sys_info = 1\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\'x.thread_CPU_snapshot \'\r\n\t\t\t\t\tELSE \r\n\t\t" +
                    "\t\t\t\t\'0 \'\r\n\t\t\t\tEND + \r\n\t\t\t\t\t\'AS thread_CPU_snapshot, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tW" +
                    "HEN \r\n\t\t\t\t\t\t@output_column_list LIKE \'%|[context_switches|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\t" +
                    "OR @output_column_list LIKE \'%|[context_switches_delta|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\t\tTH" +
                    "EN \r\n\t\t\t\t\t\t\t\t\'x.context_switches \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'NULL \'\r\n\t\t\t\tEND + \r\n\t\t\t\t\t" +
                    "\'AS context_switches, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t@output_column_lis" +
                    "t LIKE \'%|[used_memory|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\tOR @output_column_list LIKE \'%|[use" +
                    "d_memory_delta|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\'x.used_memory \'\r\n\t\t\t\t\tELSE" +
                    " \r\n\t\t\t\t\t\t\'0 \'\r\n\t\t\t\tEND + \r\n\t\t\t\t\t\'AS used_memory, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN" +
                    " \r\n\t\t\t\t\t\t@output_column_list LIKE \'%|[tasks|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\tAND @recursion" +
                    " = 1\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\'x.tasks \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'NULL \'\r\n\t\t\t\tEND + \r\n\t" +
                    "\t\t\t\t\'AS tasks, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t@output_column_" +
                    "list LIKE \'%|[status|]%\' ESCAPE \'|\' \r\n\t\t\t\t\t\t\tOR @output_column_list LIKE \'%|[sql" +
                    "_command|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tAND @recursion = 1\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t" +
                    "\t\t\'x.status \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'\'\'\'\' \'\r\n\t\t\t\tEND + \r\n\t\t\t\t\t\'AS status, \r\n\t\t\t\t\t\' " +
                    "+\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t@output_column_list LIKE \'%|[wait_info|]%\' ESCAPE" +
                    " \'|\' \r\n\t\t\t\t\t\tAND @recursion = 1\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\tCASE @get_task_info\r\n\t\t\t\t" +
                    "\t\t\t\t\tWHEN 2 THEN\r\n\t\t\t\t\t\t\t\t\t\t\'COALESCE(x.task_wait_info, x.sys_wait_info) \'\r\n\t\t\t\t" +
                    "\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\'x.sys_wait_info \'\r\n\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'NULL \'\r" +
                    "\n\t\t\t\tEND + \r\n\t\t\t\t\t\'AS wait_info, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t(\r\n\t\t\t\t" +
                    "\t\t\t@output_column_list LIKE \'%|[tran_start_time|]%\' ESCAPE \'|\' \r\n\t\t\t\t\t\t\tOR @outp" +
                    "ut_column_list LIKE \'%|[tran_log_writes|]%\' ESCAPE \'|\' \r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tAND @rec" +
                    "ursion = 1\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\'x.transaction_id \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'NULL \'" +
                    "\r\n\t\t\t\tEND + \r\n\t\t\t\t\t\'AS transaction_id, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t@" +
                    "output_column_list LIKE \'%|[open_tran_count|]%\' ESCAPE \'|\' \r\n\t\t\t\t\t\tAND @recursio" +
                    "n = 1\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\'x.open_tran_count \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'NULL \'\r\n\t\t" +
                    "\t\tEND + \r\n\t\t\t\t\t\'AS open_tran_count, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t@out" +
                    "put_column_list LIKE \'%|[sql_text|]%\' ESCAPE \'|\' \r\n\t\t\t\t\t\tAND @recursion = 1\r\n\t\t\t" +
                    "\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\'x.sql_handle \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'NULL \'\r\n\t\t\t\tEND + \r\n\t\t\t\t\t" +
                    "\'AS sql_handle, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t@output_column" +
                    "_list LIKE \'%|[sql_text|]%\' ESCAPE \'|\' \r\n\t\t\t\t\t\t\tOR @output_column_list LIKE \'%|[" +
                    "query_plan|]%\' ESCAPE \'|\' \r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tAND @recursion = 1\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t\t" +
                    "\t\t\t\t\t\'x.statement_start_offset \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'NULL \'\r\n\t\t\t\tEND + \r\n\t\t\t\t\t\'A" +
                    "S statement_start_offset, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t@out" +
                    "put_column_list LIKE \'%|[sql_text|]%\' ESCAPE \'|\' \r\n\t\t\t\t\t\t\tOR @output_column_list" +
                    " LIKE \'%|[query_plan|]%\' ESCAPE \'|\' \r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tAND @recursion = 1\r\n\t\t\t\t\t\t\t" +
                    "THEN \r\n\t\t\t\t\t\t\t\t\'x.statement_end_offset \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'NULL \'\r\n\t\t\t\tEND + \r" +
                    "\n\t\t\t\t\t\'AS statement_end_offset, \r\n\t\t\t\t\t\' +\r\n\t\t\t\t\'NULL AS sql_text, \r\n\t\t\t\t\t\' +\r\n\t" +
                    "\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t@output_column_list LIKE \'%|[query_plan|]%\' ESCAPE \'|" +
                    "\' \r\n\t\t\t\t\t\tAND @recursion = 1\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\'x.plan_handle \'\r\n\t\t\t\t\tELSE " +
                    "\r\n\t\t\t\t\t\t\'NULL \'\r\n\t\t\t\tEND + \r\n\t\t\t\t\t\'AS plan_handle, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWH" +
                    "EN \r\n\t\t\t\t\t\t@output_column_list LIKE \'%|[blocking_session_id|]%\' ESCAPE \'|\' \r\n\t\t\t" +
                    "\t\t\tAND @recursion = 1\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\'NULLIF(x.blocking_session_id, 0) \'" +
                    "\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'NULL \'\r\n\t\t\t\tEND + \r\n\t\t\t\t\t\'AS blocking_session_id, \r\n\t\t\t\t\t\' " +
                    "+\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t@output_column_list LIKE \'%|[percent_complete|]%\'" +
                    " ESCAPE \'|\'\r\n\t\t\t\t\t\tAND @recursion = 1\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\'x.percent_complete" +
                    " \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'NULL \'\r\n\t\t\t\tEND + \r\n\t\t\t\t\t\'AS percent_complete, \r\n\t\t\t\t\t\' +" +
                    "\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t@output_column_list LIKE \'%|[host_name|]%\' ESCAPE " +
                    "\'|\' \r\n\t\t\t\t\t\tAND @recursion = 1\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\'x.host_name \'\r\n\t\t\t\t\tELSE " +
                    "\r\n\t\t\t\t\t\t\'\'\'\'\' \'\r\n\t\t\t\tEND + \r\n\t\t\t\t\t\'AS host_name, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN" +
                    " \r\n\t\t\t\t\t\t@output_column_list LIKE \'%|[login_name|]%\' ESCAPE \'|\' \r\n\t\t\t\t\t\tAND @rec" +
                    "ursion = 1\r\n\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\'x.login_name \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'\'\'\'\' \'\r\n\t\t" +
                    "\t\tEND + \r\n\t\t\t\t\t\'AS login_name, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t@output_c" +
                    "olumn_list LIKE \'%|[database_name|]%\' ESCAPE \'|\' \r\n\t\t\t\t\t\tAND @recursion = 1\r\n\t\t\t" +
                    "\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\'DB_NAME(x.database_id) \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'NULL \'\r\n\t\t\t\tEND" +
                    " + \r\n\t\t\t\t\t\'AS database_name, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t@output_col" +
                    "umn_list LIKE \'%|[program_name|]%\' ESCAPE \'|\' \r\n\t\t\t\t\t\tAND @recursion = 1\r\n\t\t\t\t\t\t" +
                    "\tTHEN \r\n\t\t\t\t\t\t\t\t\'x.program_name \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'\'\'\'\' \'\r\n\t\t\t\tEND + \r\n\t\t\t\t\t\'" +
                    "AS program_name, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t@output_column_list LIKE" +
                    " \'%|[additional_info|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\tAND @recursion = 1\r\n\t\t\t\t\t\t\tTHEN\r\n\t\t\t\t" +
                    "\t\t\t\t\'(\r\n\t\t\t\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\t\t\t\tx.text_size,\r\n\t\t\t\t\t\t\t\t\t\tx.language,\r\n" +
                    "\t\t\t\t\t\t\t\t\t\tx.date_format,\r\n\t\t\t\t\t\t\t\t\t\tx.date_first,\r\n\t\t\t\t\t\t\t\t\t\tCASE x.quoted_ident" +
                    "ifier\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 0 THEN \'\'OFF\'\'\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN \'\'ON\'\'\r\n\t\t\t\t\t\t\t\t\t\t" +
                    "END AS quoted_identifier,\r\n\t\t\t\t\t\t\t\t\t\tCASE x.arithabort\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 0 THEN \'" +
                    "\'OFF\'\'\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN \'\'ON\'\'\r\n\t\t\t\t\t\t\t\t\t\tEND AS arithabort,\r\n\t\t\t\t\t\t\t\t\t\tC" +
                    "ASE x.ansi_null_dflt_on\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 0 THEN \'\'OFF\'\'\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN " +
                    "\'\'ON\'\'\r\n\t\t\t\t\t\t\t\t\t\tEND AS ansi_null_dflt_on,\r\n\t\t\t\t\t\t\t\t\t\tCASE x.ansi_defaults\r\n\t\t\t" +
                    "\t\t\t\t\t\t\t\tWHEN 0 THEN \'\'OFF\'\'\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN \'\'ON\'\'\r\n\t\t\t\t\t\t\t\t\t\tEND AS ans" +
                    "i_defaults,\r\n\t\t\t\t\t\t\t\t\t\tCASE x.ansi_warnings\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 0 THEN \'\'OFF\'\'\r\n\t\t\t" +
                    "\t\t\t\t\t\t\t\tWHEN 1 THEN \'\'ON\'\'\r\n\t\t\t\t\t\t\t\t\t\tEND AS ansi_warnings,\r\n\t\t\t\t\t\t\t\t\t\tCASE x.an" +
                    "si_padding\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 0 THEN \'\'OFF\'\'\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN \'\'ON\'\'\r\n\t\t\t\t\t" +
                    "\t\t\t\t\tEND AS ansi_padding,\r\n\t\t\t\t\t\t\t\t\t\tCASE ansi_nulls\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 0 THEN \'\'O" +
                    "FF\'\'\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN \'\'ON\'\'\r\n\t\t\t\t\t\t\t\t\t\tEND AS ansi_nulls,\r\n\t\t\t\t\t\t\t\t\t\tCAS" +
                    "E x.concat_null_yields_null\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 0 THEN \'\'OFF\'\'\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 T" +
                    "HEN \'\'ON\'\'\r\n\t\t\t\t\t\t\t\t\t\tEND AS concat_null_yields_null,\r\n\t\t\t\t\t\t\t\t\t\tCASE x.transact" +
                    "ion_isolation_level\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 0 THEN \'\'Unspecified\'\'\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 T" +
                    "HEN \'\'ReadUncomitted\'\'\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 2 THEN \'\'ReadCommitted\'\'\r\n\t\t\t\t\t\t\t\t\t\t\tWHE" +
                    "N 3 THEN \'\'Repeatable\'\'\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 4 THEN \'\'Serializable\'\'\r\n\t\t\t\t\t\t\t\t\t\t\tWHE" +
                    "N 5 THEN \'\'Snapshot\'\'\r\n\t\t\t\t\t\t\t\t\t\tEND AS transaction_isolation_level,\r\n\t\t\t\t\t\t\t\t\t\t" +
                    "x.lock_timeout,\r\n\t\t\t\t\t\t\t\t\t\tx.deadlock_priority,\r\n\t\t\t\t\t\t\t\t\t\tx.row_count,\r\n\t\t\t\t\t\t\t" +
                    "\t\t\tx.command_type, \r\n\t\t\t\t\t\t\t\t\t\t\' +\r\n\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN OBJECT_ID(\'m" +
                    "aster.dbo.fn_varbintohexstr\') IS NOT NULL THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\'master.dbo.fn_varbi" +
                    "ntohexstr(x.sql_handle) AS sql_handle,\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaster.dbo.fn_varbintohexstr" +
                    "(x.plan_handle) AS plan_handle,\'\r\n\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\'CONVERT(VARCHAR(" +
                    "256), x.sql_handle, 1) AS sql_handle,\r\n\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(VARCHAR(256), x.plan_" +
                    "handle, 1) AS plan_handle,\'\r\n\t\t\t\t\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t\t\t\t\t\t\tx.statement" +
                    "_start_offset,\r\n\t\t\t\t\t\t\t\t\t\tx.statement_end_offset,\r\n\t\t\t\t\t\t\t\t\t\t\' +\r\n\t\t\t\t\t\t\t\t\t\tCASE" +
                    "\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN @output_column_list LIKE \'%|[program_name|]%\' ESCAPE \'|\' THEN\r" +
                    "\n\t\t\t\t\t\t\t\t\t\t\t\t\'(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tSELECT TOP(1)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(uniqueidentif" +
                    "ier, CONVERT(XML, \'\'\'\').value(\'\'xs:hexBinary( substring(sql:column(\"agent_info.j" +
                    "ob_id_string\"), 0) )\'\', \'\'binary(16)\'\')) AS job_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tagent_info.st" +
                    "ep_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSELECT TOP(1)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNULL\r\n\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\tFOR XML\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPATH(\'\'job_name\'\'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTYPE\r\n" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSELECT TOP(1)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\tNULL\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFOR XML\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPATH(\'\'step_name\'\'),\r\n\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\tTYPE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tFROM\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSEL" +
                    "ECT TOP(1)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSUBSTRING(x.program_name, CHARINDEX(\'\'0x\'\', x.program" +
                    "_name) + 2, 32) AS job_id_string,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSUBSTRING(x.program_name, CHAR" +
                    "INDEX(\'\': Step \'\', x.program_name) + 7, CHARINDEX(\'\')\'\', x.program_name, CHARIND" +
                    "EX(\'\': Step \'\', x.program_name)) - (CHARINDEX(\'\': Step \'\', x.program_name) + 7))" +
                    " AS step_id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHERE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx.program_name LIKE N\'\'SQLAgent" +
                    " - TSQL JobStep (Job 0x%\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) AS agent_info\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tFOR XML\r\n" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t\tPATH(\'\'agent_job_info\'\'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tTYPE\r\n\t\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t\t\t\t\t\t\t\tELSE \'\'\r\n\t\t\t\t\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN" +
                    " @get_task_info = 2 THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\'CONVERT(XML, x.block_info) AS block_info," +
                    " \r\n\t\t\t\t\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\'\'\r\n\t\t\t\t\t\t\t\t\t\tEND + \'\r\n\t\t\t\t\t\t\t\t\t\t" +
                    "x.host_process_id,\r\n\t\t\t\t\t\t\t\t\t\tx.group_id\r\n\t\t\t\t\t\t\t\t\tFOR XML\r\n\t\t\t\t\t\t\t\t\t\tPATH(\'\'add" +
                    "itional_info\'\'),\r\n\t\t\t\t\t\t\t\t\t\tTYPE\r\n\t\t\t\t\t\t\t\t) \'\r\n\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\'NULL \'\r\n\t\t\t\tEND" +
                    " + \r\n\t\t\t\t\t\'AS additional_info, \r\n\t\t\t\tx.start_time, \r\n\t\t\t\t\t\' +\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWH" +
                    "EN\r\n\t\t\t\t\t\t@output_column_list LIKE \'%|[login_time|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\tAND @rec" +
                    "ursion = 1\r\n\t\t\t\t\t\t\tTHEN\r\n\t\t\t\t\t\t\t\t\'x.login_time \'\r\n\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\'NULL \'\r\n\t\t\t" +
                    "\tEND + \r\n\t\t\t\t\t\'AS login_time, \r\n\t\t\t\tx.last_request_start_time\r\n\t\t\tFROM\r\n\t\t\t(\r\n\t\t" +
                    "\t\tSELECT TOP(@i)\r\n\t\t\t\t\ty.*,\r\n\t\t\t\t\tCASE\r\n\t\t\t\t\t\tWHEN DATEDIFF(hour, y.start_time, " +
                    "GETDATE()) > 576 THEN\r\n\t\t\t\t\t\t\tDATEDIFF(second, GETDATE(), y.start_time)\r\n\t\t\t\t\t\tE" +
                    "LSE DATEDIFF(ms, y.start_time, GETDATE())\r\n\t\t\t\t\tEND AS elapsed_time,\r\n\t\t\t\t\tCOALE" +
                    "SCE(tempdb_info.tempdb_allocations, 0) AS tempdb_allocations,\r\n\t\t\t\t\tCOALESCE\r\n\t\t" +
                    "\t\t\t(\r\n\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\tWHEN tempdb_info.tempdb_current < 0 THEN 0\r\n\t\t\t\t\t\t\tELSE" +
                    " tempdb_info.tempdb_current\r\n\t\t\t\t\t\tEND,\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t) AS tempdb_current, \r\n\t\t" +
                    "\t\t\t\' +\r\n\t\t\t\t\tCASE\r\n\t\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t@get_task_info <> 0\r\n\t\t\t\t\t\t\t\tO" +
                    "R @find_block_leaders = 1\r\n\t\t\t\t\t\t\t) THEN\r\n\t\t\t\t\t\t\t\t\'N\'\'(\'\' + CONVERT(NVARCHAR, y." +
                    "wait_duration_ms) + N\'\'ms)\'\' +\r\n\t\t\t\t\t\t\t\t\ty.wait_type +\r\n\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t" +
                    "\t\t\tWHEN y.wait_type LIKE N\'\'PAGE%LATCH_%\'\' THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\tN\'\':\'\' +\r\n\t\t\t\t\t\t\t\t\t" +
                    "\t\t\tCOALESCE(DB_NAME(CONVERT(INT, LEFT(y.resource_description, CHARINDEX(N\'\':\'\', " +
                    "y.resource_description) - 1))), N\'\'(null)\'\') +\r\n\t\t\t\t\t\t\t\t\t\t\t\tN\'\':\'\' +\r\n\t\t\t\t\t\t\t\t\t\t" +
                    "\t\tSUBSTRING(y.resource_description, CHARINDEX(N\'\':\'\', y.resource_description) + " +
                    "1, LEN(y.resource_description) - CHARINDEX(N\'\':\'\', REVERSE(y.resource_descriptio" +
                    "n)) - CHARINDEX(N\'\':\'\', y.resource_description)) +\r\n\t\t\t\t\t\t\t\t\t\t\t\tN\'\'(\'\' +\r\n\t\t\t\t\t\t" +
                    "\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(INT, RIGHT(y.resource_de" +
                    "scription, CHARINDEX(N\'\':\'\', REVERSE(y.resource_description)) - 1)) = 1 OR\r\n\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\tCONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N\'\':\'\', REVERSE(" +
                    "y.resource_description)) - 1)) % 8088 = 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\tN\'\'PFS\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(INT, RIGHT(y.resource_de" +
                    "scription, CHARINDEX(N\'\':\'\', REVERSE(y.resource_description)) - 1)) = 2 OR\r\n\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\tCONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N\'\':\'\', REVERSE(" +
                    "y.resource_description)) - 1)) % 511232 = 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\tN\'\'GAM\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(INT, RIGHT(y.resource_" +
                    "description, CHARINDEX(N\'\':\'\', REVERSE(y.resource_description)) - 1)) = 3 OR\r\n\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t(CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N\'\':\'\', REVER" +
                    "SE(y.resource_description)) - 1)) - 1) % 511232 = 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN\r\n\t\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\tN\'\'SGAM\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(INT, RIGHT(y.r" +
                    "esource_description, CHARINDEX(N\'\':\'\', REVERSE(y.resource_description)) - 1)) = " +
                    "6 OR\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N\'\':\'" +
                    "\', REVERSE(y.resource_description)) - 1)) - 6) % 511232 = 0 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTH" +
                    "EN \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tN\'\'DCM\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(INT, " +
                    "RIGHT(y.resource_description, CHARINDEX(N\'\':\'\', REVERSE(y.resource_description))" +
                    " - 1)) = 7 OR\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(CONVERT(INT, RIGHT(y.resource_description, CHARIN" +
                    "DEX(N\'\':\'\', REVERSE(y.resource_description)) - 1)) - 7) % 511232 = 0 \r\n\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tN\'\'BCM\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tN\'\'" +
                    "*\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\t\t\t\t\t\t\tN\'\')\'\'\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN y.wait_type = N\'\'CX" +
                    "PACKET\'\' THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\tN\'\':\'\' + SUBSTRING(y.resource_description, CHARINDEX(" +
                    "N\'\'nodeId\'\', y.resource_description) + 7, 4)\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN y.wait_type LIKE N" +
                    "\'\'LATCH[_]%\'\' THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\tN\'\' [\'\' + LEFT(y.resource_description, COALESCE(" +
                    "NULLIF(CHARINDEX(N\'\' \'\', y.resource_description), 0), LEN(y.resource_description" +
                    ") + 1) - 1) + N\'\']\'\'\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t\t\t\t\t\t\ty.wait_type = N\'\'OLEDB\'\'\r\n\t\t\t" +
                    "\t\t\t\t\t\t\t\t\tAND y.resource_description LIKE N\'\'%(SPID=%)\'\' THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tN\'\'[\'" +
                    "\' + LEFT(y.resource_description, CHARINDEX(N\'\'(SPID=\'\', y.resource_description) " +
                    "- 2) +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tN\'\':\'\' + SUBSTRING(y.resource_description, CHARINDEX(N\'\'(S" +
                    "PID=\'\', y.resource_description) + 6, CHARINDEX(N\'\')\'\', y.resource_description, (" +
                    "CHARINDEX(N\'\'(SPID=\'\', y.resource_description) + 6)) - (CHARINDEX(N\'\'(SPID=\'\', y" +
                    ".resource_description) + 6)) + \'\']\'\'\r\n\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\tN\'\'\'\'\r\n\t\t\t\t\t\t" +
                    "\t\t\t\tEND COLLATE Latin1_General_Bin2 AS sys_wait_info, \r\n\t\t\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t\t\t\tELSE" +
                    "\r\n\t\t\t\t\t\t\t\t\'\'\r\n\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\tWHEN @get_task_info = 2 THEN\r\n\t\t\t\t" +
                    "\t\t\t\t\'tasks.physical_io,\r\n\t\t\t\t\t\t\t\ttasks.context_switches,\r\n\t\t\t\t\t\t\t\ttasks.tasks,\r\n" +
                    "\t\t\t\t\t\t\t\ttasks.block_info,\r\n\t\t\t\t\t\t\t\ttasks.wait_info AS task_wait_info,\r\n\t\t\t\t\t\t\t\tt" +
                    "asks.thread_CPU_snapshot,\r\n\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\'\' \r\n\t\t\t\t\tEND +\r\n\t\t\t\t" +
                    "\tCASE \r\n\t\t\t\t\t\tWHEN NOT (@get_avg_time = 1 AND @recursion = 1) THEN\r\n\t\t\t\t\t\t\t\'CONV" +
                    "ERT(INT, NULL) \'\r\n\t\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\t\'qs.total_elapsed_time / qs.execution_coun" +
                    "t \'\r\n\t\t\t\t\tEND + \r\n\t\t\t\t\t\t\'AS avg_elapsed_time \r\n\t\t\t\tFROM\r\n\t\t\t\t(\r\n\t\t\t\t\tSELECT TOP(" +
                    "@i)\r\n\t\t\t\t\t\tsp.session_id,\r\n\t\t\t\t\t\tsp.request_id,\r\n\t\t\t\t\t\tCOALESCE(r.logical_reads," +
                    " s.logical_reads) AS reads,\r\n\t\t\t\t\t\tCOALESCE(r.reads, s.reads) AS physical_reads," +
                    "\r\n\t\t\t\t\t\tCOALESCE(r.writes, s.writes) AS writes,\r\n\t\t\t\t\t\tCOALESCE(r.CPU_time, s.CP" +
                    "U_time) AS CPU,\r\n\t\t\t\t\t\tsp.memory_usage + COALESCE(r.granted_query_memory, 0) AS " +
                    "used_memory,\r\n\t\t\t\t\t\tLOWER(sp.status) AS status,\r\n\t\t\t\t\t\tCOALESCE(r.sql_handle, sp" +
                    ".sql_handle) AS sql_handle,\r\n\t\t\t\t\t\tCOALESCE(r.statement_start_offset, sp.stateme" +
                    "nt_start_offset) AS statement_start_offset,\r\n\t\t\t\t\t\tCOALESCE(r.statement_end_offs" +
                    "et, sp.statement_end_offset) AS statement_end_offset,\r\n\t\t\t\t\t\t\' +\r\n\t\t\t\t\t\tCASE\r\n\t\t" +
                    "\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t@get_task_info <> 0\r\n\t\t\t\t\t\t\t\tOR @find_block_leader" +
                    "s = 1 \r\n\t\t\t\t\t\t\t) THEN\r\n\t\t\t\t\t\t\t\t\'sp.wait_type COLLATE Latin1_General_Bin2 AS wait" +
                    "_type,\r\n\t\t\t\t\t\t\t\tsp.wait_resource COLLATE Latin1_General_Bin2 AS resource_descrip" +
                    "tion,\r\n\t\t\t\t\t\t\t\tsp.wait_time AS wait_duration_ms, \r\n\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t" +
                    "\t\t\t\'\'\r\n\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\t\'NULLIF(sp.blocked, 0) AS blocking_session_id,\r\n\t\t\t\t\t\t" +
                    "r.plan_handle,\r\n\t\t\t\t\t\tNULLIF(r.percent_complete, 0) AS percent_complete,\r\n\t\t\t\t\t\t" +
                    "sp.host_name,\r\n\t\t\t\t\t\tsp.login_name,\r\n\t\t\t\t\t\tsp.program_name,\r\n\t\t\t\t\t\ts.host_proces" +
                    "s_id,\r\n\t\t\t\t\t\tCOALESCE(r.text_size, s.text_size) AS text_size,\r\n\t\t\t\t\t\tCOALESCE(r." +
                    "language, s.language) AS language,\r\n\t\t\t\t\t\tCOALESCE(r.date_format, s.date_format)" +
                    " AS date_format,\r\n\t\t\t\t\t\tCOALESCE(r.date_first, s.date_first) AS date_first,\r\n\t\t\t" +
                    "\t\t\tCOALESCE(r.quoted_identifier, s.quoted_identifier) AS quoted_identifier,\r\n\t\t\t" +
                    "\t\t\tCOALESCE(r.arithabort, s.arithabort) AS arithabort,\r\n\t\t\t\t\t\tCOALESCE(r.ansi_nu" +
                    "ll_dflt_on, s.ansi_null_dflt_on) AS ansi_null_dflt_on,\r\n\t\t\t\t\t\tCOALESCE(r.ansi_de" +
                    "faults, s.ansi_defaults) AS ansi_defaults,\r\n\t\t\t\t\t\tCOALESCE(r.ansi_warnings, s.an" +
                    "si_warnings) AS ansi_warnings,\r\n\t\t\t\t\t\tCOALESCE(r.ansi_padding, s.ansi_padding) A" +
                    "S ansi_padding,\r\n\t\t\t\t\t\tCOALESCE(r.ansi_nulls, s.ansi_nulls) AS ansi_nulls,\r\n\t\t\t\t" +
                    "\t\tCOALESCE(r.concat_null_yields_null, s.concat_null_yields_null) AS concat_null_" +
                    "yields_null,\r\n\t\t\t\t\t\tCOALESCE(r.transaction_isolation_level, s.transaction_isolat" +
                    "ion_level) AS transaction_isolation_level,\r\n\t\t\t\t\t\tCOALESCE(r.lock_timeout, s.loc" +
                    "k_timeout) AS lock_timeout,\r\n\t\t\t\t\t\tCOALESCE(r.deadlock_priority, s.deadlock_prio" +
                    "rity) AS deadlock_priority,\r\n\t\t\t\t\t\tCOALESCE(r.row_count, s.row_count) AS row_cou" +
                    "nt,\r\n\t\t\t\t\t\tCOALESCE(r.command, sp.cmd) AS command_type,\r\n\t\t\t\t\t\tCOALESCE\r\n\t\t\t\t\t\t(" +
                    "\r\n\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\ts.is_user_process = 0\r\n\t\t\t\t\t\t\t\t" +
                    "\tAND r.total_elapsed_time >= 0\r\n\t\t\t\t\t\t\t\t) THEN\r\n\t\t\t\t\t\t\t\t\tDATEADD\r\n\t\t\t\t\t\t\t\t\t(\r\n\t\t" +
                    "\t\t\t\t\t\t\t\tms,\r\n\t\t\t\t\t\t\t\t\t\t1000 * (DATEPART(ms, DATEADD(second, -(r.total_elapsed_ti" +
                    "me / 1000), GETDATE())) / 500) - DATEPART(ms, DATEADD(second, -(r.total_elapsed_" +
                    "time / 1000), GETDATE())),\r\n\t\t\t\t\t\t\t\t\t\tDATEADD(second, -(r.total_elapsed_time / 1" +
                    "000), GETDATE())\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\tEND,\r\n\t\t\t\t\t\t\tNULLIF(COALESCE(r.start_time, " +
                    "sp.last_request_end_time), CONVERT(DATETIME, \'\'19000101\'\', 112)),\r\n\t\t\t\t\t\t\tsp.log" +
                    "in_time\r\n\t\t\t\t\t\t) AS start_time,\r\n\t\t\t\t\t\tsp.login_time,\r\n\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\tWHEN s" +
                    ".is_user_process = 1 THEN\r\n\t\t\t\t\t\t\t\ts.last_request_start_time\r\n\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t" +
                    "\t\t\tCOALESCE\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tDATEADD\r\n\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\tms,\r\n\t\t\t\t\t\t\t\t\t\t1" +
                    "000 * (DATEPART(ms, DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())) " +
                    "/ 500) - DATEPART(ms, DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())" +
                    "),\r\n\t\t\t\t\t\t\t\t\t\tDATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())\r\n\t\t\t\t\t\t" +
                    "\t\t\t),\r\n\t\t\t\t\t\t\t\t\ts.last_request_start_time\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\tEND AS last_request_" +
                    "start_time,\r\n\t\t\t\t\t\tr.transaction_id,\r\n\t\t\t\t\t\tsp.database_id,\r\n\t\t\t\t\t\tsp.open_tran_" +
                    "count,\r\n\t\t\t\t\t\t\' +\r\n\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\tWHEN EXISTS\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tSELECT\r" +
                    "\n\t\t\t\t\t\t\t\t\t\t*\r\n\t\t\t\t\t\t\t\t\tFROM sys.all_columns AS ac\r\n\t\t\t\t\t\t\t\t\tWHERE\r\n\t\t\t\t\t\t\t\t\t\tac." +
                    "object_id = OBJECT_ID(\'sys.dm_exec_sessions\')\r\n\t\t\t\t\t\t\t\t\t\tAND ac.name = \'group_id" +
                    "\'\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\tTHEN \'s.group_id\'\r\n\t\t\t\t\t\t\t\tELSE \'CONVERT(INT, NULL) AS gr" +
                    "oup_id\'\r\n\t\t\t\t\t\t\tEND + \'\r\n\t\t\t\t\tFROM @sessions AS sp\r\n\t\t\t\t\tLEFT OUTER LOOP JOIN sy" +
                    "s.dm_exec_sessions AS s ON\r\n\t\t\t\t\t\ts.session_id = sp.session_id\r\n\t\t\t\t\t\tAND s.logi" +
                    "n_time = sp.login_time\r\n\t\t\t\t\tLEFT OUTER LOOP JOIN sys.dm_exec_requests AS r ON\r\n" +
                    "\t\t\t\t\t\tsp.status <> \'\'sleeping\'\'\r\n\t\t\t\t\t\tAND r.session_id = sp.session_id\r\n\t\t\t\t\t\tA" +
                    "ND r.request_id = sp.request_id\r\n\t\t\t\t\t\tAND\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\ts.is_user" +
                    "_process = 0\r\n\t\t\t\t\t\t\t\tAND sp.is_user_process = 0\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\tOR\r\n\t\t\t\t\t\t\t(\r" +
                    "\n\t\t\t\t\t\t\t\tr.start_time = s.last_request_start_time\r\n\t\t\t\t\t\t\t\tAND s.last_request_en" +
                    "d_time <= sp.last_request_end_time\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t) AS y\r\n\t\t\t\t\' + \r\n\t\t\t" +
                    "\tCASE \r\n\t\t\t\t\tWHEN @get_task_info = 2 THEN\r\n\t\t\t\t\t\tCONVERT(VARCHAR(MAX), \'\') +\r\n\t\t" +
                    "\t\t\t\t\'LEFT OUTER HASH JOIN\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\t\ttask_nodes.ta" +
                    "sk_node.value(\'\'(session_id/text())[1]\'\', \'\'SMALLINT\'\') AS session_id,\r\n\t\t\t\t\t\t\t\t" +
                    "task_nodes.task_node.value(\'\'(request_id/text())[1]\'\', \'\'INT\'\') AS request_id,\r\n" +
                    "\t\t\t\t\t\t\t\ttask_nodes.task_node.value(\'\'(physical_io/text())[1]\'\', \'\'BIGINT\'\') AS p" +
                    "hysical_io,\r\n\t\t\t\t\t\t\t\ttask_nodes.task_node.value(\'\'(context_switches/text())[1]\'\'" +
                    ", \'\'BIGINT\'\') AS context_switches,\r\n\t\t\t\t\t\t\t\ttask_nodes.task_node.value(\'\'(tasks/" +
                    "text())[1]\'\', \'\'INT\'\') AS tasks,\r\n\t\t\t\t\t\t\t\ttask_nodes.task_node.value(\'\'(block_in" +
                    "fo/text())[1]\'\', \'\'NVARCHAR(4000)\'\') AS block_info,\r\n\t\t\t\t\t\t\t\ttask_nodes.task_nod" +
                    "e.value(\'\'(waits/text())[1]\'\', \'\'NVARCHAR(4000)\'\') AS wait_info,\r\n\t\t\t\t\t\t\t\ttask_n" +
                    "odes.task_node.value(\'\'(thread_CPU_snapshot/text())[1]\'\', \'\'BIGINT\'\') AS thread_" +
                    "CPU_snapshot\r\n\t\t\t\t\t\t\tFROM\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\t\t\tCONVERT\r\n\t" +
                    "\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\tXML,\r\n\t\t\t\t\t\t\t\t\t\tREPLACE\r\n\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\tCONVERT(NV" +
                    "ARCHAR(MAX), tasks_raw.task_xml_raw) COLLATE Latin1_General_Bin2,\r\n\t\t\t\t\t\t\t\t\t\t\tN\'" +
                    "\'</waits></tasks><tasks><waits>\'\',\r\n\t\t\t\t\t\t\t\t\t\t\tN\'\', \'\'\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t) " +
                    "AS task_xml\r\n\t\t\t\t\t\t\t\tFROM\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\t\t\t\tCASE wa" +
                    "its.r\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\twaits.session_id\r\n\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t" +
                    "\t\t\t\t\t\t\t\t\t\tNULL\r\n\t\t\t\t\t\t\t\t\t\tEND AS [session_id],\r\n\t\t\t\t\t\t\t\t\t\tCASE waits.r\r\n\t\t\t\t\t\t\t\t" +
                    "\t\t\tWHEN 1 THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\twaits.request_id\r\n\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\tNULL\r" +
                    "\n\t\t\t\t\t\t\t\t\t\tEND AS [request_id],\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tCASE waits.r\r\n\t\t\t\t\t\t\t\t\t\t\tW" +
                    "HEN 1 THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\twaits.physical_io\r\n\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\tNULL\r\n\t\t" +
                    "\t\t\t\t\t\t\t\tEND AS [physical_io],\r\n\t\t\t\t\t\t\t\t\t\tCASE waits.r\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN\r\n\t" +
                    "\t\t\t\t\t\t\t\t\t\t\twaits.context_switches\r\n\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\tNULL\r\n\t\t\t\t\t\t\t\t\t\t" +
                    "END AS [context_switches],\r\n\t\t\t\t\t\t\t\t\t\tCASE waits.r\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN\r\n\t\t\t\t" +
                    "\t\t\t\t\t\t\t\twaits.thread_CPU_snapshot\r\n\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\tNULL\r\n\t\t\t\t\t\t\t\t\t\t" +
                    "END AS [thread_CPU_snapshot],\r\n\t\t\t\t\t\t\t\t\t\tCASE waits.r\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN\r\n\t" +
                    "\t\t\t\t\t\t\t\t\t\t\twaits.tasks\r\n\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\tNULL\r\n\t\t\t\t\t\t\t\t\t\tEND AS [tas" +
                    "ks],\r\n\t\t\t\t\t\t\t\t\t\tCASE waits.r\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\twaits.block_in" +
                    "fo\r\n\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\tNULL\r\n\t\t\t\t\t\t\t\t\t\tEND AS [block_info],\r\n\t\t\t\t\t\t\t\t\t" +
                    "\tREPLACE\r\n\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLAC" +
                    "E(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(REPLACE(REPLACE(R" +
                    "EPLACE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(REPLACE(REPL" +
                    "ACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\t\t\t\t\tCONVERT\r\n\t\t\t\t\t\t\t\t\t\t\t\t(" +
                    "\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNVARCHAR(MAX),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tN\'\'(\'\' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(NVAR" +
                    "CHAR, num_waits) + N\'\'x: \'\' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCASE num_waits\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN" +
                    " 1 THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(NVARCHAR, min_wait_time) + N\'\'ms\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\tWHEN 2 THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN min_wait_time <> ma" +
                    "x_wait_time THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(NVARCHAR, min_wait_time) + N\'\'/\'\' + " +
                    "CONVERT(NVARCHAR, max_wait_time) + N\'\'ms\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\tCONVERT(NVARCHAR, max_wait_time) + N\'\'ms\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN min_wait_time <> max_wait" +
                    "_time THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(NVARCHAR, min_wait_time) + N\'\'/\'\' + CONVER" +
                    "T(NVARCHAR, avg_wait_time) + N\'\'/\'\' + CONVERT(NVARCHAR, max_wait_time) + N\'\'ms\'\'" +
                    "\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(NVARCHAR, max_wait_time) + N" +
                    "\'\'ms\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tN\'\')\'\' + wait_typ" +
                    "e COLLATE Latin1_General_Bin2\r\n\t\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\t\tNCHAR(31),N\'\'?\'\'),NCH" +
                    "AR(30),N\'\'?\'\'),NCHAR(29),N\'\'?\'\'),NCHAR(28),N\'\'?\'\'),NCHAR(27),N\'\'?\'\'),NCHAR(26),N" +
                    "\'\'?\'\'),NCHAR(25),N\'\'?\'\'),NCHAR(24),N\'\'?\'\'),NCHAR(23),N\'\'?\'\'),NCHAR(22),N\'\'?\'\'),\r" +
                    "\n\t\t\t\t\t\t\t\t\t\t\t\tNCHAR(21),N\'\'?\'\'),NCHAR(20),N\'\'?\'\'),NCHAR(19),N\'\'?\'\'),NCHAR(18),N\'\'" +
                    "?\'\'),NCHAR(17),N\'\'?\'\'),NCHAR(16),N\'\'?\'\'),NCHAR(15),N\'\'?\'\'),NCHAR(14),N\'\'?\'\'),NCH" +
                    "AR(12),N\'\'?\'\'),\r\n\t\t\t\t\t\t\t\t\t\t\t\tNCHAR(11),N\'\'?\'\'),NCHAR(8),N\'\'?\'\'),NCHAR(7),N\'\'?\'\')" +
                    ",NCHAR(6),N\'\'?\'\'),NCHAR(5),N\'\'?\'\'),NCHAR(4),N\'\'?\'\'),NCHAR(3),N\'\'?\'\'),NCHAR(2),N\'" +
                    "\'?\'\'),NCHAR(1),N\'\'?\'\'),\r\n\t\t\t\t\t\t\t\t\t\t\tNCHAR(0),\r\n\t\t\t\t\t\t\t\t\t\t\tN\'\'\'\'\r\n\t\t\t\t\t\t\t\t\t\t) AS " +
                    "[waits]\r\n\t\t\t\t\t\t\t\t\tFROM\r\n\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\t\t\t\t\tw1.*,\r\n" +
                    "\t\t\t\t\t\t\t\t\t\t\tROW_NUMBER() OVER\r\n\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\tPARTITION BY\r\n\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\tw1.session_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tw1.request_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tORDER BY\r\n\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\tw1.block_info DESC,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tw1.num_waits DESC,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tw1.wait_typ" +
                    "e\r\n\t\t\t\t\t\t\t\t\t\t\t) AS r\r\n\t\t\t\t\t\t\t\t\t\tFROM\r\n\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t" +
                    "\t\t\t\t\t\t\t\t\t\ttask_info.session_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttask_info.request_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "task_info.physical_io,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttask_info.context_switches,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttas" +
                    "k_info.thread_CPU_snapshot,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttask_info.num_tasks AS tasks,\r\n\t\t\t\t\t\t\t\t" +
                    "\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN task_info.runnable_time IS NOT NULL THEN\r\n\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\'\'RUNNABLE\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twt2.wait_type\r\n\t\t\t\t\t\t\t\t\t\t\t\tEN" +
                    "D AS wait_type,\r\n\t\t\t\t\t\t\t\t\t\t\t\tNULLIF(COUNT(COALESCE(task_info.runnable_time, wt2." +
                    "waiting_task_address)), 0) AS num_waits,\r\n\t\t\t\t\t\t\t\t\t\t\t\tMIN(COALESCE(task_info.run" +
                    "nable_time, wt2.wait_duration_ms)) AS min_wait_time,\r\n\t\t\t\t\t\t\t\t\t\t\t\tAVG(COALESCE(t" +
                    "ask_info.runnable_time, wt2.wait_duration_ms)) AS avg_wait_time,\r\n\t\t\t\t\t\t\t\t\t\t\t\tMA" +
                    "X(COALESCE(task_info.runnable_time, wt2.wait_duration_ms)) AS max_wait_time,\r\n\t\t" +
                    "\t\t\t\t\t\t\t\t\t\tMAX(wt2.block_info) AS block_info\r\n\t\t\t\t\t\t\t\t\t\t\tFROM\r\n\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t" +
                    "\t\t\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tt.session_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tt.request_id,\r\n" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\tSUM(CONVERT(BIGINT, t.pending_io_count)) OVER (PARTITION BY t.sessi" +
                    "on_id, t.request_id) AS physical_io,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tSUM(CONVERT(BIGINT, t.context" +
                    "_switches_count)) OVER (PARTITION BY t.session_id, t.request_id) AS context_swit" +
                    "ches, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t@output_column_list LIKE \'%|[CPU_delta|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAND @sys_" +
                    "info = 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\'SUM(tr.usermode_time + tr.kernel" +
                    "_time) OVER (PARTITION BY t.session_id, t.request_id) \'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\'CONVERT(BIGINT, NULL) \'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tEND + \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\' AS th" +
                    "read_CPU_snapshot, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCOUNT(*) OVER (PARTITION BY t.session_id, t.re" +
                    "quest_id) AS num_tasks,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tt.task_address,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tt.task_state" +
                    ",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tt.task_state = \'\'RUNNAB" +
                    "LE\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAND w.runnable_time > 0 THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tw.runnable_ti" +
                    "me\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNULL\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tEND AS runnable_time\r\n" +
                    "\t\t\t\t\t\t\t\t\t\t\t\tFROM sys.dm_os_tasks AS t\r\n\t\t\t\t\t\t\t\t\t\t\t\tCROSS APPLY\r\n\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\tSELECT TOP(1)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsp2.session_id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tFROM @sess" +
                    "ions AS sp2\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHERE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsp2.session_id = t.session_id\r\n\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\tAND sp2.request_id = t.request_id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tAND sp2.status <> \'" +
                    "\'sleeping\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t) AS sp20\r\n\t\t\t\t\t\t\t\t\t\t\t\tLEFT OUTER HASH JOIN\r\n\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t( \r\n\t\t\t\t\t\t\t\t\t\t\t\t\' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN @sys_info = 1 THEN\r" +
                    "\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\'SELECT TOP(@i)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSELECT TOP(" +
                    "@i)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tms_ticks\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFROM sys.dm_os_sys_info\r\n\t\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t) -\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tw0.wait_resumed_ms_ticks AS runnable_time,\r\n\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\tw0.worker_address,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tw0.thread_address,\r\n\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\tw0.task_bound_ms_ticks\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFROM sys.dm_os_workers AS w0\r\n\t\t\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\tWHERE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tw0.state = \'\'RUNNABLE\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tOR @fir" +
                    "st_collection_ms_ticks >= w0.task_bound_ms_ticks\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\t\t\'SELECT\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(BIGINT, NULL) AS runnable_time,\r\n\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\t\t\t\tCONVERT(VARBINARY(8), NULL) AS worker_address,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(" +
                    "VARBINARY(8), NULL) AS thread_address,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(BIGINT, NULL) AS" +
                    " task_bound_ms_ticks\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHERE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1 = 0\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\tEND +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t) AS w ON\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tw.worker_address = t" +
                    ".worker_address \r\n\t\t\t\t\t\t\t\t\t\t\t\t\' +\r\n\t\t\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\t\t@output_column_list LIKE \'%|[CPU_delta|]%\' ESCAPE \'|\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tAND @" +
                    "sys_info = 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\'LEFT OUTER HASH JOIN sys.dm_os" +
                    "_threads AS tr ON\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttr.thread_address = w.thread_address\r\n\t\t\t\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\tAND @first_collection_ms_ticks >= w.task_bound_ms_ticks\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\t\t\t\t\t\t\') AS tas" +
                    "k_info\r\n\t\t\t\t\t\t\t\t\t\t\tLEFT OUTER HASH JOIN\r\n\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\tSELECT TOP(@i" +
                    ")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twt1.wait_type,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twt1.waiting_task_address,\r\n\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\tMAX(wt1.wait_duration_ms) AS wait_duration_ms,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tMAX(wt1.block_" +
                    "info) AS block_info\r\n\t\t\t\t\t\t\t\t\t\t\t\tFROM\r\n\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tSELECT DISTIN" +
                    "CT TOP(@i)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twt.wait_type +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tW" +
                    "HEN wt.wait_type LIKE N\'\'PAGE%LATCH_%\'\' THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\'\':\'\' +\r\n\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\tCOALESCE(DB_NAME(CONVERT(INT, LEFT(wt.resource_description, CHARINDEX(N" +
                    "\'\':\'\', wt.resource_description) - 1))), N\'\'(null)\'\') +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tN\'\':\'\' " +
                    "+\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSUBSTRING(wt.resource_description, CHARINDEX(N\'\':\'\', wt.reso" +
                    "urce_description) + 1, LEN(wt.resource_description) - CHARINDEX(N\'\':\'\', REVERSE(" +
                    "wt.resource_description)) - CHARINDEX(N\'\':\'\', wt.resource_description)) +\r\n\t\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\tN\'\'(\'\' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\tCONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N\'\':\'\', REVERSE" +
                    "(wt.resource_description)) - 1)) = 1 OR\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(INT, RIGHT(" +
                    "wt.resource_description, CHARINDEX(N\'\':\'\', REVERSE(wt.resource_description)) - 1" +
                    ")) % 8088 = 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tN\'\'PFS\'\'\r\n\t\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(INT, RIGHT(wt.resource_descripti" +
                    "on, CHARINDEX(N\'\':\'\', REVERSE(wt.resource_description)) - 1)) = 2 OR\r\n\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\tCONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N\'\':\'\', REVERSE(" +
                    "wt.resource_description)) - 1)) % 511232 = 0 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tN\'\'GAM\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(" +
                    "INT, RIGHT(wt.resource_description, CHARINDEX(N\'\':\'\', REVERSE(wt.resource_descri" +
                    "ption)) - 1)) = 3 OR\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(CONVERT(INT, RIGHT(wt.resource_descri" +
                    "ption, CHARINDEX(N\'\':\'\', REVERSE(wt.resource_description)) - 1)) - 1) % 511232 =" +
                    " 0 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tN\'\'SGAM\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(INT, RIGHT(wt.resource_description, CHARI" +
                    "NDEX(N\'\':\'\', REVERSE(wt.resource_description)) - 1)) = 6 OR\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t(CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N\'\':\'\', REVERSE(wt.resou" +
                    "rce_description)) - 1)) - 6) % 511232 = 0 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t\tN\'\'DCM\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVERT(INT" +
                    ", RIGHT(wt.resource_description, CHARINDEX(N\'\':\'\', REVERSE(wt.resource_descripti" +
                    "on)) - 1)) = 7 OR\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(CONVERT(INT, RIGHT(wt.resource_descripti" +
                    "on, CHARINDEX(N\'\':\'\', REVERSE(wt.resource_description)) - 1)) - 7) % 511232 = 0\r" +
                    "\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tN\'\'BCM\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "ELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tN\'\'*\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tN\'\')" +
                    "\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN wt.wait_type = N\'\'CXPACKET\'\' THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tN\'\'" +
                    ":\'\' + SUBSTRING(wt.resource_description, CHARINDEX(N\'\'nodeId\'\', wt.resource_desc" +
                    "ription) + 7, 4)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN wt.wait_type LIKE N\'\'LATCH[_]%\'\' THEN\r\n\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tN\'\' [\'\' + LEFT(wt.resource_description, COALESCE(NULLIF(CHARINDEX" +
                    "(N\'\' \'\', wt.resource_description), 0), LEN(wt.resource_description) + 1) - 1) + " +
                    "N\'\']\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tN\'\'\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND COLLAT" +
                    "E Latin1_General_Bin2 AS wait_type,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN\r\n\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twt.blocking_session_id IS NOT NULL\r\n\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\tAND wt.wait_type LIKE N\'\'LCK[_]%\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(" +
                    "\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx.lock_type,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\tREPLACE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(RE" +
                    "PLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tREPLACE(REPLA" +
                    "CE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(" +
                    "\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDB_NAME\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONVE" +
                    "RT\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tINT,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSU" +
                    "BSTRING(wt.resource_description, NULLIF(CHARINDEX(N\'\'dbid=\'\', wt.resource_descri" +
                    "ption), 0) + 5, COALESCE(NULLIF(CHARINDEX(N\'\' \'\', wt.resource_description, CHARI" +
                    "NDEX(N\'\'dbid=\'\', wt.resource_description) + 5), 0), LEN(wt.resource_description)" +
                    " + 1) - CHARINDEX(N\'\'dbid=\'\', wt.resource_description) - 5)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNCHAR(31),N\'\'?\'\'),NCHAR(30),N\'\'" +
                    "?\'\'),NCHAR(29),N\'\'?\'\'),NCHAR(28),N\'\'?\'\'),NCHAR(27),N\'\'?\'\'),NCHAR(26),N\'\'?\'\'),NCH" +
                    "AR(25),N\'\'?\'\'),NCHAR(24),N\'\'?\'\'),NCHAR(23),N\'\'?\'\'),NCHAR(22),N\'\'?\'\'),\r\n\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\tNCHAR(21),N\'\'?\'\'),NCHAR(20),N\'\'?\'\'),NCHAR(19),N\'\'?\'\'),NCHAR(18),N\'\'?\'" +
                    "\'),NCHAR(17),N\'\'?\'\'),NCHAR(16),N\'\'?\'\'),NCHAR(15),N\'\'?\'\'),NCHAR(14),N\'\'?\'\'),NCHAR" +
                    "(12),N\'\'?\'\'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNCHAR(11),N\'\'?\'\'),NCHAR(8),N\'\'?\'\'),NCHAR(7),N" +
                    "\'\'?\'\'),NCHAR(6),N\'\'?\'\'),NCHAR(5),N\'\'?\'\'),NCHAR(4),N\'\'?\'\'),NCHAR(3),N\'\'?\'\'),NCHAR" +
                    "(2),N\'\'?\'\'),NCHAR(1),N\'\'?\'\'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNCHAR(0),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "N\'\'\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) AS database_name,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCASE x.lock_type" +
                    "\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN N\'\'objectlock\'\' THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSUBSTRING(wt" +
                    ".resource_description, NULLIF(CHARINDEX(N\'\'objid=\'\', wt.resource_description), 0" +
                    ") + 6, COALESCE(NULLIF(CHARINDEX(N\'\' \'\', wt.resource_description, CHARINDEX(N\'\'o" +
                    "bjid=\'\', wt.resource_description) + 6), 0), LEN(wt.resource_description) + 1) - " +
                    "CHARINDEX(N\'\'objid=\'\', wt.resource_description) - 6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNULL\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND AS object_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "CASE x.lock_type\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN N\'\'filelock\'\' THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\tSUBSTRING(wt.resource_description, NULLIF(CHARINDEX(N\'\'fileid=\'\', wt.resource_" +
                    "description), 0) + 7, COALESCE(NULLIF(CHARINDEX(N\'\' \'\', wt.resource_description," +
                    " CHARINDEX(N\'\'fileid=\'\', wt.resource_description) + 7), 0), LEN(wt.resource_desc" +
                    "ription) + 1) - CHARINDEX(N\'\'fileid=\'\', wt.resource_description) - 7)\r\n\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNULL\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND AS file_id,\r\n\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN x.lock_type in (N\'\'pagelock\'\', N\'\'e" +
                    "xtentlock\'\', N\'\'ridlock\'\') THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSUBSTRING(wt.resource_descr" +
                    "iption, NULLIF(CHARINDEX(N\'\'associatedObjectId=\'\', wt.resource_description), 0) " +
                    "+ 19, COALESCE(NULLIF(CHARINDEX(N\'\' \'\', wt.resource_description, CHARINDEX(N\'\'as" +
                    "sociatedObjectId=\'\', wt.resource_description) + 19), 0), LEN(wt.resource_descrip" +
                    "tion) + 1) - CHARINDEX(N\'\'associatedObjectId=\'\', wt.resource_description) - 19)\r" +
                    "\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN x.lock_type in (N\'\'keylock\'\', N\'\'hobtlock\'\', N\'\'allocun" +
                    "itlock\'\') THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSUBSTRING(wt.resource_description, NULLIF(CH" +
                    "ARINDEX(N\'\'hobtid=\'\', wt.resource_description), 0) + 7, COALESCE(NULLIF(CHARINDE" +
                    "X(N\'\' \'\', wt.resource_description, CHARINDEX(N\'\'hobtid=\'\', wt.resource_descripti" +
                    "on) + 7), 0), LEN(wt.resource_description) + 1) - CHARINDEX(N\'\'hobtid=\'\', wt.res" +
                    "ource_description) - 7)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNULL\r\n\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND AS hobt_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCASE x.lock_type\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\t\tWHEN N\'\'applicationlock\'\' THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSUBSTRING(wt.resource_" +
                    "description, NULLIF(CHARINDEX(N\'\'hash=\'\', wt.resource_description), 0) + 5, COAL" +
                    "ESCE(NULLIF(CHARINDEX(N\'\' \'\', wt.resource_description, CHARINDEX(N\'\'hash=\'\', wt." +
                    "resource_description) + 5), 0), LEN(wt.resource_description) + 1) - CHARINDEX(N\'" +
                    "\'hash=\'\', wt.resource_description) - 5)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\t\tNULL\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND AS applock_hash,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCASE x.loc" +
                    "k_type\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN N\'\'metadatalock\'\' THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSUBS" +
                    "TRING(wt.resource_description, NULLIF(CHARINDEX(N\'\'subresource=\'\', wt.resource_d" +
                    "escription), 0) + 12, COALESCE(NULLIF(CHARINDEX(N\'\' \'\', wt.resource_description," +
                    " CHARINDEX(N\'\'subresource=\'\', wt.resource_description) + 12), 0), LEN(wt.resourc" +
                    "e_description) + 1) - CHARINDEX(N\'\'subresource=\'\', wt.resource_description) - 12" +
                    ")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNULL\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND AS m" +
                    "etadata_resource,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCASE x.lock_type\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN N" +
                    "\'\'metadatalock\'\' THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSUBSTRING(wt.resource_description, NU" +
                    "LLIF(CHARINDEX(N\'\'classid=\'\', wt.resource_description), 0) + 8, COALESCE(NULLIF(" +
                    "CHARINDEX(N\'\' dbid=\'\', wt.resource_description) - CHARINDEX(N\'\'classid=\'\', wt.re" +
                    "source_description), 0), LEN(wt.resource_description) + 1) - 8)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNULL\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND AS metadata_class_id\r\n" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFROM\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSELECT TOP(1)\r\n\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLEFT(wt.resource_description, CHARINDEX(N\'\' \'\', wt.resource_descr" +
                    "iption) - 1) COLLATE Latin1_General_Bin2 AS lock_type\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) AS x\r\n" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFOR XML\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPATH(\'\'\'\')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\tELSE NULL\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND AS block_info,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twt.wait_dur" +
                    "ation_ms,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twt.waiting_task_address\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tFROM\r\n\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twt0.wait_type COLLATE Latin1_G" +
                    "eneral_Bin2 AS wait_type,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twt0.resource_description COLLATE Latin" +
                    "1_General_Bin2 AS resource_description,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twt0.wait_duration_ms,\r\n\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t\twt0.waiting_task_address,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWH" +
                    "EN wt0.blocking_session_id = p.blocked THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twt0.blocking_sessi" +
                    "on_id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNULL\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND AS blocki" +
                    "ng_session_id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tFROM sys.dm_os_waiting_tasks AS wt0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "CROSS APPLY\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSELECT TOP(1)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ts0.b" +
                    "locked\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFROM @sessions AS s0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHERE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\ts0.session_id = wt0.session_id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAND COALESCE(s0.wait_type, N\'" +
                    "\'\'\') <> N\'\'OLEDB\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAND wt0.wait_type <> N\'\'OLEDB\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t) AS p\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) AS wt\r\n\t\t\t\t\t\t\t\t\t\t\t\t) AS wt1\r\n\t\t\t\t\t\t\t\t\t\t\t\tGROUP BY\r\n\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t\twt1.wait_type,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twt1.waiting_task_address\r\n\t\t\t\t\t\t\t\t\t\t\t) AS" +
                    " wt2 ON\r\n\t\t\t\t\t\t\t\t\t\t\t\twt2.waiting_task_address = task_info.task_address\r\n\t\t\t\t\t\t\t\t" +
                    "\t\t\t\tAND wt2.wait_duration_ms > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\tAND task_info.runnable_time IS NUL" +
                    "L\r\n\t\t\t\t\t\t\t\t\t\t\tGROUP BY\r\n\t\t\t\t\t\t\t\t\t\t\t\ttask_info.session_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttask_info" +
                    ".request_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttask_info.physical_io,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttask_info.context_" +
                    "switches,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttask_info.thread_CPU_snapshot,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttask_info.num" +
                    "_tasks,\r\n\t\t\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN task_info.runnable_time IS NOT NULL" +
                    " THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\'\'RUNNABLE\'\'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twt2.wait_typ" +
                    "e\r\n\t\t\t\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t\t\t\t) AS w1\r\n\t\t\t\t\t\t\t\t\t) AS waits\r\n\t\t\t\t\t\t\t\t\tORDER BY\r\n\t" +
                    "\t\t\t\t\t\t\t\t\twaits.session_id,\r\n\t\t\t\t\t\t\t\t\t\twaits.request_id,\r\n\t\t\t\t\t\t\t\t\t\twaits.r\r\n\t\t\t\t" +
                    "\t\t\t\t\tFOR XML\r\n\t\t\t\t\t\t\t\t\t\tPATH(N\'\'tasks\'\'),\r\n\t\t\t\t\t\t\t\t\t\tTYPE\r\n\t\t\t\t\t\t\t\t) AS tasks_ra" +
                    "w (task_xml_raw)\r\n\t\t\t\t\t\t\t) AS tasks_final\r\n\t\t\t\t\t\t\tCROSS APPLY tasks_final.task_x" +
                    "ml.nodes(N\'\'/tasks\'\') AS task_nodes (task_node)\r\n\t\t\t\t\t\t\tWHERE\r\n\t\t\t\t\t\t\t\ttask_node" +
                    "s.task_node.exist(N\'\'session_id\'\') = 1\r\n\t\t\t\t\t\t) AS tasks ON\r\n\t\t\t\t\t\t\ttasks.sessio" +
                    "n_id = y.session_id\r\n\t\t\t\t\t\t\tAND tasks.request_id = y.request_id \r\n\t\t\t\t\t\t\'\r\n\t\t\t\t\t" +
                    "ELSE\r\n\t\t\t\t\t\t\'\'\r\n\t\t\t\tEND +\r\n\t\t\t\t\'LEFT OUTER HASH JOIN\r\n\t\t\t\t(\r\n\t\t\t\t\tSELECT TOP(@i)" +
                    "\r\n\t\t\t\t\t\tt_info.session_id,\r\n\t\t\t\t\t\tCOALESCE(t_info.request_id, -1) AS request_id," +
                    "\r\n\t\t\t\t\t\tSUM(t_info.tempdb_allocations) AS tempdb_allocations,\r\n\t\t\t\t\t\tSUM(t_info." +
                    "tempdb_current) AS tempdb_current\r\n\t\t\t\t\tFROM\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t" +
                    "\t\t\ttsu.session_id,\r\n\t\t\t\t\t\t\ttsu.request_id,\r\n\t\t\t\t\t\t\ttsu.user_objects_alloc_page_c" +
                    "ount +\r\n\t\t\t\t\t\t\t\ttsu.internal_objects_alloc_page_count AS tempdb_allocations,\r\n\t\t" +
                    "\t\t\t\t\ttsu.user_objects_alloc_page_count +\r\n\t\t\t\t\t\t\t\ttsu.internal_objects_alloc_pag" +
                    "e_count -\r\n\t\t\t\t\t\t\t\ttsu.user_objects_dealloc_page_count -\r\n\t\t\t\t\t\t\t\ttsu.internal_o" +
                    "bjects_dealloc_page_count AS tempdb_current\r\n\t\t\t\t\t\tFROM sys.dm_db_task_space_usa" +
                    "ge AS tsu\r\n\t\t\t\t\t\tCROSS APPLY\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tSELECT TOP(1)\r\n\t\t\t\t\t\t\t\ts0.session_" +
                    "id\r\n\t\t\t\t\t\t\tFROM @sessions AS s0\r\n\t\t\t\t\t\t\tWHERE\r\n\t\t\t\t\t\t\t\ts0.session_id = tsu.sessi" +
                    "on_id\r\n\t\t\t\t\t\t) AS p\r\n\r\n\t\t\t\t\t\tUNION ALL\r\n\r\n\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\tssu.sessi" +
                    "on_id,\r\n\t\t\t\t\t\t\tNULL AS request_id,\r\n\t\t\t\t\t\t\tssu.user_objects_alloc_page_count +\r\n" +
                    "\t\t\t\t\t\t\t\tssu.internal_objects_alloc_page_count AS tempdb_allocations,\r\n\t\t\t\t\t\t\tssu" +
                    ".user_objects_alloc_page_count +\r\n\t\t\t\t\t\t\t\tssu.internal_objects_alloc_page_count " +
                    "-\r\n\t\t\t\t\t\t\t\tssu.user_objects_dealloc_page_count -\r\n\t\t\t\t\t\t\t\tssu.internal_objects_d" +
                    "ealloc_page_count AS tempdb_current\r\n\t\t\t\t\t\tFROM sys.dm_db_session_space_usage AS" +
                    " ssu\r\n\t\t\t\t\t\tCROSS APPLY\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tSELECT TOP(1)\r\n\t\t\t\t\t\t\t\ts0.session_id\r\n\t" +
                    "\t\t\t\t\t\tFROM @sessions AS s0\r\n\t\t\t\t\t\t\tWHERE\r\n\t\t\t\t\t\t\t\ts0.session_id = ssu.session_id" +
                    "\r\n\t\t\t\t\t\t) AS p\r\n\t\t\t\t\t) AS t_info\r\n\t\t\t\t\tGROUP BY\r\n\t\t\t\t\t\tt_info.session_id,\r\n\t\t\t\t\t" +
                    "\tCOALESCE(t_info.request_id, -1)\r\n\t\t\t\t) AS tempdb_info ON\r\n\t\t\t\t\ttempdb_info.sess" +
                    "ion_id = y.session_id\r\n\t\t\t\t\tAND tempdb_info.request_id =\r\n\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\tWHE" +
                    "N y.status = N\'\'sleeping\'\' THEN\r\n\t\t\t\t\t\t\t\t-1\r\n\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\ty.request_id\r\n" +
                    "\t\t\t\t\t\tEND\r\n\t\t\t\t\' +\r\n\t\t\t\tCASE \r\n\t\t\t\t\tWHEN \r\n\t\t\t\t\t\tNOT \r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t@get_avg_" +
                    "time = 1 \r\n\t\t\t\t\t\t\tAND @recursion = 1\r\n\t\t\t\t\t\t) THEN \r\n\t\t\t\t\t\t\t\'\'\r\n\t\t\t\t\tELSE\r\n\t\t\t\t\t" +
                    "\t\'LEFT OUTER HASH JOIN\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\t\t*\r\n\t\t\t\t\t\t\tFROM s" +
                    "ys.dm_exec_query_stats\r\n\t\t\t\t\t\t) AS qs ON\r\n\t\t\t\t\t\t\tqs.sql_handle = y.sql_handle\r\n\t" +
                    "\t\t\t\t\t\tAND qs.plan_handle = y.plan_handle\r\n\t\t\t\t\t\t\tAND qs.statement_start_offset =" +
                    " y.statement_start_offset\r\n\t\t\t\t\t\t\tAND qs.statement_end_offset = y.statement_end_" +
                    "offset\r\n\t\t\t\t\t\t\'\r\n\t\t\t\tEND + \r\n\t\t\t\') AS x\r\n\t\t\tOPTION (KEEPFIXED PLAN, OPTIMIZE FOR" +
                    " (@i = 1)); \';\r\n\r\n\t\tSET @sql_n = CONVERT(NVARCHAR(MAX), @sql);\r\n\r\n\t\tSET @last_co" +
                    "llection_start = GETDATE();\r\n\r\n\t\tIF \r\n\t\t\t@recursion = -1\r\n\t\t\tAND @sys_info = 1\r\n" +
                    "\t\tBEGIN;\r\n\t\t\tSELECT\r\n\t\t\t\t@first_collection_ms_ticks = ms_ticks\r\n\t\t\tFROM sys.dm_o" +
                    "s_sys_info;\r\n\t\tEND;\r\n\r\n\t\tINSERT #sessions\r\n\t\t(\r\n\t\t\trecursion,\r\n\t\t\tsession_id,\r\n\t" +
                    "\t\trequest_id,\r\n\t\t\tsession_number,\r\n\t\t\telapsed_time,\r\n\t\t\tavg_elapsed_time,\r\n\t\t\tph" +
                    "ysical_io,\r\n\t\t\treads,\r\n\t\t\tphysical_reads,\r\n\t\t\twrites,\r\n\t\t\ttempdb_allocations,\r\n\t" +
                    "\t\ttempdb_current,\r\n\t\t\tCPU,\r\n\t\t\tthread_CPU_snapshot,\r\n\t\t\tcontext_switches,\r\n\t\t\tus" +
                    "ed_memory,\r\n\t\t\ttasks,\r\n\t\t\tstatus,\r\n\t\t\twait_info,\r\n\t\t\ttransaction_id,\r\n\t\t\topen_tr" +
                    "an_count,\r\n\t\t\tsql_handle,\r\n\t\t\tstatement_start_offset,\r\n\t\t\tstatement_end_offset,\t" +
                    "\t\r\n\t\t\tsql_text,\r\n\t\t\tplan_handle,\r\n\t\t\tblocking_session_id,\r\n\t\t\tpercent_complete,\r" +
                    "\n\t\t\thost_name,\r\n\t\t\tlogin_name,\r\n\t\t\tdatabase_name,\r\n\t\t\tprogram_name,\r\n\t\t\taddition" +
                    "al_info,\r\n\t\t\tstart_time,\r\n\t\t\tlogin_time,\r\n\t\t\tlast_request_start_time\r\n\t\t)\r\n\t\tEXE" +
                    "C sp_executesql \r\n\t\t\t@sql_n,\r\n\t\t\tN\'@recursion SMALLINT, @filter sysname, @not_fi" +
                    "lter sysname, @first_collection_ms_ticks BIGINT\',\r\n\t\t\t@recursion, @filter, @not_" +
                    "filter, @first_collection_ms_ticks;\r\n\r\n\t\t--Collect transaction information?\r\n\t\tI" +
                    "F\r\n\t\t\t@recursion = 1\r\n\t\t\tAND\r\n\t\t\t(\r\n\t\t\t\t@output_column_list LIKE \'%|[tran_start_" +
                    "time|]%\' ESCAPE \'|\'\r\n\t\t\t\tOR @output_column_list LIKE \'%|[tran_log_writes|]%\' ESC" +
                    "APE \'|\' \r\n\t\t\t)\r\n\t\tBEGIN;\t\r\n\t\t\tDECLARE @i INT;\r\n\t\t\tSET @i = 2147483647;\r\n\r\n\t\t\tUPD" +
                    "ATE s\r\n\t\t\tSET\r\n\t\t\t\ttran_start_time =\r\n\t\t\t\t\tCONVERT\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tDATETIME,\r\n\t\t\t" +
                    "\t\t\tLEFT\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tx.trans_info,\r\n\t\t\t\t\t\t\tNULLIF(CHARINDEX(NCHAR(254) COLLA" +
                    "TE Latin1_General_Bin2, x.trans_info) - 1, -1)\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\t121\r\n\t\t\t\t\t),\r\n\t\t" +
                    "\t\ttran_log_writes =\r\n\t\t\t\t\tRIGHT\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tx.trans_info,\r\n\t\t\t\t\t\tLEN(x.trans_" +
                    "info) - CHARINDEX(NCHAR(254) COLLATE Latin1_General_Bin2, x.trans_info)\r\n\t\t\t\t\t)\r" +
                    "\n\t\t\tFROM\r\n\t\t\t(\r\n\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\ttrans_nodes.trans_node.value(\'(session_" +
                    "id/text())[1]\', \'SMALLINT\') AS session_id,\r\n\t\t\t\t\tCOALESCE(trans_nodes.trans_node" +
                    ".value(\'(request_id/text())[1]\', \'INT\'), 0) AS request_id,\r\n\t\t\t\t\ttrans_nodes.tra" +
                    "ns_node.value(\'(trans_info/text())[1]\', \'NVARCHAR(4000)\') AS trans_info\t\t\t\t\r\n\t\t\t" +
                    "\tFROM\r\n\t\t\t\t(\r\n\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\tCONVERT\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tXML,\r\n\t\t\t\t\t\t\tR" +
                    "EPLACE\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tCONVERT(NVARCHAR(MAX), trans_raw.trans_xml_raw) COLLAT" +
                    "E Latin1_General_Bin2, \r\n\t\t\t\t\t\t\t\tN\'</trans_info></trans><trans><trans_info>\', N\'" +
                    "\'\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\tFROM\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\tCASE u_tra" +
                    "ns.r\r\n\t\t\t\t\t\t\t\tWHEN 1 THEN u_trans.session_id\r\n\t\t\t\t\t\t\t\tELSE NULL\r\n\t\t\t\t\t\t\tEND AS [" +
                    "session_id],\r\n\t\t\t\t\t\t\tCASE u_trans.r\r\n\t\t\t\t\t\t\t\tWHEN 1 THEN u_trans.request_id\r\n\t\t\t" +
                    "\t\t\t\t\tELSE NULL\r\n\t\t\t\t\t\t\tEND AS [request_id],\r\n\t\t\t\t\t\t\tCONVERT\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tN" +
                    "VARCHAR(MAX),\r\n\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN u_trans.database_id IS NOT NULL THEN\r" +
                    "\n\t\t\t\t\t\t\t\t\t\tCASE u_trans.r\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN COALESCE(CONVERT(NVARCHAR, u_t" +
                    "rans.transaction_start_time, 121) + NCHAR(254), N\'\')\r\n\t\t\t\t\t\t\t\t\t\t\tELSE N\'\'\r\n\t\t\t\t\t" +
                    "\t\t\t\t\tEND + \r\n\t\t\t\t\t\t\t\t\t\t\tREPLACE\r\n\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\tREPLACE(REPLACE(REPLA" +
                    "CE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\t\t\t\t\tREPLACE(REPLACE" +
                    "(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\t\t\t\t\tREPLACE(R" +
                    "EPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t" +
                    "\t\t\t\t\t\tCONVERT(VARCHAR(128), COALESCE(DB_NAME(u_trans.database_id), N\'(null)\')),\r" +
                    "\n\t\t\t\t\t\t\t\t\t\t\t\t\tNCHAR(31),N\'?\'),NCHAR(30),N\'?\'),NCHAR(29),N\'?\'),NCHAR(28),N\'?\'),NC" +
                    "HAR(27),N\'?\'),NCHAR(26),N\'?\'),NCHAR(25),N\'?\'),NCHAR(24),N\'?\'),NCHAR(23),N\'?\'),NC" +
                    "HAR(22),N\'?\'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNCHAR(21),N\'?\'),NCHAR(20),N\'?\'),NCHAR(19),N\'?\'),NCH" +
                    "AR(18),N\'?\'),NCHAR(17),N\'?\'),NCHAR(16),N\'?\'),NCHAR(15),N\'?\'),NCHAR(14),N\'?\'),NCH" +
                    "AR(12),N\'?\'),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNCHAR(11),N\'?\'),NCHAR(8),N\'?\'),NCHAR(7),N\'?\'),NCHAR(" +
                    "6),N\'?\'),NCHAR(5),N\'?\'),NCHAR(4),N\'?\'),NCHAR(3),N\'?\'),NCHAR(2),N\'?\'),NCHAR(1),N\'" +
                    "?\'),\r\n\t\t\t\t\t\t\t\t\t\t\t\tNCHAR(0),\r\n\t\t\t\t\t\t\t\t\t\t\t\tN\'?\'\r\n\t\t\t\t\t\t\t\t\t\t\t) +\r\n\t\t\t\t\t\t\t\t\t\t\tN\': \' " +
                    "+\r\n\t\t\t\t\t\t\t\t\t\tCONVERT(NVARCHAR, u_trans.log_record_count) + N\' (\' + CONVERT(NVARC" +
                    "HAR, u_trans.log_kb_used) + N\' kB)\' +\r\n\t\t\t\t\t\t\t\t\t\tN\',\'\r\n\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t" +
                    "N\'N/A,\'\r\n\t\t\t\t\t\t\t\tEND COLLATE Latin1_General_Bin2\r\n\t\t\t\t\t\t\t) AS [trans_info]\r\n\t\t\t\t" +
                    "\t\tFROM\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\t\ttrans.*,\r\n\t\t\t\t\t\t\t\tROW_NUMBER() O" +
                    "VER\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tPARTITION BY\r\n\t\t\t\t\t\t\t\t\t\ttrans.session_id,\r\n\t\t\t\t\t\t\t\t\t\ttr" +
                    "ans.request_id\r\n\t\t\t\t\t\t\t\t\tORDER BY\r\n\t\t\t\t\t\t\t\t\t\ttrans.transaction_start_time DESC\r\n" +
                    "\t\t\t\t\t\t\t\t) AS r\r\n\t\t\t\t\t\t\tFROM\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\t\t\tsession_" +
                    "tran_map.session_id,\r\n\t\t\t\t\t\t\t\t\tsession_tran_map.request_id,\r\n\t\t\t\t\t\t\t\t\ts_tran.dat" +
                    "abase_id,\r\n\t\t\t\t\t\t\t\t\tCOALESCE(SUM(s_tran.database_transaction_log_record_count), " +
                    "0) AS log_record_count,\r\n\t\t\t\t\t\t\t\t\tCOALESCE(SUM(s_tran.database_transaction_log_b" +
                    "ytes_used), 0) / 1024 AS log_kb_used,\r\n\t\t\t\t\t\t\t\t\tMIN(s_tran.database_transaction_" +
                    "begin_time) AS transaction_start_time\r\n\t\t\t\t\t\t\t\tFROM\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tSELECT " +
                    "TOP(@i)\r\n\t\t\t\t\t\t\t\t\t\t*\r\n\t\t\t\t\t\t\t\t\tFROM sys.dm_tran_active_transactions\r\n\t\t\t\t\t\t\t\t\tWH" +
                    "ERE\r\n\t\t\t\t\t\t\t\t\t\ttransaction_begin_time <= @last_collection_start\r\n\t\t\t\t\t\t\t\t) AS a_" +
                    "tran\r\n\t\t\t\t\t\t\t\tINNER HASH JOIN\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tSELECT TOP(@i)\r\n\t\t\t\t\t\t\t\t\t\t*\r\n" +
                    "\t\t\t\t\t\t\t\t\tFROM sys.dm_tran_database_transactions\r\n\t\t\t\t\t\t\t\t\tWHERE\r\n\t\t\t\t\t\t\t\t\t\tdatab" +
                    "ase_id < 32767\r\n\t\t\t\t\t\t\t\t) AS s_tran ON\r\n\t\t\t\t\t\t\t\t\ts_tran.transaction_id = a_tran." +
                    "transaction_id\r\n\t\t\t\t\t\t\t\tLEFT OUTER HASH JOIN\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tSELECT TOP(@i)" +
                    "\r\n\t\t\t\t\t\t\t\t\t\t*\r\n\t\t\t\t\t\t\t\t\tFROM sys.dm_tran_session_transactions\r\n\t\t\t\t\t\t\t\t) AS tst " +
                    "ON\r\n\t\t\t\t\t\t\t\t\ts_tran.transaction_id = tst.transaction_id\r\n\t\t\t\t\t\t\t\tCROSS APPLY\r\n\t\t" +
                    "\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tSELECT TOP(1)\r\n\t\t\t\t\t\t\t\t\t\ts3.session_id,\r\n\t\t\t\t\t\t\t\t\t\ts3.request_" +
                    "id\r\n\t\t\t\t\t\t\t\t\tFROM\r\n\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\tSELECT TOP(1)\r\n\t\t\t\t\t\t\t\t\t\t\ts1.session_id" +
                    ",\r\n\t\t\t\t\t\t\t\t\t\t\ts1.request_id\r\n\t\t\t\t\t\t\t\t\t\tFROM #sessions AS s1\r\n\t\t\t\t\t\t\t\t\t\tWHERE\r\n\t\t" +
                    "\t\t\t\t\t\t\t\t\ts1.transaction_id = s_tran.transaction_id\r\n\t\t\t\t\t\t\t\t\t\t\tAND s1.recursion " +
                    "= 1\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tUNION ALL\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tSELECT TOP(1)\r\n\t\t\t\t\t" +
                    "\t\t\t\t\t\ts2.session_id,\r\n\t\t\t\t\t\t\t\t\t\t\ts2.request_id\r\n\t\t\t\t\t\t\t\t\t\tFROM #sessions AS s2\r\n" +
                    "\t\t\t\t\t\t\t\t\t\tWHERE\r\n\t\t\t\t\t\t\t\t\t\t\ts2.session_id = tst.session_id\r\n\t\t\t\t\t\t\t\t\t\t\tAND s2.re" +
                    "cursion = 1\r\n\t\t\t\t\t\t\t\t\t) AS s3\r\n\t\t\t\t\t\t\t\t\tORDER BY\r\n\t\t\t\t\t\t\t\t\t\ts3.request_id\r\n\t\t\t\t\t" +
                    "\t\t\t) AS session_tran_map\r\n\t\t\t\t\t\t\t\tGROUP BY\r\n\t\t\t\t\t\t\t\t\tsession_tran_map.session_id" +
                    ",\r\n\t\t\t\t\t\t\t\t\tsession_tran_map.request_id,\r\n\t\t\t\t\t\t\t\t\ts_tran.database_id\r\n\t\t\t\t\t\t\t) " +
                    "AS trans\r\n\t\t\t\t\t\t) AS u_trans\r\n\t\t\t\t\t\tFOR XML\r\n\t\t\t\t\t\t\tPATH(\'trans\'),\r\n\t\t\t\t\t\t\tTYPE\r" +
                    "\n\t\t\t\t\t) AS trans_raw (trans_xml_raw)\r\n\t\t\t\t) AS trans_final (trans_xml)\r\n\t\t\t\tCROS" +
                    "S APPLY trans_final.trans_xml.nodes(\'/trans\') AS trans_nodes (trans_node)\r\n\t\t\t) " +
                    "AS x\r\n\t\t\tINNER HASH JOIN #sessions AS s ON\r\n\t\t\t\ts.session_id = x.session_id\r\n\t\t\t" +
                    "\tAND s.request_id = x.request_id\r\n\t\t\tOPTION (OPTIMIZE FOR (@i = 1));\r\n\t\tEND;\r\n\r\n" +
                    "\t\t--Variables for text and plan collection\r\n\t\tDECLARE\t\r\n\t\t\t@session_id SMALLINT," +
                    "\r\n\t\t\t@request_id INT,\r\n\t\t\t@sql_handle VARBINARY(64),\r\n\t\t\t@plan_handle VARBINARY(" +
                    "64),\r\n\t\t\t@statement_start_offset INT,\r\n\t\t\t@statement_end_offset INT,\r\n\t\t\t@start_" +
                    "time DATETIME,\r\n\t\t\t@database_name sysname;\r\n\r\n\t\tIF \r\n\t\t\t@recursion = 1\r\n\t\t\tAND @" +
                    "output_column_list LIKE \'%|[sql_text|]%\' ESCAPE \'|\'\r\n\t\tBEGIN;\r\n\t\t\tDECLARE sql_cu" +
                    "rsor\r\n\t\t\tCURSOR LOCAL FAST_FORWARD\r\n\t\t\tFOR \r\n\t\t\t\tSELECT \r\n\t\t\t\t\tsession_id,\r\n\t\t\t\t" +
                    "\trequest_id,\r\n\t\t\t\t\tsql_handle,\r\n\t\t\t\t\tstatement_start_offset,\r\n\t\t\t\t\tstatement_end" +
                    "_offset\r\n\t\t\t\tFROM #sessions\r\n\t\t\t\tWHERE\r\n\t\t\t\t\trecursion = 1\r\n\t\t\t\t\tAND sql_handle " +
                    "IS NOT NULL\r\n\t\t\tOPTION (KEEPFIXED PLAN);\r\n\r\n\t\t\tOPEN sql_cursor;\r\n\r\n\t\t\tFETCH NEXT" +
                    " FROM sql_cursor\r\n\t\t\tINTO \r\n\t\t\t\t@session_id,\r\n\t\t\t\t@request_id,\r\n\t\t\t\t@sql_handle," +
                    "\r\n\t\t\t\t@statement_start_offset,\r\n\t\t\t\t@statement_end_offset;\r\n\r\n\t\t\t--Wait up to 5 " +
                    "ms for the SQL text, then give up\r\n\t\t\tSET LOCK_TIMEOUT 5;\r\n\r\n\t\t\tWHILE @@FETCH_ST" +
                    "ATUS = 0\r\n\t\t\tBEGIN;\r\n\t\t\t\tBEGIN TRY;\r\n\t\t\t\t\tUPDATE s\r\n\t\t\t\t\tSET\r\n\t\t\t\t\t\ts.sql_text =" +
                    "\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tSELECT\r\n\t\t\t\t\t\t\t\tREPLACE\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tREPLACE(REPLACE(R" +
                    "EPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\t\tREPLACE(REPLAC" +
                    "E(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\t\tREPLACE(REP" +
                    "LACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\t\t" +
                    "\tN\'--\' + NCHAR(13) + NCHAR(10) +\r\n\t\t\t\t\t\t\t\t\t\tCASE \r\n\t\t\t\t\t\t\t\t\t\t\tWHEN @get_full_inn" +
                    "er_text = 1 THEN est.text\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN LEN(est.text) < (@statement_end_offse" +
                    "t / 2) + 1 THEN est.text\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN SUBSTRING(est.text, (@statement_start_" +
                    "offset/2), 2) LIKE N\'[a-zA-Z0-9][a-zA-Z0-9]\' THEN est.text\r\n\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t" +
                    "\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN @statement_start_offset > 0 THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\tSUBSTRING\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\test.text,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t((@stateme" +
                    "nt_start_offset/2) + 1),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\tWHEN @statement_end_offset = -1 THEN 2147483647\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE ((@sta" +
                    "tement_end_offset - @statement_start_offset)/2) + 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t" +
                    "\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tELSE RTRIM(LTRIM(est.text))\r\n\t\t\t\t\t\t\t\t\t" +
                    "\t\t\tEND\r\n\t\t\t\t\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\t\t\t\t\tNCHAR(13) + NCHAR(10) + N\'--\' COLLATE Latin1_" +
                    "General_Bin2,\r\n\t\t\t\t\t\t\t\t\t\tNCHAR(31),N\'?\'),NCHAR(30),N\'?\'),NCHAR(29),N\'?\'),NCHAR(2" +
                    "8),N\'?\'),NCHAR(27),N\'?\'),NCHAR(26),N\'?\'),NCHAR(25),N\'?\'),NCHAR(24),N\'?\'),NCHAR(2" +
                    "3),N\'?\'),NCHAR(22),N\'?\'),\r\n\t\t\t\t\t\t\t\t\t\tNCHAR(21),N\'?\'),NCHAR(20),N\'?\'),NCHAR(19),N" +
                    "\'?\'),NCHAR(18),N\'?\'),NCHAR(17),N\'?\'),NCHAR(16),N\'?\'),NCHAR(15),N\'?\'),NCHAR(14),N" +
                    "\'?\'),NCHAR(12),N\'?\'),\r\n\t\t\t\t\t\t\t\t\t\tNCHAR(11),N\'?\'),NCHAR(8),N\'?\'),NCHAR(7),N\'?\'),N" +
                    "CHAR(6),N\'?\'),NCHAR(5),N\'?\'),NCHAR(4),N\'?\'),NCHAR(3),N\'?\'),NCHAR(2),N\'?\'),NCHAR(" +
                    "1),N\'?\'),\r\n\t\t\t\t\t\t\t\t\tNCHAR(0),\r\n\t\t\t\t\t\t\t\t\tN\'\'\r\n\t\t\t\t\t\t\t\t) AS [processing-instructio" +
                    "n(query)]\r\n\t\t\t\t\t\t\tFOR XML\r\n\t\t\t\t\t\t\t\tPATH(\'\'),\r\n\t\t\t\t\t\t\t\tTYPE\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\ts.st" +
                    "atement_start_offset = \r\n\t\t\t\t\t\t\tCASE \r\n\t\t\t\t\t\t\t\tWHEN LEN(est.text) < (@statement_" +
                    "end_offset / 2) + 1 THEN 0\r\n\t\t\t\t\t\t\t\tWHEN SUBSTRING(CONVERT(VARCHAR(MAX), est.tex" +
                    "t), (@statement_start_offset/2), 2) LIKE \'[a-zA-Z0-9][a-zA-Z0-9]\' THEN 0\r\n\t\t\t\t\t\t" +
                    "\t\tELSE @statement_start_offset\r\n\t\t\t\t\t\t\tEND,\r\n\t\t\t\t\t\ts.statement_end_offset = \r\n\t\t" +
                    "\t\t\t\t\tCASE \r\n\t\t\t\t\t\t\t\tWHEN LEN(est.text) < (@statement_end_offset / 2) + 1 THEN -1" +
                    "\r\n\t\t\t\t\t\t\t\tWHEN SUBSTRING(CONVERT(VARCHAR(MAX), est.text), (@statement_start_offs" +
                    "et/2), 2) LIKE \'[a-zA-Z0-9][a-zA-Z0-9]\' THEN -1\r\n\t\t\t\t\t\t\t\tELSE @statement_end_off" +
                    "set\r\n\t\t\t\t\t\t\tEND\r\n\t\t\t\t\tFROM \r\n\t\t\t\t\t\t#sessions AS s,\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tSELECT TOP(1" +
                    ")\r\n\t\t\t\t\t\t\t\ttext\r\n\t\t\t\t\t\t\tFROM\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tSELECT \r\n\t\t\t\t\t\t\t\t\ttext, \r\n\t\t\t\t\t\t" +
                    "\t\t\t0 AS row_num\r\n\t\t\t\t\t\t\t\tFROM sys.dm_exec_sql_text(@sql_handle)\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t" +
                    "\t\t\tUNION ALL\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tSELECT \r\n\t\t\t\t\t\t\t\t\tNULL,\r\n\t\t\t\t\t\t\t\t\t1 AS row_num\r\n" +
                    "\t\t\t\t\t\t\t) AS est0\r\n\t\t\t\t\t\t\tORDER BY\r\n\t\t\t\t\t\t\t\trow_num\r\n\t\t\t\t\t\t) AS est\r\n\t\t\t\t\tWHERE \r" +
                    "\n\t\t\t\t\t\ts.session_id = @session_id\r\n\t\t\t\t\t\tAND s.request_id = @request_id\r\n\t\t\t\t\t\tA" +
                    "ND s.recursion = 1\r\n\t\t\t\t\tOPTION (KEEPFIXED PLAN);\r\n\t\t\t\tEND TRY\r\n\t\t\t\tBEGIN CATCH;" +
                    "\r\n\t\t\t\t\tUPDATE s\r\n\t\t\t\t\tSET\r\n\t\t\t\t\t\ts.sql_text = \r\n\t\t\t\t\t\t\tCASE ERROR_NUMBER() \r\n\t\t\t" +
                    "\t\t\t\t\tWHEN 1222 THEN \'<timeout_exceeded />\'\r\n\t\t\t\t\t\t\t\tELSE \'<error message=\"\' + ER" +
                    "ROR_MESSAGE() + \'\" />\'\r\n\t\t\t\t\t\t\tEND\r\n\t\t\t\t\tFROM #sessions AS s\r\n\t\t\t\t\tWHERE \r\n\t\t\t\t\t" +
                    "\ts.session_id = @session_id\r\n\t\t\t\t\t\tAND s.request_id = @request_id\r\n\t\t\t\t\t\tAND s.r" +
                    "ecursion = 1\r\n\t\t\t\t\tOPTION (KEEPFIXED PLAN);\r\n\t\t\t\tEND CATCH;\r\n\r\n\t\t\t\tFETCH NEXT FR" +
                    "OM sql_cursor\r\n\t\t\t\tINTO\r\n\t\t\t\t\t@session_id,\r\n\t\t\t\t\t@request_id,\r\n\t\t\t\t\t@sql_handle," +
                    "\r\n\t\t\t\t\t@statement_start_offset,\r\n\t\t\t\t\t@statement_end_offset;\r\n\t\t\tEND;\r\n\r\n\t\t\t--Re" +
                    "turn this to the default\r\n\t\t\tSET LOCK_TIMEOUT -1;\r\n\r\n\t\t\tCLOSE sql_cursor;\r\n\t\t\tDE" +
                    "ALLOCATE sql_cursor;\r\n\t\tEND;\r\n\r\n\t\tIF \r\n\t\t\t@get_outer_command = 1 \r\n\t\t\tAND @recur" +
                    "sion = 1\r\n\t\t\tAND @output_column_list LIKE \'%|[sql_command|]%\' ESCAPE \'|\'\r\n\t\tBEGI" +
                    "N;\r\n\t\t\tDECLARE @buffer_results TABLE\r\n\t\t\t(\r\n\t\t\t\tEventType VARCHAR(30),\r\n\t\t\t\tPara" +
                    "meters INT,\r\n\t\t\t\tEventInfo NVARCHAR(4000),\r\n\t\t\t\tstart_time DATETIME,\r\n\t\t\t\tsessio" +
                    "n_number INT IDENTITY(1,1) NOT NULL PRIMARY KEY\r\n\t\t\t);\r\n\r\n\t\t\tDECLARE buffer_curs" +
                    "or\r\n\t\t\tCURSOR LOCAL FAST_FORWARD\r\n\t\t\tFOR \r\n\t\t\t\tSELECT \r\n\t\t\t\t\tsession_id,\r\n\t\t\t\t\tM" +
                    "AX(start_time) AS start_time\r\n\t\t\t\tFROM #sessions\r\n\t\t\t\tWHERE\r\n\t\t\t\t\trecursion = 1\r" +
                    "\n\t\t\t\tGROUP BY\r\n\t\t\t\t\tsession_id\r\n\t\t\t\tORDER BY\r\n\t\t\t\t\tsession_id\r\n\t\t\t\tOPTION (KEEPF" +
                    "IXED PLAN);\r\n\r\n\t\t\tOPEN buffer_cursor;\r\n\r\n\t\t\tFETCH NEXT FROM buffer_cursor\r\n\t\t\tIN" +
                    "TO \r\n\t\t\t\t@session_id,\r\n\t\t\t\t@start_time;\r\n\r\n\t\t\tWHILE @@FETCH_STATUS = 0\r\n\t\t\tBEGIN" +
                    ";\r\n\t\t\t\tBEGIN TRY;\r\n\t\t\t\t\t--In SQL Server 2008, DBCC INPUTBUFFER will throw \r\n\t\t\t\t" +
                    "\t--an exception if the session no longer exists\r\n\t\t\t\t\tINSERT @buffer_results\r\n\t\t" +
                    "\t\t\t(\r\n\t\t\t\t\t\tEventType,\r\n\t\t\t\t\t\tParameters,\r\n\t\t\t\t\t\tEventInfo\r\n\t\t\t\t\t)\r\n\t\t\t\t\tEXEC sp" +
                    "_executesql\r\n\t\t\t\t\t\tN\'DBCC INPUTBUFFER(@session_id) WITH NO_INFOMSGS;\',\r\n\t\t\t\t\t\tN\'" +
                    "@session_id SMALLINT\',\r\n\t\t\t\t\t\t@session_id;\r\n\r\n\t\t\t\t\tUPDATE br\r\n\t\t\t\t\tSET\r\n\t\t\t\t\t\tbr" +
                    ".start_time = @start_time\r\n\t\t\t\t\tFROM @buffer_results AS br\r\n\t\t\t\t\tWHERE\r\n\t\t\t\t\t\tbr" +
                    ".session_number = \r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tSELECT MAX(br2.session_number)\r\n\t\t\t\t\t\t\tFROM " +
                    "@buffer_results br2\r\n\t\t\t\t\t\t);\r\n\t\t\t\tEND TRY\r\n\t\t\t\tBEGIN CATCH\r\n\t\t\t\tEND CATCH;\r\n\r\n\t" +
                    "\t\t\tFETCH NEXT FROM buffer_cursor\r\n\t\t\t\tINTO \r\n\t\t\t\t\t@session_id,\r\n\t\t\t\t\t@start_time" +
                    ";\r\n\t\t\tEND;\r\n\r\n\t\t\tUPDATE s\r\n\t\t\tSET\r\n\t\t\t\tsql_command = \r\n\t\t\t\t(\r\n\t\t\t\t\tSELECT \r\n\t\t\t\t" +
                    "\t\tREPLACE\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLA" +
                    "CE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPL" +
                    "ACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REP" +
                    "LACE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\tCONVERT\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tNVARCHAR(MAX" +
                    "),\r\n\t\t\t\t\t\t\t\t\tN\'--\' + NCHAR(13) + NCHAR(10) + br.EventInfo + NCHAR(13) + NCHAR(10" +
                    ") + N\'--\' COLLATE Latin1_General_Bin2\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\tNCHAR(31),N\'?\'),NCHAR" +
                    "(30),N\'?\'),NCHAR(29),N\'?\'),NCHAR(28),N\'?\'),NCHAR(27),N\'?\'),NCHAR(26),N\'?\'),NCHAR" +
                    "(25),N\'?\'),NCHAR(24),N\'?\'),NCHAR(23),N\'?\'),NCHAR(22),N\'?\'),\r\n\t\t\t\t\t\t\t\tNCHAR(21),N" +
                    "\'?\'),NCHAR(20),N\'?\'),NCHAR(19),N\'?\'),NCHAR(18),N\'?\'),NCHAR(17),N\'?\'),NCHAR(16),N" +
                    "\'?\'),NCHAR(15),N\'?\'),NCHAR(14),N\'?\'),NCHAR(12),N\'?\'),\r\n\t\t\t\t\t\t\t\tNCHAR(11),N\'?\'),N" +
                    "CHAR(8),N\'?\'),NCHAR(7),N\'?\'),NCHAR(6),N\'?\'),NCHAR(5),N\'?\'),NCHAR(4),N\'?\'),NCHAR(" +
                    "3),N\'?\'),NCHAR(2),N\'?\'),NCHAR(1),N\'?\'),\r\n\t\t\t\t\t\t\tNCHAR(0),\r\n\t\t\t\t\t\t\tN\'\'\r\n\t\t\t\t\t\t) A" +
                    "S [processing-instruction(query)]\r\n\t\t\t\t\tFROM @buffer_results AS br\r\n\t\t\t\t\tWHERE \r" +
                    "\n\t\t\t\t\t\tbr.session_number = s.session_number\r\n\t\t\t\t\t\tAND br.start_time = s.start_t" +
                    "ime\r\n\t\t\t\t\t\tAND \r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\ts.start_time = s.last_request_start_" +
                    "time\r\n\t\t\t\t\t\t\t\tAND EXISTS\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tSELECT *\r\n\t\t\t\t\t\t\t\t\tFROM sys.dm_exe" +
                    "c_requests r2\r\n\t\t\t\t\t\t\t\t\tWHERE\r\n\t\t\t\t\t\t\t\t\t\tr2.session_id = s.session_id\r\n\t\t\t\t\t\t\t\t\t" +
                    "\tAND r2.request_id = s.request_id\r\n\t\t\t\t\t\t\t\t\t\tAND r2.start_time = s.start_time\r\n\t" +
                    "\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\tOR \r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\ts.request_id = 0\r\n\t\t\t\t\t\t\t\tAND " +
                    "EXISTS\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tSELECT *\r\n\t\t\t\t\t\t\t\t\tFROM sys.dm_exec_sessions s2\r\n\t\t\t" +
                    "\t\t\t\t\t\tWHERE\r\n\t\t\t\t\t\t\t\t\t\ts2.session_id = s.session_id\r\n\t\t\t\t\t\t\t\t\t\tAND s2.last_reque" +
                    "st_start_time = s.last_request_start_time\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\tFO" +
                    "R XML\r\n\t\t\t\t\t\tPATH(\'\'),\r\n\t\t\t\t\t\tTYPE\r\n\t\t\t\t)\r\n\t\t\tFROM #sessions AS s\r\n\t\t\tWHERE\r\n\t\t\t" +
                    "\trecursion = 1\r\n\t\t\tOPTION (KEEPFIXED PLAN);\r\n\r\n\t\t\tCLOSE buffer_cursor;\r\n\t\t\tDEALL" +
                    "OCATE buffer_cursor;\r\n\t\tEND;\r\n\r\n\t\tIF \r\n\t\t\t@get_plans >= 1 \r\n\t\t\tAND @recursion = " +
                    "1\r\n\t\t\tAND @output_column_list LIKE \'%|[query_plan|]%\' ESCAPE \'|\'\r\n\t\tBEGIN;\r\n\t\t\tD" +
                    "ECLARE @live_plan BIT;\r\n\t\t\tSET @live_plan = ISNULL(CONVERT(BIT, SIGN(OBJECT_ID(\'" +
                    "sys.dm_exec_query_statistics_xml\'))), 0)\r\n\r\n\t\t\tDECLARE plan_cursor\r\n\t\t\tCURSOR LO" +
                    "CAL FAST_FORWARD\r\n\t\t\tFOR \r\n\t\t\t\tSELECT\r\n\t\t\t\t\tsession_id,\r\n\t\t\t\t\trequest_id,\r\n\t\t\t\t\t" +
                    "plan_handle,\r\n\t\t\t\t\tstatement_start_offset,\r\n\t\t\t\t\tstatement_end_offset\r\n\t\t\t\tFROM " +
                    "#sessions\r\n\t\t\t\tWHERE\r\n\t\t\t\t\trecursion = 1\r\n\t\t\t\t\tAND plan_handle IS NOT NULL\r\n\t\t\tO" +
                    "PTION (KEEPFIXED PLAN);\r\n\r\n\t\t\tOPEN plan_cursor;\r\n\r\n\t\t\tFETCH NEXT FROM plan_curso" +
                    "r\r\n\t\t\tINTO \r\n\t\t\t\t@session_id,\r\n\t\t\t\t@request_id,\r\n\t\t\t\t@plan_handle,\r\n\t\t\t\t@stateme" +
                    "nt_start_offset,\r\n\t\t\t\t@statement_end_offset;\r\n\r\n\t\t\t--Wait up to 5 ms for a query" +
                    " plan, then give up\r\n\t\t\tSET LOCK_TIMEOUT 5;\r\n\r\n\t\t\tWHILE @@FETCH_STATUS = 0\r\n\t\t\tB" +
                    "EGIN;\r\n\t\t\t\tDECLARE @query_plan XML;\r\n\t\t\t\tSET @query_plan = NULL;\r\n\r\n\t\t\t\tIF @live" +
                    "_plan = 1\r\n\t\t\t\tBEGIN;\r\n\t\t\t\t\tBEGIN TRY;\r\n\t\t\t\t\t\tSELECT\r\n\t\t\t\t\t\t\t@query_plan = x.que" +
                    "ry_plan\r\n\t\t\t\t\t\tFROM sys.dm_exec_query_statistics_xml(@session_id) AS x;\r\n\r\n\t\t\t\t\t" +
                    "\tIF \r\n\t\t\t\t\t\t\t@query_plan IS NOT NULL\r\n\t\t\t\t\t\t\tAND EXISTS\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tSELEC" +
                    "T\r\n\t\t\t\t\t\t\t\t\t*\r\n\t\t\t\t\t\t\t\tFROM sys.dm_exec_requests AS r\r\n\t\t\t\t\t\t\t\tWHERE\r\n\t\t\t\t\t\t\t\t\tr" +
                    ".session_id = @session_id\r\n\t\t\t\t\t\t\t\t\tAND r.request_id = @request_id\r\n\t\t\t\t\t\t\t\t\tAND" +
                    " r.plan_handle = @plan_handle\r\n\t\t\t\t\t\t\t\t\tAND r.statement_start_offset = @statemen" +
                    "t_start_offset\r\n\t\t\t\t\t\t\t\t\tAND r.statement_end_offset = @statement_end_offset\r\n\t\t\t" +
                    "\t\t\t\t)\r\n\t\t\t\t\t\tBEGIN;\r\n\t\t\t\t\t\t\tUPDATE s\r\n\t\t\t\t\t\t\tSET\r\n\t\t\t\t\t\t\t\ts.query_plan = @query_" +
                    "plan\r\n\t\t\t\t\t\t\tFROM #sessions AS s\r\n\t\t\t\t\t\t\tWHERE \r\n\t\t\t\t\t\t\t\ts.session_id = @session" +
                    "_id\r\n\t\t\t\t\t\t\t\tAND s.request_id = @request_id\r\n\t\t\t\t\t\t\t\tAND s.recursion = 1\r\n\t\t\t\t\t\t" +
                    "\tOPTION (KEEPFIXED PLAN);\r\n\t\t\t\t\t\tEND;\r\n\t\t\t\t\tEND TRY\r\n\t\t\t\t\tBEGIN CATCH;\r\n\t\t\t\t\t\tSE" +
                    "T @query_plan = NULL;\r\n\t\t\t\t\tEND CATCH;\r\n\t\t\t\tEND;\r\n\r\n\t\t\t\tIF @query_plan IS NULL\r\n" +
                    "\t\t\t\tBEGIN;\r\n\t\t\t\t\tBEGIN TRY;\r\n\t\t\t\t\t\tUPDATE s\r\n\t\t\t\t\t\tSET\r\n\t\t\t\t\t\t\ts.query_plan =\r\n\t" +
                    "\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tSELECT\r\n\t\t\t\t\t\t\t\t\tCONVERT(xml, query_plan)\r\n\t\t\t\t\t\t\t\tFROM sys.dm_" +
                    "exec_text_query_plan\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t@plan_handle, \r\n\t\t\t\t\t\t\t\t\tCASE @get_pla" +
                    "ns\r\n\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN\r\n\t\t\t\t\t\t\t\t\t\t\t@statement_start_offset\r\n\t\t\t\t\t\t\t\t\t\tELSE\r\n\t" +
                    "\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\tEND, \r\n\t\t\t\t\t\t\t\t\tCASE @get_plans\r\n\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN\r\n\t\t" +
                    "\t\t\t\t\t\t\t\t\t@statement_end_offset\r\n\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t-1\r\n\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t" +
                    "\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\tFROM #sessions AS s\r\n\t\t\t\t\t\tWHERE \r\n\t\t\t\t\t\t\ts.session_id =" +
                    " @session_id\r\n\t\t\t\t\t\t\tAND s.request_id = @request_id\r\n\t\t\t\t\t\t\tAND s.recursion = 1\r" +
                    "\n\t\t\t\t\t\tOPTION (KEEPFIXED PLAN);\r\n\t\t\t\t\tEND TRY\r\n\t\t\t\t\tBEGIN CATCH;\r\n\t\t\t\t\t\tIF ERROR" +
                    "_NUMBER() = 6335\r\n\t\t\t\t\t\tBEGIN;\r\n\t\t\t\t\t\t\tUPDATE s\r\n\t\t\t\t\t\t\tSET\r\n\t\t\t\t\t\t\t\ts.query_pla" +
                    "n =\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tSELECT\r\n\t\t\t\t\t\t\t\t\t\tN\'--\' + NCHAR(13) + NCHAR(10) + \r\n\t\t\t" +
                    "\t\t\t\t\t\t\tN\'-- Could not render showplan due to XML data type limitations. \' + NCHA" +
                    "R(13) + NCHAR(10) + \r\n\t\t\t\t\t\t\t\t\t\tN\'-- To see the graphical plan save the XML belo" +
                    "w as a .SQLPLAN file and re-open in SSMS.\' + NCHAR(13) + NCHAR(10) +\r\n\t\t\t\t\t\t\t\t\t\t" +
                    "N\'--\' + NCHAR(13) + NCHAR(10) +\r\n\t\t\t\t\t\t\t\t\t\t\tREPLACE(qp.query_plan, N\'<RelOp\', NC" +
                    "HAR(13)+NCHAR(10)+N\'<RelOp\') + \r\n\t\t\t\t\t\t\t\t\t\t\tNCHAR(13) + NCHAR(10) + N\'--\' COLLAT" +
                    "E Latin1_General_Bin2 AS [processing-instruction(query_plan)]\r\n\t\t\t\t\t\t\t\t\tFROM sys" +
                    ".dm_exec_text_query_plan\r\n\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t@plan_handle, \r\n\t\t\t\t\t\t\t\t\t\tCASE @" +
                    "get_plans\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t@statement_start_offset\r\n\t\t\t\t\t\t\t\t" +
                    "\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\tEND, \r\n\t\t\t\t\t\t\t\t\t\tCASE @get_plans\r\n\t\t\t\t\t\t\t\t\t\t\tW" +
                    "HEN 1 THEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t@statement_end_offset\r\n\t\t\t\t\t\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\t\t\t\t\t-1\r\n" +
                    "\t\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t\t\t) AS qp\r\n\t\t\t\t\t\t\t\t\tFOR XML\r\n\t\t\t\t\t\t\t\t\t\tPATH(\'\'),\r\n\t\t\t\t\t\t\t\t" +
                    "\t\tTYPE\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\tFROM #sessions AS s\r\n\t\t\t\t\t\t\tWHERE \r\n\t\t\t\t\t\t\t\ts.session_" +
                    "id = @session_id\r\n\t\t\t\t\t\t\t\tAND s.request_id = @request_id\r\n\t\t\t\t\t\t\t\tAND s.recursio" +
                    "n = 1\r\n\t\t\t\t\t\t\tOPTION (KEEPFIXED PLAN);\r\n\t\t\t\t\t\tEND;\r\n\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\tBEGIN;\r\n\t\t" +
                    "\t\t\t\t\tUPDATE s\r\n\t\t\t\t\t\t\tSET\r\n\t\t\t\t\t\t\t\ts.query_plan = \r\n\t\t\t\t\t\t\t\t\tCASE ERROR_NUMBER()" +
                    " \r\n\t\t\t\t\t\t\t\t\t\tWHEN 1222 THEN \'<timeout_exceeded />\'\r\n\t\t\t\t\t\t\t\t\t\tELSE \'<error messa" +
                    "ge=\"\' + ERROR_MESSAGE() + \'\" />\'\r\n\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\tFROM #sessions AS s\r\n\t\t\t\t" +
                    "\t\t\tWHERE \r\n\t\t\t\t\t\t\t\ts.session_id = @session_id\r\n\t\t\t\t\t\t\t\tAND s.request_id = @reque" +
                    "st_id\r\n\t\t\t\t\t\t\t\tAND s.recursion = 1\r\n\t\t\t\t\t\t\tOPTION (KEEPFIXED PLAN);\r\n\t\t\t\t\t\tEND;\r" +
                    "\n\t\t\t\t\tEND CATCH;\r\n\t\t\t\tEND;\r\n\r\n\t\t\t\tFETCH NEXT FROM plan_cursor\r\n\t\t\t\tINTO\r\n\t\t\t\t\t@s" +
                    "ession_id,\r\n\t\t\t\t\t@request_id,\r\n\t\t\t\t\t@plan_handle,\r\n\t\t\t\t\t@statement_start_offset," +
                    "\r\n\t\t\t\t\t@statement_end_offset;\r\n\t\t\tEND;\r\n\r\n\t\t\t--Return this to the default\r\n\t\t\tSE" +
                    "T LOCK_TIMEOUT -1;\r\n\r\n\t\t\tCLOSE plan_cursor;\r\n\t\t\tDEALLOCATE plan_cursor;\r\n\t\tEND;\r" +
                    "\n\r\n\t\tIF \r\n\t\t\t@get_locks = 1 \r\n\t\t\tAND @recursion = 1\r\n\t\t\tAND @output_column_list " +
                    "LIKE \'%|[locks|]%\' ESCAPE \'|\'\r\n\t\tBEGIN;\r\n\t\t\tDECLARE locks_cursor\r\n\t\t\tCURSOR LOCA" +
                    "L FAST_FORWARD\r\n\t\t\tFOR \r\n\t\t\t\tSELECT DISTINCT\r\n\t\t\t\t\tdatabase_name\r\n\t\t\t\tFROM #lock" +
                    "s\r\n\t\t\t\tWHERE\r\n\t\t\t\t\tEXISTS\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tSELECT *\r\n\t\t\t\t\t\tFROM #sessions AS s\r\n\t\t" +
                    "\t\t\t\tWHERE\r\n\t\t\t\t\t\t\ts.session_id = #locks.session_id\r\n\t\t\t\t\t\t\tAND recursion = 1\r\n\t\t" +
                    "\t\t\t)\r\n\t\t\t\t\tAND database_name <> \'(null)\'\r\n\t\t\t\tOPTION (KEEPFIXED PLAN);\r\n\r\n\t\t\tOPE" +
                    "N locks_cursor;\r\n\r\n\t\t\tFETCH NEXT FROM locks_cursor\r\n\t\t\tINTO \r\n\t\t\t\t@database_name" +
                    ";\r\n\r\n\t\t\tWHILE @@FETCH_STATUS = 0\r\n\t\t\tBEGIN;\r\n\t\t\t\tBEGIN TRY;\r\n\t\t\t\t\tSET @sql_n = C" +
                    "ONVERT(NVARCHAR(MAX), \'\') +\r\n\t\t\t\t\t\t\'UPDATE l \' +\r\n\t\t\t\t\t\t\'SET \' +\r\n\t\t\t\t\t\t\t\'object" +
                    "_name = \' +\r\n\t\t\t\t\t\t\t\t\'REPLACE \' +\r\n\t\t\t\t\t\t\t\t\'( \' +\r\n\t\t\t\t\t\t\t\t\t\'REPLACE(REPLACE(REP" +
                    "LACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( \' +\r\n\t\t\t\t\t\t\t\t\t\'REPLACE(REP" +
                    "LACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( \' +\r\n\t\t\t\t\t\t\t\t\t\'REP" +
                    "LACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( \' " +
                    "+\r\n\t\t\t\t\t\t\t\t\t\t\'o.name COLLATE Latin1_General_Bin2, \' +\r\n\t\t\t\t\t\t\t\t\t\t\'NCHAR(31),N\'\'?" +
                    "\'\'),NCHAR(30),N\'\'?\'\'),NCHAR(29),N\'\'?\'\'),NCHAR(28),N\'\'?\'\'),NCHAR(27),N\'\'?\'\'),NCHA" +
                    "R(26),N\'\'?\'\'),NCHAR(25),N\'\'?\'\'),NCHAR(24),N\'\'?\'\'),NCHAR(23),N\'\'?\'\'),NCHAR(22),N\'" +
                    "\'?\'\'), \' +\r\n\t\t\t\t\t\t\t\t\t\t\'NCHAR(21),N\'\'?\'\'),NCHAR(20),N\'\'?\'\'),NCHAR(19),N\'\'?\'\'),NCH" +
                    "AR(18),N\'\'?\'\'),NCHAR(17),N\'\'?\'\'),NCHAR(16),N\'\'?\'\'),NCHAR(15),N\'\'?\'\'),NCHAR(14),N" +
                    "\'\'?\'\'),NCHAR(12),N\'\'?\'\'), \' +\r\n\t\t\t\t\t\t\t\t\t\t\'NCHAR(11),N\'\'?\'\'),NCHAR(8),N\'\'?\'\'),NCH" +
                    "AR(7),N\'\'?\'\'),NCHAR(6),N\'\'?\'\'),NCHAR(5),N\'\'?\'\'),NCHAR(4),N\'\'?\'\'),NCHAR(3),N\'\'?\'\'" +
                    "),NCHAR(2),N\'\'?\'\'),NCHAR(1),N\'\'?\'\'), \' +\r\n\t\t\t\t\t\t\t\t\t\'NCHAR(0), \' +\r\n\t\t\t\t\t\t\t\t\tN\'\'\'" +
                    "\'\' \' +\r\n\t\t\t\t\t\t\t\t\'), \' +\r\n\t\t\t\t\t\t\t\'index_name = \' +\r\n\t\t\t\t\t\t\t\t\'REPLACE \' +\r\n\t\t\t\t\t\t\t" +
                    "\t\'( \' +\r\n\t\t\t\t\t\t\t\t\t\'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLA" +
                    "CE(REPLACE( \' +\r\n\t\t\t\t\t\t\t\t\t\'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLA" +
                    "CE(REPLACE(REPLACE( \' +\r\n\t\t\t\t\t\t\t\t\t\'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLA" +
                    "CE(REPLACE(REPLACE(REPLACE(REPLACE( \' +\r\n\t\t\t\t\t\t\t\t\t\t\'i.name COLLATE Latin1_Genera" +
                    "l_Bin2, \' +\r\n\t\t\t\t\t\t\t\t\t\t\'NCHAR(31),N\'\'?\'\'),NCHAR(30),N\'\'?\'\'),NCHAR(29),N\'\'?\'\'),NC" +
                    "HAR(28),N\'\'?\'\'),NCHAR(27),N\'\'?\'\'),NCHAR(26),N\'\'?\'\'),NCHAR(25),N\'\'?\'\'),NCHAR(24)," +
                    "N\'\'?\'\'),NCHAR(23),N\'\'?\'\'),NCHAR(22),N\'\'?\'\'), \' +\r\n\t\t\t\t\t\t\t\t\t\t\'NCHAR(21),N\'\'?\'\'),N" +
                    "CHAR(20),N\'\'?\'\'),NCHAR(19),N\'\'?\'\'),NCHAR(18),N\'\'?\'\'),NCHAR(17),N\'\'?\'\'),NCHAR(16)" +
                    ",N\'\'?\'\'),NCHAR(15),N\'\'?\'\'),NCHAR(14),N\'\'?\'\'),NCHAR(12),N\'\'?\'\'), \' +\r\n\t\t\t\t\t\t\t\t\t\t\'" +
                    "NCHAR(11),N\'\'?\'\'),NCHAR(8),N\'\'?\'\'),NCHAR(7),N\'\'?\'\'),NCHAR(6),N\'\'?\'\'),NCHAR(5),N\'" +
                    "\'?\'\'),NCHAR(4),N\'\'?\'\'),NCHAR(3),N\'\'?\'\'),NCHAR(2),N\'\'?\'\'),NCHAR(1),N\'\'?\'\'), \' +\r\n" +
                    "\t\t\t\t\t\t\t\t\t\'NCHAR(0), \' +\r\n\t\t\t\t\t\t\t\t\tN\'\'\'\'\' \' +\r\n\t\t\t\t\t\t\t\t\'), \' +\r\n\t\t\t\t\t\t\t\'schema_na" +
                    "me = \' +\r\n\t\t\t\t\t\t\t\t\'REPLACE \' +\r\n\t\t\t\t\t\t\t\t\'( \' +\r\n\t\t\t\t\t\t\t\t\t\'REPLACE(REPLACE(REPLAC" +
                    "E(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( \' +\r\n\t\t\t\t\t\t\t\t\t\'REPLACE(REPLAC" +
                    "E(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( \' +\r\n\t\t\t\t\t\t\t\t\t\'REPLAC" +
                    "E(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( \' +\r\n" +
                    "\t\t\t\t\t\t\t\t\t\t\'s.name COLLATE Latin1_General_Bin2, \' +\r\n\t\t\t\t\t\t\t\t\t\t\'NCHAR(31),N\'\'?\'\')" +
                    ",NCHAR(30),N\'\'?\'\'),NCHAR(29),N\'\'?\'\'),NCHAR(28),N\'\'?\'\'),NCHAR(27),N\'\'?\'\'),NCHAR(2" +
                    "6),N\'\'?\'\'),NCHAR(25),N\'\'?\'\'),NCHAR(24),N\'\'?\'\'),NCHAR(23),N\'\'?\'\'),NCHAR(22),N\'\'?\'" +
                    "\'), \' +\r\n\t\t\t\t\t\t\t\t\t\t\'NCHAR(21),N\'\'?\'\'),NCHAR(20),N\'\'?\'\'),NCHAR(19),N\'\'?\'\'),NCHAR(" +
                    "18),N\'\'?\'\'),NCHAR(17),N\'\'?\'\'),NCHAR(16),N\'\'?\'\'),NCHAR(15),N\'\'?\'\'),NCHAR(14),N\'\'?" +
                    "\'\'),NCHAR(12),N\'\'?\'\'), \' +\r\n\t\t\t\t\t\t\t\t\t\t\'NCHAR(11),N\'\'?\'\'),NCHAR(8),N\'\'?\'\'),NCHAR(" +
                    "7),N\'\'?\'\'),NCHAR(6),N\'\'?\'\'),NCHAR(5),N\'\'?\'\'),NCHAR(4),N\'\'?\'\'),NCHAR(3),N\'\'?\'\'),N" +
                    "CHAR(2),N\'\'?\'\'),NCHAR(1),N\'\'?\'\'), \' +\r\n\t\t\t\t\t\t\t\t\t\'NCHAR(0), \' +\r\n\t\t\t\t\t\t\t\t\tN\'\'\'\'\' " +
                    "\' +\r\n\t\t\t\t\t\t\t\t\'), \' +\r\n\t\t\t\t\t\t\t\'principal_name = \' + \r\n\t\t\t\t\t\t\t\t\'REPLACE \' +\r\n\t\t\t\t\t" +
                    "\t\t\t\'( \' +\r\n\t\t\t\t\t\t\t\t\t\'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REP" +
                    "LACE(REPLACE( \' +\r\n\t\t\t\t\t\t\t\t\t\'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REP" +
                    "LACE(REPLACE(REPLACE( \' +\r\n\t\t\t\t\t\t\t\t\t\'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REP" +
                    "LACE(REPLACE(REPLACE(REPLACE(REPLACE( \' +\r\n\t\t\t\t\t\t\t\t\t\t\'dp.name COLLATE Latin1_Gen" +
                    "eral_Bin2, \' +\r\n\t\t\t\t\t\t\t\t\t\t\'NCHAR(31),N\'\'?\'\'),NCHAR(30),N\'\'?\'\'),NCHAR(29),N\'\'?\'\')" +
                    ",NCHAR(28),N\'\'?\'\'),NCHAR(27),N\'\'?\'\'),NCHAR(26),N\'\'?\'\'),NCHAR(25),N\'\'?\'\'),NCHAR(2" +
                    "4),N\'\'?\'\'),NCHAR(23),N\'\'?\'\'),NCHAR(22),N\'\'?\'\'), \' +\r\n\t\t\t\t\t\t\t\t\t\t\'NCHAR(21),N\'\'?\'\'" +
                    "),NCHAR(20),N\'\'?\'\'),NCHAR(19),N\'\'?\'\'),NCHAR(18),N\'\'?\'\'),NCHAR(17),N\'\'?\'\'),NCHAR(" +
                    "16),N\'\'?\'\'),NCHAR(15),N\'\'?\'\'),NCHAR(14),N\'\'?\'\'),NCHAR(12),N\'\'?\'\'), \' +\r\n\t\t\t\t\t\t\t\t" +
                    "\t\t\'NCHAR(11),N\'\'?\'\'),NCHAR(8),N\'\'?\'\'),NCHAR(7),N\'\'?\'\'),NCHAR(6),N\'\'?\'\'),NCHAR(5)" +
                    ",N\'\'?\'\'),NCHAR(4),N\'\'?\'\'),NCHAR(3),N\'\'?\'\'),NCHAR(2),N\'\'?\'\'),NCHAR(1),N\'\'?\'\'), \' " +
                    "+\r\n\t\t\t\t\t\t\t\t\t\'NCHAR(0), \' +\r\n\t\t\t\t\t\t\t\t\tN\'\'\'\'\' \' +\r\n\t\t\t\t\t\t\t\t\') \' +\r\n\t\t\t\t\t\t\'FROM #lo" +
                    "cks AS l \' +\r\n\t\t\t\t\t\t\'LEFT OUTER JOIN \' + QUOTENAME(@database_name) + \'.sys.alloc" +
                    "ation_units AS au ON \' +\r\n\t\t\t\t\t\t\t\'au.allocation_unit_id = l.allocation_unit_id \'" +
                    " +\r\n\t\t\t\t\t\t\'LEFT OUTER JOIN \' + QUOTENAME(@database_name) + \'.sys.partitions AS p" +
                    " ON \' +\r\n\t\t\t\t\t\t\t\'p.hobt_id = \' +\r\n\t\t\t\t\t\t\t\t\'COALESCE \' +\r\n\t\t\t\t\t\t\t\t\'( \' +\r\n\t\t\t\t\t\t\t" +
                    "\t\t\'l.hobt_id, \' +\r\n\t\t\t\t\t\t\t\t\t\'CASE \' +\r\n\t\t\t\t\t\t\t\t\t\t\'WHEN au.type IN (1, 3) THEN au" +
                    ".container_id \' +\r\n\t\t\t\t\t\t\t\t\t\t\'ELSE NULL \' +\r\n\t\t\t\t\t\t\t\t\t\'END \' +\r\n\t\t\t\t\t\t\t\t\') \' +\r\n" +
                    "\t\t\t\t\t\t\'LEFT OUTER JOIN \' + QUOTENAME(@database_name) + \'.sys.partitions AS p1 ON" +
                    " \' +\r\n\t\t\t\t\t\t\t\'l.hobt_id IS NULL \' +\r\n\t\t\t\t\t\t\t\'AND au.type = 2 \' +\r\n\t\t\t\t\t\t\t\'AND p1" +
                    ".partition_id = au.container_id \' +\r\n\t\t\t\t\t\t\'LEFT OUTER JOIN \' + QUOTENAME(@datab" +
                    "ase_name) + \'.sys.objects AS o ON \' +\r\n\t\t\t\t\t\t\t\'o.object_id = COALESCE(l.object_i" +
                    "d, p.object_id, p1.object_id) \' +\r\n\t\t\t\t\t\t\'LEFT OUTER JOIN \' + QUOTENAME(@databas" +
                    "e_name) + \'.sys.indexes AS i ON \' +\r\n\t\t\t\t\t\t\t\'i.object_id = COALESCE(l.object_id," +
                    " p.object_id, p1.object_id) \' +\r\n\t\t\t\t\t\t\t\'AND i.index_id = COALESCE(l.index_id, p" +
                    ".index_id, p1.index_id) \' +\r\n\t\t\t\t\t\t\'LEFT OUTER JOIN \' + QUOTENAME(@database_name" +
                    ") + \'.sys.schemas AS s ON \' +\r\n\t\t\t\t\t\t\t\'s.schema_id = COALESCE(l.schema_id, o.sch" +
                    "ema_id) \' +\r\n\t\t\t\t\t\t\'LEFT OUTER JOIN \' + QUOTENAME(@database_name) + \'.sys.databa" +
                    "se_principals AS dp ON \' +\r\n\t\t\t\t\t\t\t\'dp.principal_id = l.principal_id \' +\r\n\t\t\t\t\t\t" +
                    "\'WHERE \' +\r\n\t\t\t\t\t\t\t\'l.database_name = @database_name \' +\r\n\t\t\t\t\t\t\'OPTION (KEEPFIX" +
                    "ED PLAN); \';\r\n\t\t\t\t\t\r\n\t\t\t\t\tEXEC sp_executesql\r\n\t\t\t\t\t\t@sql_n,\r\n\t\t\t\t\t\tN\'@database_n" +
                    "ame sysname\',\r\n\t\t\t\t\t\t@database_name;\r\n\t\t\t\tEND TRY\r\n\t\t\t\tBEGIN CATCH;\r\n\t\t\t\t\tUPDATE" +
                    " #locks\r\n\t\t\t\t\tSET\r\n\t\t\t\t\t\tquery_error = \r\n\t\t\t\t\t\t\tREPLACE\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tREPLA" +
                    "CE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\tREP" +
                    "LACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\tR" +
                    "EPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\r" +
                    "\n\t\t\t\t\t\t\t\t\tCONVERT\r\n\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\tNVARCHAR(MAX), \r\n\t\t\t\t\t\t\t\t\t\tERROR_MESSAG" +
                    "E() COLLATE Latin1_General_Bin2\r\n\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\tNCHAR(31),N\'?\'),NCHAR(30)" +
                    ",N\'?\'),NCHAR(29),N\'?\'),NCHAR(28),N\'?\'),NCHAR(27),N\'?\'),NCHAR(26),N\'?\'),NCHAR(25)" +
                    ",N\'?\'),NCHAR(24),N\'?\'),NCHAR(23),N\'?\'),NCHAR(22),N\'?\'),\r\n\t\t\t\t\t\t\t\t\tNCHAR(21),N\'?\'" +
                    "),NCHAR(20),N\'?\'),NCHAR(19),N\'?\'),NCHAR(18),N\'?\'),NCHAR(17),N\'?\'),NCHAR(16),N\'?\'" +
                    "),NCHAR(15),N\'?\'),NCHAR(14),N\'?\'),NCHAR(12),N\'?\'),\r\n\t\t\t\t\t\t\t\t\tNCHAR(11),N\'?\'),NCH" +
                    "AR(8),N\'?\'),NCHAR(7),N\'?\'),NCHAR(6),N\'?\'),NCHAR(5),N\'?\'),NCHAR(4),N\'?\'),NCHAR(3)" +
                    ",N\'?\'),NCHAR(2),N\'?\'),NCHAR(1),N\'?\'),\r\n\t\t\t\t\t\t\t\tNCHAR(0),\r\n\t\t\t\t\t\t\t\tN\'\'\r\n\t\t\t\t\t\t\t)\r" +
                    "\n\t\t\t\t\tWHERE \r\n\t\t\t\t\t\tdatabase_name = @database_name\r\n\t\t\t\t\tOPTION (KEEPFIXED PLAN)" +
                    ";\r\n\t\t\t\tEND CATCH;\r\n\r\n\t\t\t\tFETCH NEXT FROM locks_cursor\r\n\t\t\t\tINTO\r\n\t\t\t\t\t@database_" +
                    "name;\r\n\t\t\tEND;\r\n\r\n\t\t\tCLOSE locks_cursor;\r\n\t\t\tDEALLOCATE locks_cursor;\r\n\r\n\t\t\tCREA" +
                    "TE CLUSTERED INDEX IX_SRD ON #locks (session_id, request_id, database_name);\r\n\r\n" +
                    "\t\t\tUPDATE s\r\n\t\t\tSET \r\n\t\t\t\ts.locks =\r\n\t\t\t\t(\r\n\t\t\t\t\tSELECT \r\n\t\t\t\t\t\tREPLACE\r\n\t\t\t\t\t\t(" +
                    "\r\n\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE" +
                    "(\r\n\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLAC" +
                    "E(\r\n\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLA" +
                    "CE(REPLACE(\r\n\t\t\t\t\t\t\t\tCONVERT\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tNVARCHAR(MAX), \r\n\t\t\t\t\t\t\t\t\tl1.d" +
                    "atabase_name COLLATE Latin1_General_Bin2\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\tNCHAR(31),N\'?\'),NC" +
                    "HAR(30),N\'?\'),NCHAR(29),N\'?\'),NCHAR(28),N\'?\'),NCHAR(27),N\'?\'),NCHAR(26),N\'?\'),NC" +
                    "HAR(25),N\'?\'),NCHAR(24),N\'?\'),NCHAR(23),N\'?\'),NCHAR(22),N\'?\'),\r\n\t\t\t\t\t\t\t\tNCHAR(21" +
                    "),N\'?\'),NCHAR(20),N\'?\'),NCHAR(19),N\'?\'),NCHAR(18),N\'?\'),NCHAR(17),N\'?\'),NCHAR(16" +
                    "),N\'?\'),NCHAR(15),N\'?\'),NCHAR(14),N\'?\'),NCHAR(12),N\'?\'),\r\n\t\t\t\t\t\t\t\tNCHAR(11),N\'?\'" +
                    "),NCHAR(8),N\'?\'),NCHAR(7),N\'?\'),NCHAR(6),N\'?\'),NCHAR(5),N\'?\'),NCHAR(4),N\'?\'),NCH" +
                    "AR(3),N\'?\'),NCHAR(2),N\'?\'),NCHAR(1),N\'?\'),\r\n\t\t\t\t\t\t\tNCHAR(0),\r\n\t\t\t\t\t\t\tN\'\'\r\n\t\t\t\t\t\t" +
                    ") AS [Database/@name],\r\n\t\t\t\t\t\tMIN(l1.query_error) AS [Database/@query_error],\r\n\t" +
                    "\t\t\t\t\t(\r\n\t\t\t\t\t\t\tSELECT \r\n\t\t\t\t\t\t\t\tl2.request_mode AS [Lock/@request_mode],\r\n\t\t\t\t\t\t" +
                    "\t\tl2.request_status AS [Lock/@request_status],\r\n\t\t\t\t\t\t\t\tCOUNT(*) AS [Lock/@reque" +
                    "st_count]\r\n\t\t\t\t\t\t\tFROM #locks AS l2\r\n\t\t\t\t\t\t\tWHERE \r\n\t\t\t\t\t\t\t\tl1.session_id = l2.s" +
                    "ession_id\r\n\t\t\t\t\t\t\t\tAND l1.request_id = l2.request_id\r\n\t\t\t\t\t\t\t\tAND l2.database_na" +
                    "me = l1.database_name\r\n\t\t\t\t\t\t\t\tAND l2.resource_type = \'DATABASE\'\r\n\t\t\t\t\t\t\tGROUP B" +
                    "Y\r\n\t\t\t\t\t\t\t\tl2.request_mode,\r\n\t\t\t\t\t\t\t\tl2.request_status\r\n\t\t\t\t\t\t\tFOR XML\r\n\t\t\t\t\t\t\t\t" +
                    "PATH(\'\'),\r\n\t\t\t\t\t\t\t\tTYPE\r\n\t\t\t\t\t\t) AS [Database/Locks],\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tSELECT\r\n\t" +
                    "\t\t\t\t\t\t\tCOALESCE(l3.object_name, \'(null)\') AS [Object/@name],\r\n\t\t\t\t\t\t\t\tl3.schema_" +
                    "name AS [Object/@schema_name],\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tSELECT\r\n\t\t\t\t\t\t\t\t\t\tl4.resourc" +
                    "e_type AS [Lock/@resource_type],\r\n\t\t\t\t\t\t\t\t\t\tl4.page_type AS [Lock/@page_type],\r\n" +
                    "\t\t\t\t\t\t\t\t\t\tl4.index_name AS [Lock/@index_name],\r\n\t\t\t\t\t\t\t\t\t\tCASE \r\n\t\t\t\t\t\t\t\t\t\t\tWHEN" +
                    " l4.object_name IS NULL THEN l4.schema_name\r\n\t\t\t\t\t\t\t\t\t\t\tELSE NULL\r\n\t\t\t\t\t\t\t\t\t\tEND" +
                    " AS [Lock/@schema_name],\r\n\t\t\t\t\t\t\t\t\t\tl4.principal_name AS [Lock/@principal_name]," +
                    "\r\n\t\t\t\t\t\t\t\t\t\tl4.resource_description AS [Lock/@resource_description],\r\n\t\t\t\t\t\t\t\t\t\t" +
                    "l4.request_mode AS [Lock/@request_mode],\r\n\t\t\t\t\t\t\t\t\t\tl4.request_status AS [Lock/@" +
                    "request_status],\r\n\t\t\t\t\t\t\t\t\t\tSUM(l4.request_count) AS [Lock/@request_count]\r\n\t\t\t\t" +
                    "\t\t\t\t\tFROM #locks AS l4\r\n\t\t\t\t\t\t\t\t\tWHERE \r\n\t\t\t\t\t\t\t\t\t\tl4.session_id = l3.session_id" +
                    "\r\n\t\t\t\t\t\t\t\t\t\tAND l4.request_id = l3.request_id\r\n\t\t\t\t\t\t\t\t\t\tAND l3.database_name = " +
                    "l4.database_name\r\n\t\t\t\t\t\t\t\t\t\tAND COALESCE(l3.object_name, \'(null)\') = COALESCE(l4" +
                    ".object_name, \'(null)\')\r\n\t\t\t\t\t\t\t\t\t\tAND COALESCE(l3.schema_name, \'\') = COALESCE(l" +
                    "4.schema_name, \'\')\r\n\t\t\t\t\t\t\t\t\t\tAND l4.resource_type <> \'DATABASE\'\r\n\t\t\t\t\t\t\t\t\tGROUP" +
                    " BY\r\n\t\t\t\t\t\t\t\t\t\tl4.resource_type,\r\n\t\t\t\t\t\t\t\t\t\tl4.page_type,\r\n\t\t\t\t\t\t\t\t\t\tl4.index_na" +
                    "me,\r\n\t\t\t\t\t\t\t\t\t\tCASE \r\n\t\t\t\t\t\t\t\t\t\t\tWHEN l4.object_name IS NULL THEN l4.schema_name" +
                    "\r\n\t\t\t\t\t\t\t\t\t\t\tELSE NULL\r\n\t\t\t\t\t\t\t\t\t\tEND,\r\n\t\t\t\t\t\t\t\t\t\tl4.principal_name,\r\n\t\t\t\t\t\t\t\t\t\t" +
                    "l4.resource_description,\r\n\t\t\t\t\t\t\t\t\t\tl4.request_mode,\r\n\t\t\t\t\t\t\t\t\t\tl4.request_statu" +
                    "s\r\n\t\t\t\t\t\t\t\t\tFOR XML\r\n\t\t\t\t\t\t\t\t\t\tPATH(\'\'),\r\n\t\t\t\t\t\t\t\t\t\tTYPE\r\n\t\t\t\t\t\t\t\t) AS [Object/L" +
                    "ocks]\r\n\t\t\t\t\t\t\tFROM #locks AS l3\r\n\t\t\t\t\t\t\tWHERE \r\n\t\t\t\t\t\t\t\tl3.session_id = l1.sessi" +
                    "on_id\r\n\t\t\t\t\t\t\t\tAND l3.request_id = l1.request_id\r\n\t\t\t\t\t\t\t\tAND l3.database_name =" +
                    " l1.database_name\r\n\t\t\t\t\t\t\t\tAND l3.resource_type <> \'DATABASE\'\r\n\t\t\t\t\t\t\tGROUP BY \r" +
                    "\n\t\t\t\t\t\t\t\tl3.session_id,\r\n\t\t\t\t\t\t\t\tl3.request_id,\r\n\t\t\t\t\t\t\t\tl3.database_name,\r\n\t\t\t\t" +
                    "\t\t\t\tCOALESCE(l3.object_name, \'(null)\'),\r\n\t\t\t\t\t\t\t\tl3.schema_name\r\n\t\t\t\t\t\t\tFOR XML\r" +
                    "\n\t\t\t\t\t\t\t\tPATH(\'\'),\r\n\t\t\t\t\t\t\t\tTYPE\r\n\t\t\t\t\t\t) AS [Database/Objects]\r\n\t\t\t\t\tFROM #lock" +
                    "s AS l1\r\n\t\t\t\t\tWHERE\r\n\t\t\t\t\t\tl1.session_id = s.session_id\r\n\t\t\t\t\t\tAND l1.request_id" +
                    " = s.request_id\r\n\t\t\t\t\t\tAND l1.start_time IN (s.start_time, s.last_request_start_" +
                    "time)\r\n\t\t\t\t\t\tAND s.recursion = 1\r\n\t\t\t\t\tGROUP BY \r\n\t\t\t\t\t\tl1.session_id,\r\n\t\t\t\t\t\tl1" +
                    ".request_id,\r\n\t\t\t\t\t\tl1.database_name\r\n\t\t\t\t\tFOR XML\r\n\t\t\t\t\t\tPATH(\'\'),\r\n\t\t\t\t\t\tTYPE\r" +
                    "\n\t\t\t\t)\r\n\t\t\tFROM #sessions s\r\n\t\t\tOPTION (KEEPFIXED PLAN);\r\n\t\tEND;\r\n\r\n\t\tIF \r\n\t\t\t@f" +
                    "ind_block_leaders = 1\r\n\t\t\tAND @recursion = 1\r\n\t\t\tAND @output_column_list LIKE \'%" +
                    "|[blocked_session_count|]%\' ESCAPE \'|\'\r\n\t\tBEGIN;\r\n\t\t\tWITH\r\n\t\t\tblockers AS\r\n\t\t\t(\r" +
                    "\n\t\t\t\tSELECT\r\n\t\t\t\t\tsession_id,\r\n\t\t\t\t\tsession_id AS top_level_session_id,\r\n\t\t\t\t\tCO" +
                    "NVERT(VARCHAR(8000), \'.\' + CONVERT(VARCHAR(8000), session_id) + \'.\') AS the_path" +
                    "\r\n\t\t\t\tFROM #sessions\r\n\t\t\t\tWHERE\r\n\t\t\t\t\trecursion = 1\r\n\r\n\t\t\t\tUNION ALL\r\n\r\n\t\t\t\tSELE" +
                    "CT\r\n\t\t\t\t\ts.session_id,\r\n\t\t\t\t\tb.top_level_session_id,\r\n\t\t\t\t\tCONVERT(VARCHAR(8000)" +
                    ", b.the_path + CONVERT(VARCHAR(8000), s.session_id) + \'.\') AS the_path\r\n\t\t\t\tFROM" +
                    " blockers AS b\r\n\t\t\t\tJOIN #sessions AS s ON\r\n\t\t\t\t\ts.blocking_session_id = b.sessi" +
                    "on_id\r\n\t\t\t\t\tAND s.recursion = 1\r\n\t\t\t\t\tAND b.the_path NOT LIKE \'%.\' + CONVERT(VAR" +
                    "CHAR(8000), s.session_id) + \'.%\' COLLATE Latin1_General_Bin2\r\n\t\t\t)\r\n\t\t\tUPDATE s\r" +
                    "\n\t\t\tSET\r\n\t\t\t\ts.blocked_session_count = x.blocked_session_count\r\n\t\t\tFROM #session" +
                    "s AS s\r\n\t\t\tJOIN\r\n\t\t\t(\r\n\t\t\t\tSELECT\r\n\t\t\t\t\tb.top_level_session_id AS session_id,\r\n\t" +
                    "\t\t\t\tCOUNT(*) - 1 AS blocked_session_count\r\n\t\t\t\tFROM blockers AS b\r\n\t\t\t\tGROUP BY\r" +
                    "\n\t\t\t\t\tb.top_level_session_id\r\n\t\t\t) x ON\r\n\t\t\t\ts.session_id = x.session_id\r\n\t\t\tWHE" +
                    "RE\r\n\t\t\t\ts.recursion = 1;\r\n\t\tEND;\r\n\r\n\t\tIF\r\n\t\t\t@get_task_info = 2\r\n\t\t\tAND @output_" +
                    "column_list LIKE \'%|[additional_info|]%\' ESCAPE \'|\'\r\n\t\t\tAND @recursion = 1\r\n\t\tBE" +
                    "GIN;\r\n\t\t\tCREATE TABLE #blocked_requests\r\n\t\t\t(\r\n\t\t\t\tsession_id SMALLINT NOT NULL," +
                    "\r\n\t\t\t\trequest_id INT NOT NULL,\r\n\t\t\t\tdatabase_name sysname NOT NULL,\r\n\t\t\t\tobject_" +
                    "id INT,\r\n\t\t\t\thobt_id BIGINT,\r\n\t\t\t\tschema_id INT,\r\n\t\t\t\tschema_name sysname NULL,\r" +
                    "\n\t\t\t\tobject_name sysname NULL,\r\n\t\t\t\tquery_error NVARCHAR(2048),\r\n\t\t\t\tPRIMARY KEY" +
                    " (database_name, session_id, request_id)\r\n\t\t\t);\r\n\r\n\t\t\tCREATE STATISTICS s_databa" +
                    "se_name ON #blocked_requests (database_name)\r\n\t\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE" +
                    ";\r\n\t\t\tCREATE STATISTICS s_schema_name ON #blocked_requests (schema_name)\r\n\t\t\tWIT" +
                    "H SAMPLE 0 ROWS, NORECOMPUTE;\r\n\t\t\tCREATE STATISTICS s_object_name ON #blocked_re" +
                    "quests (object_name)\r\n\t\t\tWITH SAMPLE 0 ROWS, NORECOMPUTE;\r\n\t\t\tCREATE STATISTICS " +
                    "s_query_error ON #blocked_requests (query_error)\r\n\t\t\tWITH SAMPLE 0 ROWS, NORECOM" +
                    "PUTE;\r\n\t\t\r\n\t\t\tINSERT #blocked_requests\r\n\t\t\t(\r\n\t\t\t\tsession_id,\r\n\t\t\t\trequest_id,\r\n" +
                    "\t\t\t\tdatabase_name,\r\n\t\t\t\tobject_id,\r\n\t\t\t\thobt_id,\r\n\t\t\t\tschema_id\r\n\t\t\t)\r\n\t\t\tSELECT" +
                    "\r\n\t\t\t\tsession_id,\r\n\t\t\t\trequest_id,\r\n\t\t\t\tdatabase_name,\r\n\t\t\t\tobject_id,\r\n\t\t\t\thobt" +
                    "_id,\r\n\t\t\t\tCONVERT(INT, SUBSTRING(schema_node, CHARINDEX(\' = \', schema_node) + 3," +
                    " LEN(schema_node))) AS schema_id\r\n\t\t\tFROM\r\n\t\t\t(\r\n\t\t\t\tSELECT\r\n\t\t\t\t\tsession_id,\r\n\t" +
                    "\t\t\t\trequest_id,\r\n\t\t\t\t\tagent_nodes.agent_node.value(\'(database_name/text())[1]\', " +
                    "\'sysname\') AS database_name,\r\n\t\t\t\t\tagent_nodes.agent_node.value(\'(object_id/text" +
                    "())[1]\', \'int\') AS object_id,\r\n\t\t\t\t\tagent_nodes.agent_node.value(\'(hobt_id/text(" +
                    "))[1]\', \'bigint\') AS hobt_id,\r\n\t\t\t\t\tagent_nodes.agent_node.value(\'(metadata_reso" +
                    "urce/text()[.=\"SCHEMA\"]/../../metadata_class_id/text())[1]\', \'varchar(100)\') AS " +
                    "schema_node\r\n\t\t\t\tFROM #sessions AS s\r\n\t\t\t\tCROSS APPLY s.additional_info.nodes(\'/" +
                    "/block_info\') AS agent_nodes (agent_node)\r\n\t\t\t\tWHERE\r\n\t\t\t\t\ts.recursion = 1\r\n\t\t\t)" +
                    " AS t\r\n\t\t\tWHERE\r\n\t\t\t\tt.database_name IS NOT NULL\r\n\t\t\t\tAND\r\n\t\t\t\t(\r\n\t\t\t\t\tt.object_" +
                    "id IS NOT NULL\r\n\t\t\t\t\tOR t.hobt_id IS NOT NULL\r\n\t\t\t\t\tOR t.schema_node IS NOT NULL" +
                    "\r\n\t\t\t\t);\r\n\t\t\t\r\n\t\t\tDECLARE blocks_cursor\r\n\t\t\tCURSOR LOCAL FAST_FORWARD\r\n\t\t\tFOR\r\n\t" +
                    "\t\t\tSELECT DISTINCT\r\n\t\t\t\t\tdatabase_name\r\n\t\t\t\tFROM #blocked_requests;\r\n\t\t\t\t\r\n\t\t\tOP" +
                    "EN blocks_cursor;\r\n\t\t\t\r\n\t\t\tFETCH NEXT FROM blocks_cursor\r\n\t\t\tINTO \r\n\t\t\t\t@databas" +
                    "e_name;\r\n\t\t\t\r\n\t\t\tWHILE @@FETCH_STATUS = 0\r\n\t\t\tBEGIN;\r\n\t\t\t\tBEGIN TRY;\r\n\t\t\t\t\tSET @" +
                    "sql_n = \r\n\t\t\t\t\t\tCONVERT(NVARCHAR(MAX), \'\') +\r\n\t\t\t\t\t\t\'UPDATE b \' +\r\n\t\t\t\t\t\t\'SET \' " +
                    "+\r\n\t\t\t\t\t\t\t\'b.schema_name = \' +\r\n\t\t\t\t\t\t\t\t\'REPLACE \' +\r\n\t\t\t\t\t\t\t\t\'( \' +\r\n\t\t\t\t\t\t\t\t\t\'" +
                    "REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( \' +\r\n\t\t" +
                    "\t\t\t\t\t\t\t\'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(" +
                    " \' +\r\n\t\t\t\t\t\t\t\t\t\'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(" +
                    "REPLACE(REPLACE( \' +\r\n\t\t\t\t\t\t\t\t\t\t\'s.name COLLATE Latin1_General_Bin2, \' +\r\n\t\t\t\t\t\t" +
                    "\t\t\t\t\'NCHAR(31),N\'\'?\'\'),NCHAR(30),N\'\'?\'\'),NCHAR(29),N\'\'?\'\'),NCHAR(28),N\'\'?\'\'),NCH" +
                    "AR(27),N\'\'?\'\'),NCHAR(26),N\'\'?\'\'),NCHAR(25),N\'\'?\'\'),NCHAR(24),N\'\'?\'\'),NCHAR(23),N" +
                    "\'\'?\'\'),NCHAR(22),N\'\'?\'\'), \' +\r\n\t\t\t\t\t\t\t\t\t\t\'NCHAR(21),N\'\'?\'\'),NCHAR(20),N\'\'?\'\'),NC" +
                    "HAR(19),N\'\'?\'\'),NCHAR(18),N\'\'?\'\'),NCHAR(17),N\'\'?\'\'),NCHAR(16),N\'\'?\'\'),NCHAR(15)," +
                    "N\'\'?\'\'),NCHAR(14),N\'\'?\'\'),NCHAR(12),N\'\'?\'\'), \' +\r\n\t\t\t\t\t\t\t\t\t\t\'NCHAR(11),N\'\'?\'\'),N" +
                    "CHAR(8),N\'\'?\'\'),NCHAR(7),N\'\'?\'\'),NCHAR(6),N\'\'?\'\'),NCHAR(5),N\'\'?\'\'),NCHAR(4),N\'\'?" +
                    "\'\'),NCHAR(3),N\'\'?\'\'),NCHAR(2),N\'\'?\'\'),NCHAR(1),N\'\'?\'\'), \' +\r\n\t\t\t\t\t\t\t\t\t\'NCHAR(0)," +
                    " \' +\r\n\t\t\t\t\t\t\t\t\tN\'\'\'\'\' \' +\r\n\t\t\t\t\t\t\t\t\'), \' +\r\n\t\t\t\t\t\t\t\'b.object_name = \' +\r\n\t\t\t\t\t\t\t" +
                    "\t\'REPLACE \' +\r\n\t\t\t\t\t\t\t\t\'( \' +\r\n\t\t\t\t\t\t\t\t\t\'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE" +
                    "(REPLACE(REPLACE(REPLACE(REPLACE( \' +\r\n\t\t\t\t\t\t\t\t\t\'REPLACE(REPLACE(REPLACE(REPLACE" +
                    "(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( \' +\r\n\t\t\t\t\t\t\t\t\t\'REPLACE(REPLACE(REPLACE" +
                    "(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( \' +\r\n\t\t\t\t\t\t\t\t\t\t\'o.name" +
                    " COLLATE Latin1_General_Bin2, \' +\r\n\t\t\t\t\t\t\t\t\t\t\'NCHAR(31),N\'\'?\'\'),NCHAR(30),N\'\'?\'\'" +
                    "),NCHAR(29),N\'\'?\'\'),NCHAR(28),N\'\'?\'\'),NCHAR(27),N\'\'?\'\'),NCHAR(26),N\'\'?\'\'),NCHAR(" +
                    "25),N\'\'?\'\'),NCHAR(24),N\'\'?\'\'),NCHAR(23),N\'\'?\'\'),NCHAR(22),N\'\'?\'\'), \' +\r\n\t\t\t\t\t\t\t\t" +
                    "\t\t\'NCHAR(21),N\'\'?\'\'),NCHAR(20),N\'\'?\'\'),NCHAR(19),N\'\'?\'\'),NCHAR(18),N\'\'?\'\'),NCHAR" +
                    "(17),N\'\'?\'\'),NCHAR(16),N\'\'?\'\'),NCHAR(15),N\'\'?\'\'),NCHAR(14),N\'\'?\'\'),NCHAR(12),N\'\'" +
                    "?\'\'), \' +\r\n\t\t\t\t\t\t\t\t\t\t\'NCHAR(11),N\'\'?\'\'),NCHAR(8),N\'\'?\'\'),NCHAR(7),N\'\'?\'\'),NCHAR(" +
                    "6),N\'\'?\'\'),NCHAR(5),N\'\'?\'\'),NCHAR(4),N\'\'?\'\'),NCHAR(3),N\'\'?\'\'),NCHAR(2),N\'\'?\'\'),N" +
                    "CHAR(1),N\'\'?\'\'), \' +\r\n\t\t\t\t\t\t\t\t\t\'NCHAR(0), \' +\r\n\t\t\t\t\t\t\t\t\tN\'\'\'\'\' \' +\r\n\t\t\t\t\t\t\t\t\') \'" +
                    " +\r\n\t\t\t\t\t\t\'FROM #blocked_requests AS b \' +\r\n\t\t\t\t\t\t\'LEFT OUTER JOIN \' + QUOTENAME" +
                    "(@database_name) + \'.sys.partitions AS p ON \' +\r\n\t\t\t\t\t\t\t\'p.hobt_id = b.hobt_id \'" +
                    " +\r\n\t\t\t\t\t\t\'LEFT OUTER JOIN \' + QUOTENAME(@database_name) + \'.sys.objects AS o ON" +
                    " \' +\r\n\t\t\t\t\t\t\t\'o.object_id = COALESCE(p.object_id, b.object_id) \' +\r\n\t\t\t\t\t\t\'LEFT " +
                    "OUTER JOIN \' + QUOTENAME(@database_name) + \'.sys.schemas AS s ON \' +\r\n\t\t\t\t\t\t\t\'s." +
                    "schema_id = COALESCE(o.schema_id, b.schema_id) \' +\r\n\t\t\t\t\t\t\'WHERE \' +\r\n\t\t\t\t\t\t\t\'b." +
                    "database_name = @database_name; \';\r\n\t\t\t\t\t\r\n\t\t\t\t\tEXEC sp_executesql\r\n\t\t\t\t\t\t@sql_n" +
                    ",\r\n\t\t\t\t\t\tN\'@database_name sysname\',\r\n\t\t\t\t\t\t@database_name;\r\n\t\t\t\tEND TRY\r\n\t\t\t\tBEG" +
                    "IN CATCH;\r\n\t\t\t\t\tUPDATE #blocked_requests\r\n\t\t\t\t\tSET\r\n\t\t\t\t\t\tquery_error = \r\n\t\t\t\t\t\t" +
                    "\tREPLACE\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPL" +
                    "ACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(RE" +
                    "PLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(" +
                    "REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\t\tCONVERT\r\n\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\tNVARCH" +
                    "AR(MAX), \r\n\t\t\t\t\t\t\t\t\t\tERROR_MESSAGE() COLLATE Latin1_General_Bin2\r\n\t\t\t\t\t\t\t\t\t),\r\n\t" +
                    "\t\t\t\t\t\t\t\tNCHAR(31),N\'?\'),NCHAR(30),N\'?\'),NCHAR(29),N\'?\'),NCHAR(28),N\'?\'),NCHAR(27" +
                    "),N\'?\'),NCHAR(26),N\'?\'),NCHAR(25),N\'?\'),NCHAR(24),N\'?\'),NCHAR(23),N\'?\'),NCHAR(22" +
                    "),N\'?\'),\r\n\t\t\t\t\t\t\t\t\tNCHAR(21),N\'?\'),NCHAR(20),N\'?\'),NCHAR(19),N\'?\'),NCHAR(18),N\'?" +
                    "\'),NCHAR(17),N\'?\'),NCHAR(16),N\'?\'),NCHAR(15),N\'?\'),NCHAR(14),N\'?\'),NCHAR(12),N\'?" +
                    "\'),\r\n\t\t\t\t\t\t\t\t\tNCHAR(11),N\'?\'),NCHAR(8),N\'?\'),NCHAR(7),N\'?\'),NCHAR(6),N\'?\'),NCHAR" +
                    "(5),N\'?\'),NCHAR(4),N\'?\'),NCHAR(3),N\'?\'),NCHAR(2),N\'?\'),NCHAR(1),N\'?\'),\r\n\t\t\t\t\t\t\t\t" +
                    "NCHAR(0),\r\n\t\t\t\t\t\t\t\tN\'\'\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\tWHERE\r\n\t\t\t\t\t\tdatabase_name = @database_na" +
                    "me;\r\n\t\t\t\tEND CATCH;\r\n\r\n\t\t\t\tFETCH NEXT FROM blocks_cursor\r\n\t\t\t\tINTO\r\n\t\t\t\t\t@databa" +
                    "se_name;\r\n\t\t\tEND;\r\n\t\t\t\r\n\t\t\tCLOSE blocks_cursor;\r\n\t\t\tDEALLOCATE blocks_cursor;\r\n\t" +
                    "\t\t\r\n\t\t\tUPDATE s\r\n\t\t\tSET\r\n\t\t\t\tadditional_info.modify\r\n\t\t\t\t(\'\r\n\t\t\t\t\tinsert <schema" +
                    "_name>{sql:column(\"b.schema_name\")}</schema_name>\r\n\t\t\t\t\tas last\r\n\t\t\t\t\tinto (/add" +
                    "itional_info/block_info)[1]\r\n\t\t\t\t\')\r\n\t\t\tFROM #sessions AS s\r\n\t\t\tINNER JOIN #bloc" +
                    "ked_requests AS b ON\r\n\t\t\t\tb.session_id = s.session_id\r\n\t\t\t\tAND b.request_id = s." +
                    "request_id\r\n\t\t\t\tAND s.recursion = 1\r\n\t\t\tWHERE\r\n\t\t\t\tb.schema_name IS NOT NULL;\r\n\r" +
                    "\n\t\t\tUPDATE s\r\n\t\t\tSET\r\n\t\t\t\tadditional_info.modify\r\n\t\t\t\t(\'\r\n\t\t\t\t\tinsert <object_na" +
                    "me>{sql:column(\"b.object_name\")}</object_name>\r\n\t\t\t\t\tas last\r\n\t\t\t\t\tinto (/additi" +
                    "onal_info/block_info)[1]\r\n\t\t\t\t\')\r\n\t\t\tFROM #sessions AS s\r\n\t\t\tINNER JOIN #blocked" +
                    "_requests AS b ON\r\n\t\t\t\tb.session_id = s.session_id\r\n\t\t\t\tAND b.request_id = s.req" +
                    "uest_id\r\n\t\t\t\tAND s.recursion = 1\r\n\t\t\tWHERE\r\n\t\t\t\tb.object_name IS NOT NULL;\r\n\r\n\t\t" +
                    "\tUPDATE s\r\n\t\t\tSET\r\n\t\t\t\tadditional_info.modify\r\n\t\t\t\t(\'\r\n\t\t\t\t\tinsert <query_error>" +
                    "{sql:column(\"b.query_error\")}</query_error>\r\n\t\t\t\t\tas last\r\n\t\t\t\t\tinto (/additiona" +
                    "l_info/block_info)[1]\r\n\t\t\t\t\')\r\n\t\t\tFROM #sessions AS s\r\n\t\t\tINNER JOIN #blocked_re" +
                    "quests AS b ON\r\n\t\t\t\tb.session_id = s.session_id\r\n\t\t\t\tAND b.request_id = s.reques" +
                    "t_id\r\n\t\t\t\tAND s.recursion = 1\r\n\t\t\tWHERE\r\n\t\t\t\tb.query_error IS NOT NULL;\r\n\t\tEND;\r" +
                    "\n\r\n\t\tIF\r\n\t\t\t@output_column_list LIKE \'%|[program_name|]%\' ESCAPE \'|\'\r\n\t\t\tAND @ou" +
                    "tput_column_list LIKE \'%|[additional_info|]%\' ESCAPE \'|\'\r\n\t\t\tAND @recursion = 1\r" +
                    "\n\t\t\tAND DB_ID(\'msdb\') IS NOT NULL\r\n\t\tBEGIN;\r\n\t\t\tSET @sql_n =\r\n\t\t\t\tN\'BEGIN TRY;\r\n" +
                    "\t\t\t\t\tDECLARE @job_name sysname;\r\n\t\t\t\t\tSET @job_name = NULL;\r\n\t\t\t\t\tDECLARE @step_" +
                    "name sysname;\r\n\t\t\t\t\tSET @step_name = NULL;\r\n\r\n\t\t\t\t\tSELECT\r\n\t\t\t\t\t\t@job_name = \r\n\t" +
                    "\t\t\t\t\t\tREPLACE\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE" +
                    "(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLA" +
                    "CE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REP" +
                    "LACE(REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\t\tj.name,\r\n\t\t\t\t\t\t\t\t\tNCHAR(31),N\'\'?" +
                    "\'\'),NCHAR(30),N\'\'?\'\'),NCHAR(29),N\'\'?\'\'),NCHAR(28),N\'\'?\'\'),NCHAR(27),N\'\'?\'\'),NCHA" +
                    "R(26),N\'\'?\'\'),NCHAR(25),N\'\'?\'\'),NCHAR(24),N\'\'?\'\'),NCHAR(23),N\'\'?\'\'),NCHAR(22),N\'" +
                    "\'?\'\'),\r\n\t\t\t\t\t\t\t\t\tNCHAR(21),N\'\'?\'\'),NCHAR(20),N\'\'?\'\'),NCHAR(19),N\'\'?\'\'),NCHAR(18)" +
                    ",N\'\'?\'\'),NCHAR(17),N\'\'?\'\'),NCHAR(16),N\'\'?\'\'),NCHAR(15),N\'\'?\'\'),NCHAR(14),N\'\'?\'\')" +
                    ",NCHAR(12),N\'\'?\'\'),\r\n\t\t\t\t\t\t\t\t\tNCHAR(11),N\'\'?\'\'),NCHAR(8),N\'\'?\'\'),NCHAR(7),N\'\'?\'\'" +
                    "),NCHAR(6),N\'\'?\'\'),NCHAR(5),N\'\'?\'\'),NCHAR(4),N\'\'?\'\'),NCHAR(3),N\'\'?\'\'),NCHAR(2),N" +
                    "\'\'?\'\'),NCHAR(1),N\'\'?\'\'),\r\n\t\t\t\t\t\t\t\tNCHAR(0),\r\n\t\t\t\t\t\t\t\tN\'\'?\'\'\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t@s" +
                    "tep_name = \r\n\t\t\t\t\t\t\tREPLACE\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(REPLACE(R" +
                    "EPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(REPLACE" +
                    "(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\tREPLACE(REPLACE(REPLACE(REPLA" +
                    "CE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t\t\t\t\t\t\t\t\ts.step_name,\r\n\t\t\t\t" +
                    "\t\t\t\t\tNCHAR(31),N\'\'?\'\'),NCHAR(30),N\'\'?\'\'),NCHAR(29),N\'\'?\'\'),NCHAR(28),N\'\'?\'\'),NCH" +
                    "AR(27),N\'\'?\'\'),NCHAR(26),N\'\'?\'\'),NCHAR(25),N\'\'?\'\'),NCHAR(24),N\'\'?\'\'),NCHAR(23),N" +
                    "\'\'?\'\'),NCHAR(22),N\'\'?\'\'),\r\n\t\t\t\t\t\t\t\t\tNCHAR(21),N\'\'?\'\'),NCHAR(20),N\'\'?\'\'),NCHAR(19" +
                    "),N\'\'?\'\'),NCHAR(18),N\'\'?\'\'),NCHAR(17),N\'\'?\'\'),NCHAR(16),N\'\'?\'\'),NCHAR(15),N\'\'?\'\'" +
                    "),NCHAR(14),N\'\'?\'\'),NCHAR(12),N\'\'?\'\'),\r\n\t\t\t\t\t\t\t\t\tNCHAR(11),N\'\'?\'\'),NCHAR(8),N\'\'?" +
                    "\'\'),NCHAR(7),N\'\'?\'\'),NCHAR(6),N\'\'?\'\'),NCHAR(5),N\'\'?\'\'),NCHAR(4),N\'\'?\'\'),NCHAR(3)" +
                    ",N\'\'?\'\'),NCHAR(2),N\'\'?\'\'),NCHAR(1),N\'\'?\'\'),\r\n\t\t\t\t\t\t\t\tNCHAR(0),\r\n\t\t\t\t\t\t\t\tN\'\'?\'\'\r\n" +
                    "\t\t\t\t\t\t\t)\r\n\t\t\t\t\tFROM msdb.dbo.sysjobs AS j\r\n\t\t\t\t\tINNER JOIN msdb.dbo.sysjobsteps " +
                    "AS s ON\r\n\t\t\t\t\t\tj.job_id = s.job_id\r\n\t\t\t\t\tWHERE\r\n\t\t\t\t\t\tj.job_id = @job_id\r\n\t\t\t\t\t\t" +
                    "AND s.step_id = @step_id;\r\n\r\n\t\t\t\t\tIF @job_name IS NOT NULL\r\n\t\t\t\t\tBEGIN;\r\n\t\t\t\t\t\tU" +
                    "PDATE s\r\n\t\t\t\t\t\tSET\r\n\t\t\t\t\t\t\tadditional_info.modify\r\n\t\t\t\t\t\t\t(\'\'\r\n\t\t\t\t\t\t\t\tinsert te" +
                    "xt{sql:variable(\"@job_name\")}\r\n\t\t\t\t\t\t\t\tinto (/additional_info/agent_job_info/job" +
                    "_name)[1]\r\n\t\t\t\t\t\t\t\'\')\r\n\t\t\t\t\t\tFROM #sessions AS s\r\n\t\t\t\t\t\tWHERE \r\n\t\t\t\t\t\t\ts.session" +
                    "_id = @session_id\r\n\t\t\t\t\t\t\tAND s.recursion = 1\r\n\t\t\t\t\t\tOPTION (KEEPFIXED PLAN);\r\n\t" +
                    "\t\t\t\t\t\r\n\t\t\t\t\t\tUPDATE s\r\n\t\t\t\t\t\tSET\r\n\t\t\t\t\t\t\tadditional_info.modify\r\n\t\t\t\t\t\t\t(\'\'\r\n\t\t\t" +
                    "\t\t\t\t\tinsert text{sql:variable(\"@step_name\")}\r\n\t\t\t\t\t\t\t\tinto (/additional_info/age" +
                    "nt_job_info/step_name)[1]\r\n\t\t\t\t\t\t\t\'\')\r\n\t\t\t\t\t\tFROM #sessions AS s\r\n\t\t\t\t\t\tWHERE \r\n" +
                    "\t\t\t\t\t\t\ts.session_id = @session_id\r\n\t\t\t\t\t\t\tAND s.recursion = 1\r\n\t\t\t\t\t\tOPTION (KEE" +
                    "PFIXED PLAN);\r\n\t\t\t\t\tEND;\r\n\t\t\t\tEND TRY\r\n\t\t\t\tBEGIN CATCH;\r\n\t\t\t\t\tDECLARE @msdb_erro" +
                    "r_message NVARCHAR(256);\r\n\t\t\t\t\tSET @msdb_error_message = ERROR_MESSAGE();\r\n\t\t\t\t\r" +
                    "\n\t\t\t\t\tUPDATE s\r\n\t\t\t\t\tSET\r\n\t\t\t\t\t\tadditional_info.modify\r\n\t\t\t\t\t\t(\'\'\r\n\t\t\t\t\t\t\tinsert" +
                    " <msdb_query_error>{sql:variable(\"@msdb_error_message\")}</msdb_query_error>\r\n\t\t\t" +
                    "\t\t\t\tas last\r\n\t\t\t\t\t\t\tinto (/additional_info/agent_job_info)[1]\r\n\t\t\t\t\t\t\'\')\r\n\t\t\t\t\tF" +
                    "ROM #sessions AS s\r\n\t\t\t\t\tWHERE \r\n\t\t\t\t\t\ts.session_id = @session_id\r\n\t\t\t\t\t\tAND s.r" +
                    "ecursion = 1\r\n\t\t\t\t\tOPTION (KEEPFIXED PLAN);\r\n\t\t\t\tEND CATCH;\'\r\n\r\n\t\t\tDECLARE @job_" +
                    "id UNIQUEIDENTIFIER;\r\n\t\t\tDECLARE @step_id INT;\r\n\r\n\t\t\tDECLARE agent_cursor\r\n\t\t\tCU" +
                    "RSOR LOCAL FAST_FORWARD\r\n\t\t\tFOR \r\n\t\t\t\tSELECT\r\n\t\t\t\t\ts.session_id,\r\n\t\t\t\t\tagent_nod" +
                    "es.agent_node.value(\'(job_id/text())[1]\', \'uniqueidentifier\') AS job_id,\r\n\t\t\t\t\ta" +
                    "gent_nodes.agent_node.value(\'(step_id/text())[1]\', \'int\') AS step_id\r\n\t\t\t\tFROM #" +
                    "sessions AS s\r\n\t\t\t\tCROSS APPLY s.additional_info.nodes(\'//agent_job_info\') AS ag" +
                    "ent_nodes (agent_node)\r\n\t\t\t\tWHERE\r\n\t\t\t\t\ts.recursion = 1\r\n\t\t\tOPTION (KEEPFIXED PL" +
                    "AN);\r\n\t\t\t\r\n\t\t\tOPEN agent_cursor;\r\n\r\n\t\t\tFETCH NEXT FROM agent_cursor\r\n\t\t\tINTO \r\n\t" +
                    "\t\t\t@session_id,\r\n\t\t\t\t@job_id,\r\n\t\t\t\t@step_id;\r\n\r\n\t\t\tWHILE @@FETCH_STATUS = 0\r\n\t\t\t" +
                    "BEGIN;\r\n\t\t\t\tEXEC sp_executesql\r\n\t\t\t\t\t@sql_n,\r\n\t\t\t\t\tN\'@job_id UNIQUEIDENTIFIER, @" +
                    "step_id INT, @session_id SMALLINT\',\r\n\t\t\t\t\t@job_id, @step_id, @session_id\r\n\r\n\t\t\t\t" +
                    "FETCH NEXT FROM agent_cursor\r\n\t\t\t\tINTO \r\n\t\t\t\t\t@session_id,\r\n\t\t\t\t\t@job_id,\r\n\t\t\t\t\t" +
                    "@step_id;\r\n\t\t\tEND;\r\n\r\n\t\t\tCLOSE agent_cursor;\r\n\t\t\tDEALLOCATE agent_cursor;\r\n\t\tEND" +
                    "; \r\n\t\t\r\n\t\tIF \r\n\t\t\t@delta_interval > 0 \r\n\t\t\tAND @recursion <> 1\r\n\t\tBEGIN;\r\n\t\t\tSET" +
                    " @recursion = 1;\r\n\r\n\t\t\tDECLARE @delay_time CHAR(12);\r\n\t\t\tSET @delay_time = CONVE" +
                    "RT(VARCHAR, DATEADD(second, @delta_interval, 0), 114);\r\n\t\t\tWAITFOR DELAY @delay_" +
                    "time;\r\n\r\n\t\t\tGOTO REDO;\r\n\t\tEND;\r\n\tEND;\r\n\r\n\tSET @sql = \r\n\t\t--Outer column list\r\n\t\t" +
                    "CONVERT\r\n\t\t(\r\n\t\t\tVARCHAR(MAX),\r\n\t\t\tCASE\r\n\t\t\t\tWHEN \r\n\t\t\t\t\t@destination_table <> \'" +
                    "\' \r\n\t\t\t\t\tAND @return_schema = 0 \r\n\t\t\t\t\t\tTHEN \'INSERT \' + @destination_table + \' " +
                    "\'\r\n\t\t\t\tELSE \'\'\r\n\t\t\tEND +\r\n\t\t\t\'SELECT \' +\r\n\t\t\t\t@output_column_list + \' \' +\r\n\t\t\tCA" +
                    "SE @return_schema\r\n\t\t\t\tWHEN 1 THEN \'INTO #session_schema \'\r\n\t\t\t\tELSE \'\'\r\n\t\t\tEND\r" +
                    "\n\t\t--End outer column list\r\n\t\t) + \r\n\t\t--Inner column list\r\n\t\tCONVERT\r\n\t\t(\r\n\t\t\tVA" +
                    "RCHAR(MAX),\r\n\t\t\t\'FROM \' +\r\n\t\t\t\'( \' +\r\n\t\t\t\t\'SELECT \' +\r\n\t\t\t\t\t\'session_id, \' +\r\n\t\t" +
                    "\t\t\t--[dd hh:mm:ss.mss]\r\n\t\t\t\t\tCASE\r\n\t\t\t\t\t\tWHEN @format_output IN (1, 2) THEN\r\n\t\t\t" +
                    "\t\t\t\t\'CASE \' +\r\n\t\t\t\t\t\t\t\t\'WHEN elapsed_time < 0 THEN \' +\r\n\t\t\t\t\t\t\t\t\t\'RIGHT \' +\r\n\t\t\t" +
                    "\t\t\t\t\t\t\'( \' +\r\n\t\t\t\t\t\t\t\t\t\t\'REPLICATE(\'\'0\'\', max_elapsed_length) + CONVERT(VARCHAR," +
                    " (-1 * elapsed_time) / 86400), \' +\r\n\t\t\t\t\t\t\t\t\t\t\'max_elapsed_length \' +\r\n\t\t\t\t\t\t\t\t\t" +
                    "\') + \' +\r\n\t\t\t\t\t\t\t\t\t\t\'RIGHT \' +\r\n\t\t\t\t\t\t\t\t\t\t\'( \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\'CONVERT(VARCHAR, D" +
                    "ATEADD(second, (-1 * elapsed_time), 0), 120), \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\'9 \' +\r\n\t\t\t\t\t\t\t\t\t\t" +
                    "\') + \' +\r\n\t\t\t\t\t\t\t\t\t\t\'\'\'.000\'\' \' +\r\n\t\t\t\t\t\t\t\t\'ELSE \' +\r\n\t\t\t\t\t\t\t\t\t\'RIGHT \' +\r\n\t\t\t\t\t" +
                    "\t\t\t\t\'( \' +\r\n\t\t\t\t\t\t\t\t\t\t\'REPLICATE(\'\'0\'\', max_elapsed_length) + CONVERT(VARCHAR, e" +
                    "lapsed_time / 86400000), \' +\r\n\t\t\t\t\t\t\t\t\t\t\'max_elapsed_length \' +\r\n\t\t\t\t\t\t\t\t\t\') + \'" +
                    " +\r\n\t\t\t\t\t\t\t\t\t\t\'RIGHT \' +\r\n\t\t\t\t\t\t\t\t\t\t\'( \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\'CONVERT(VARCHAR, DATEADD" +
                    "(second, elapsed_time / 1000, 0), 120), \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\'9 \' +\r\n\t\t\t\t\t\t\t\t\t\t\') + \'" +
                    " +\r\n\t\t\t\t\t\t\t\t\t\t\'\'\'.\'\' + \' + \r\n\t\t\t\t\t\t\t\t\t\t\'RIGHT(\'\'000\'\' + CONVERT(VARCHAR, elapsed" +
                    "_time % 1000), 3) \' +\r\n\t\t\t\t\t\t\t\'END AS [dd hh:mm:ss.mss], \'\r\n\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\'" +
                    "\'\r\n\t\t\t\t\tEND +\r\n\t\t\t\t\t--[dd hh:mm:ss.mss (avg)] / avg_elapsed_time\r\n\t\t\t\t\tCASE \r\n\t\t" +
                    "\t\t\t\tWHEN  @format_output IN (1, 2) THEN \r\n\t\t\t\t\t\t\t\'RIGHT \' +\r\n\t\t\t\t\t\t\t\'( \' +\r\n\t\t\t\t" +
                    "\t\t\t\t\'\'\'00\'\' + CONVERT(VARCHAR, avg_elapsed_time / 86400000), \' +\r\n\t\t\t\t\t\t\t\t\'2 \' +" +
                    "\r\n\t\t\t\t\t\t\t\') + \' +\r\n\t\t\t\t\t\t\t\t\'RIGHT \' +\r\n\t\t\t\t\t\t\t\t\'( \' +\r\n\t\t\t\t\t\t\t\t\t\'CONVERT(VARCHAR" +
                    ", DATEADD(second, avg_elapsed_time / 1000, 0), 120), \' +\r\n\t\t\t\t\t\t\t\t\t\'9 \' +\r\n\t\t\t\t\t" +
                    "\t\t\t\') + \' +\r\n\t\t\t\t\t\t\t\t\'\'\'.\'\' + \' +\r\n\t\t\t\t\t\t\t\t\'RIGHT(\'\'000\'\' + CONVERT(VARCHAR, avg" +
                    "_elapsed_time % 1000), 3) AS [dd hh:mm:ss.mss (avg)], \'\r\n\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\t\t\'avg" +
                    "_elapsed_time, \'\r\n\t\t\t\t\tEND +\r\n\t\t\t\t\t--physical_io\r\n\t\t\t\t\tCASE @format_output\r\n\t\t\t\t" +
                    "\t\tWHEN 1 THEN \'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, physical_io))) OV" +
                    "ER() - LEN(CONVERT(VARCHAR, physical_io))) + LEFT(CONVERT(CHAR(22), CONVERT(MONE" +
                    "Y, physical_io), 1), 19)) AS \'\r\n\t\t\t\t\t\tWHEN 2 THEN \'CONVERT(VARCHAR, LEFT(CONVERT" +
                    "(CHAR(22), CONVERT(MONEY, physical_io), 1), 19)) AS \'\r\n\t\t\t\t\t\tELSE \'\'\r\n\t\t\t\t\tEND +" +
                    " \'physical_io, \' +\r\n\t\t\t\t\t--reads\r\n\t\t\t\t\tCASE @format_output\r\n\t\t\t\t\t\tWHEN 1 THEN \'C" +
                    "ONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, reads))) OVER() - LEN(CONVERT(VAR" +
                    "CHAR, reads))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, reads), 1), 19)) AS \'\r\n\t\t" +
                    "\t\t\t\tWHEN 2 THEN \'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, reads), " +
                    "1), 19)) AS \'\r\n\t\t\t\t\t\tELSE \'\'\r\n\t\t\t\t\tEND + \'reads, \' +\r\n\t\t\t\t\t--physical_reads\r\n\t\t\t" +
                    "\t\tCASE @format_output\r\n\t\t\t\t\t\tWHEN 1 THEN \'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT" +
                    "(VARCHAR, physical_reads))) OVER() - LEN(CONVERT(VARCHAR, physical_reads))) + LE" +
                    "FT(CONVERT(CHAR(22), CONVERT(MONEY, physical_reads), 1), 19)) AS \'\r\n\t\t\t\t\t\tWHEN 2" +
                    " THEN \'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physical_reads), 1" +
                    "), 19)) AS \'\r\n\t\t\t\t\t\tELSE \'\'\r\n\t\t\t\t\tEND + \'physical_reads, \' +\r\n\t\t\t\t\t--writes\r\n\t\t\t" +
                    "\t\tCASE @format_output\r\n\t\t\t\t\t\tWHEN 1 THEN \'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT" +
                    "(VARCHAR, writes))) OVER() - LEN(CONVERT(VARCHAR, writes))) + LEFT(CONVERT(CHAR(" +
                    "22), CONVERT(MONEY, writes), 1), 19)) AS \'\r\n\t\t\t\t\t\tWHEN 2 THEN \'CONVERT(VARCHAR, " +
                    "LEFT(CONVERT(CHAR(22), CONVERT(MONEY, writes), 1), 19)) AS \'\r\n\t\t\t\t\t\tELSE \'\'\r\n\t\t\t" +
                    "\t\tEND + \'writes, \' +\r\n\t\t\t\t\t--tempdb_allocations\r\n\t\t\t\t\tCASE @format_output\r\n\t\t\t\t\t" +
                    "\tWHEN 1 THEN \'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, tempdb_allocations" +
                    "))) OVER() - LEN(CONVERT(VARCHAR, tempdb_allocations))) + LEFT(CONVERT(CHAR(22)," +
                    " CONVERT(MONEY, tempdb_allocations), 1), 19)) AS \'\r\n\t\t\t\t\t\tWHEN 2 THEN \'CONVERT(V" +
                    "ARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_allocations), 1), 19)) AS \'" +
                    "\r\n\t\t\t\t\t\tELSE \'\'\r\n\t\t\t\t\tEND + \'tempdb_allocations, \' +\r\n\t\t\t\t\t--tempdb_current\r\n\t\t\t" +
                    "\t\tCASE @format_output\r\n\t\t\t\t\t\tWHEN 1 THEN \'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT" +
                    "(VARCHAR, tempdb_current))) OVER() - LEN(CONVERT(VARCHAR, tempdb_current))) + LE" +
                    "FT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_current), 1), 19)) AS \'\r\n\t\t\t\t\t\tWHEN 2" +
                    " THEN \'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_current), 1" +
                    "), 19)) AS \'\r\n\t\t\t\t\t\tELSE \'\'\r\n\t\t\t\t\tEND + \'tempdb_current, \' +\r\n\t\t\t\t\t--CPU\r\n\t\t\t\t\tC" +
                    "ASE @format_output\r\n\t\t\t\t\t\tWHEN 1 THEN \'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VA" +
                    "RCHAR, CPU))) OVER() - LEN(CONVERT(VARCHAR, CPU))) + LEFT(CONVERT(CHAR(22), CONV" +
                    "ERT(MONEY, CPU), 1), 19)) AS \'\r\n\t\t\t\t\t\tWHEN 2 THEN \'CONVERT(VARCHAR, LEFT(CONVERT" +
                    "(CHAR(22), CONVERT(MONEY, CPU), 1), 19)) AS \'\r\n\t\t\t\t\t\tELSE \'\'\r\n\t\t\t\t\tEND + \'CPU, \'" +
                    " +\r\n\t\t\t\t\t--context_switches\r\n\t\t\t\t\tCASE @format_output\r\n\t\t\t\t\t\tWHEN 1 THEN \'CONVER" +
                    "T(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, context_switches))) OVER() - LEN(CONVE" +
                    "RT(VARCHAR, context_switches))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, context_" +
                    "switches), 1), 19)) AS \'\r\n\t\t\t\t\t\tWHEN 2 THEN \'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(" +
                    "22), CONVERT(MONEY, context_switches), 1), 19)) AS \'\r\n\t\t\t\t\t\tELSE \'\'\r\n\t\t\t\t\tEND + " +
                    "\'context_switches, \' +\r\n\t\t\t\t\t--used_memory\r\n\t\t\t\t\tCASE @format_output\r\n\t\t\t\t\t\tWHEN" +
                    " 1 THEN \'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, used_memory))) OVER() -" +
                    " LEN(CONVERT(VARCHAR, used_memory))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, use" +
                    "d_memory), 1), 19)) AS \'\r\n\t\t\t\t\t\tWHEN 2 THEN \'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(" +
                    "22), CONVERT(MONEY, used_memory), 1), 19)) AS \'\r\n\t\t\t\t\t\tELSE \'\'\r\n\t\t\t\t\tEND + \'used" +
                    "_memory, \' +\r\n\t\t\t\t\tCASE\r\n\t\t\t\t\t\tWHEN @output_column_list LIKE \'%|_delta|]%\' ESCAP" +
                    "E \'|\' THEN\r\n\t\t\t\t\t\t\t--physical_io_delta\t\t\t\r\n\t\t\t\t\t\t\t\'CASE \' +\r\n\t\t\t\t\t\t\t\t\'WHEN \' +\r\n" +
                    "\t\t\t\t\t\t\t\t\t\'first_request_start_time = last_request_start_time \' + \r\n\t\t\t\t\t\t\t\t\t\'AND" +
                    " num_events = 2 \' +\r\n\t\t\t\t\t\t\t\t\t\'AND physical_io_delta >= 0 \' +\r\n\t\t\t\t\t\t\t\t\t\t\'THEN \'" +
                    " +\r\n\t\t\t\t\t\t\t\t\t\tCASE @format_output\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN \'CONVERT(VARCHAR, SPAC" +
                    "E(MAX(LEN(CONVERT(VARCHAR, physical_io_delta))) OVER() - LEN(CONVERT(VARCHAR, ph" +
                    "ysical_io_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physical_io_delta), 1" +
                    "), 19)) \' \r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 2 THEN \'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONV" +
                    "ERT(MONEY, physical_io_delta), 1), 19)) \'\r\n\t\t\t\t\t\t\t\t\t\t\tELSE \'physical_io_delta \'\r" +
                    "\n\t\t\t\t\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\t\t\t\'ELSE NULL \' +\r\n\t\t\t\t\t\t\t\'END AS physical_io_delta, \' +\r" +
                    "\n\t\t\t\t\t\t\t--reads_delta\r\n\t\t\t\t\t\t\t\'CASE \' +\r\n\t\t\t\t\t\t\t\t\'WHEN \' +\r\n\t\t\t\t\t\t\t\t\t\'first_requ" +
                    "est_start_time = last_request_start_time \' + \r\n\t\t\t\t\t\t\t\t\t\'AND num_events = 2 \' +\r" +
                    "\n\t\t\t\t\t\t\t\t\t\'AND reads_delta >= 0 \' +\r\n\t\t\t\t\t\t\t\t\t\t\'THEN \' +\r\n\t\t\t\t\t\t\t\t\t\tCASE @format" +
                    "_output\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN \'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR," +
                    " reads_delta))) OVER() - LEN(CONVERT(VARCHAR, reads_delta))) + LEFT(CONVERT(CHAR" +
                    "(22), CONVERT(MONEY, reads_delta), 1), 19)) \'\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 2 THEN \'CONVERT(V" +
                    "ARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, reads_delta), 1), 19)) \'\r\n\t\t\t\t\t\t\t\t" +
                    "\t\t\tELSE \'reads_delta \'\r\n\t\t\t\t\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\t\t\t\'ELSE NULL \' +\r\n\t\t\t\t\t\t\t\'END AS " +
                    "reads_delta, \' +\r\n\t\t\t\t\t\t\t--physical_reads_delta\r\n\t\t\t\t\t\t\t\'CASE \' +\r\n\t\t\t\t\t\t\t\t\'WHEN" +
                    " \' +\r\n\t\t\t\t\t\t\t\t\t\'first_request_start_time = last_request_start_time \' + \r\n\t\t\t\t\t\t\t" +
                    "\t\t\'AND num_events = 2 \' +\r\n\t\t\t\t\t\t\t\t\t\'AND physical_reads_delta >= 0 \' +\r\n\t\t\t\t\t\t\t\t" +
                    "\t\t\'THEN \' +\r\n\t\t\t\t\t\t\t\t\t\tCASE @format_output\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN \'CONVERT(VARC" +
                    "HAR, SPACE(MAX(LEN(CONVERT(VARCHAR, physical_reads_delta))) OVER() - LEN(CONVERT" +
                    "(VARCHAR, physical_reads_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physic" +
                    "al_reads_delta), 1), 19)) \'\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 2 THEN \'CONVERT(VARCHAR, LEFT(CONVE" +
                    "RT(CHAR(22), CONVERT(MONEY, physical_reads_delta), 1), 19)) \'\r\n\t\t\t\t\t\t\t\t\t\t\tELSE \'" +
                    "physical_reads_delta \'\r\n\t\t\t\t\t\t\t\t\t\tEND + \r\n\t\t\t\t\t\t\t\t\'ELSE NULL \' +\r\n\t\t\t\t\t\t\t\'END AS" +
                    " physical_reads_delta, \' +\r\n\t\t\t\t\t\t\t--writes_delta\r\n\t\t\t\t\t\t\t\'CASE \' +\r\n\t\t\t\t\t\t\t\t\'WH" +
                    "EN \' +\r\n\t\t\t\t\t\t\t\t\t\'first_request_start_time = last_request_start_time \' + \r\n\t\t\t\t\t" +
                    "\t\t\t\t\'AND num_events = 2 \' +\r\n\t\t\t\t\t\t\t\t\t\'AND writes_delta >= 0 \' +\r\n\t\t\t\t\t\t\t\t\t\t\'THE" +
                    "N \' +\r\n\t\t\t\t\t\t\t\t\t\tCASE @format_output\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN \'CONVERT(VARCHAR, S" +
                    "PACE(MAX(LEN(CONVERT(VARCHAR, writes_delta))) OVER() - LEN(CONVERT(VARCHAR, writ" +
                    "es_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, writes_delta), 1), 19)) \'\r\n\t" +
                    "\t\t\t\t\t\t\t\t\t\tWHEN 2 THEN \'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, wr" +
                    "ites_delta), 1), 19)) \'\r\n\t\t\t\t\t\t\t\t\t\t\tELSE \'writes_delta \'\r\n\t\t\t\t\t\t\t\t\t\tEND + \r\n\t\t\t\t" +
                    "\t\t\t\t\'ELSE NULL \' +\r\n\t\t\t\t\t\t\t\'END AS writes_delta, \' +\r\n\t\t\t\t\t\t\t--tempdb_allocation" +
                    "s_delta\r\n\t\t\t\t\t\t\t\'CASE \' +\r\n\t\t\t\t\t\t\t\t\'WHEN \' +\r\n\t\t\t\t\t\t\t\t\t\'first_request_start_time" +
                    " = last_request_start_time \' + \r\n\t\t\t\t\t\t\t\t\t\'AND num_events = 2 \' +\r\n\t\t\t\t\t\t\t\t\t\'AND" +
                    " tempdb_allocations_delta >= 0 \' +\r\n\t\t\t\t\t\t\t\t\t\t\'THEN \' +\r\n\t\t\t\t\t\t\t\t\t\tCASE @format_" +
                    "output\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN \'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, " +
                    "tempdb_allocations_delta))) OVER() - LEN(CONVERT(VARCHAR, tempdb_allocations_del" +
                    "ta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_allocations_delta), 1), 19)" +
                    ") \'\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 2 THEN \'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MON" +
                    "EY, tempdb_allocations_delta), 1), 19)) \'\r\n\t\t\t\t\t\t\t\t\t\t\tELSE \'tempdb_allocations_d" +
                    "elta \'\r\n\t\t\t\t\t\t\t\t\t\tEND + \r\n\t\t\t\t\t\t\t\t\'ELSE NULL \' +\r\n\t\t\t\t\t\t\t\'END AS tempdb_allocati" +
                    "ons_delta, \' +\r\n\t\t\t\t\t\t\t--tempdb_current_delta\r\n\t\t\t\t\t\t\t--this is the only one tha" +
                    "t can (legitimately) go negative \r\n\t\t\t\t\t\t\t\'CASE \' +\r\n\t\t\t\t\t\t\t\t\'WHEN \' +\r\n\t\t\t\t\t\t\t\t" +
                    "\t\'first_request_start_time = last_request_start_time \' + \r\n\t\t\t\t\t\t\t\t\t\'AND num_eve" +
                    "nts = 2 \' +\r\n\t\t\t\t\t\t\t\t\t\t\'THEN \' +\r\n\t\t\t\t\t\t\t\t\t\tCASE @format_output\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN" +
                    " 1 THEN \'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, tempdb_current_delta)))" +
                    " OVER() - LEN(CONVERT(VARCHAR, tempdb_current_delta))) + LEFT(CONVERT(CHAR(22), " +
                    "CONVERT(MONEY, tempdb_current_delta), 1), 19)) \'\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 2 THEN \'CONVER" +
                    "T(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_current_delta), 1), 19))" +
                    " \'\r\n\t\t\t\t\t\t\t\t\t\t\tELSE \'tempdb_current_delta \'\r\n\t\t\t\t\t\t\t\t\t\tEND + \r\n\t\t\t\t\t\t\t\t\'ELSE NUL" +
                    "L \' +\r\n\t\t\t\t\t\t\t\'END AS tempdb_current_delta, \' +\r\n\t\t\t\t\t\t\t--CPU_delta\r\n\t\t\t\t\t\t\t\'CAS" +
                    "E \' +\r\n\t\t\t\t\t\t\t\t\'WHEN \' +\r\n\t\t\t\t\t\t\t\t\t\'first_request_start_time = last_request_star" +
                    "t_time \' + \r\n\t\t\t\t\t\t\t\t\t\'AND num_events = 2 \' +\r\n\t\t\t\t\t\t\t\t\t\t\'THEN \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\'" +
                    "CASE \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\'WHEN \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\'thread_CPU_delta > CPU_delta \' +\r" +
                    "\n\t\t\t\t\t\t\t\t\t\t\t\t\t\'AND thread_CPU_delta > 0 \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\'THEN \' +\r\n\t\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\tCASE @format_output\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN \'CONVERT(VARCHAR, SPACE(MA" +
                    "X(LEN(CONVERT(VARCHAR, thread_CPU_delta + CPU_delta))) OVER() - LEN(CONVERT(VARC" +
                    "HAR, thread_CPU_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, thread_CPU_delt" +
                    "a), 1), 19)) \'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN 2 THEN \'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(" +
                    "22), CONVERT(MONEY, thread_CPU_delta), 1), 19)) \'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE \'thread_" +
                    "CPU_delta \'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND + \r\n\t\t\t\t\t\t\t\t\t\t\t\t\'WHEN CPU_delta >= 0 THEN \' +\r\n\t" +
                    "\t\t\t\t\t\t\t\t\t\t\t\tCASE @format_output\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN \'CONVERT(VARCHAR, SPA" +
                    "CE(MAX(LEN(CONVERT(VARCHAR, thread_CPU_delta + CPU_delta))) OVER() - LEN(CONVERT" +
                    "(VARCHAR, CPU_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, CPU_delta), 1), 1" +
                    "9)) \'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN 2 THEN \'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVER" +
                    "T(MONEY, CPU_delta), 1), 19)) \'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE \'CPU_delta \'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tE" +
                    "ND + \r\n\t\t\t\t\t\t\t\t\t\t\t\t\'ELSE NULL \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\'END \' +\r\n\t\t\t\t\t\t\t\t\'ELSE \' +\r\n\t\t\t\t\t" +
                    "\t\t\t\t\'NULL \' +\r\n\t\t\t\t\t\t\t\'END AS CPU_delta, \' +\r\n\t\t\t\t\t\t\t--context_switches_delta\r\n\t" +
                    "\t\t\t\t\t\t\'CASE \' +\r\n\t\t\t\t\t\t\t\t\'WHEN \' +\r\n\t\t\t\t\t\t\t\t\t\'first_request_start_time = last_re" +
                    "quest_start_time \' + \r\n\t\t\t\t\t\t\t\t\t\'AND num_events = 2 \' +\r\n\t\t\t\t\t\t\t\t\t\'AND context_s" +
                    "witches_delta >= 0 \' +\r\n\t\t\t\t\t\t\t\t\t\t\'THEN \' +\r\n\t\t\t\t\t\t\t\t\t\tCASE @format_output\r\n\t\t\t\t" +
                    "\t\t\t\t\t\t\tWHEN 1 THEN \'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, context_swit" +
                    "ches_delta))) OVER() - LEN(CONVERT(VARCHAR, context_switches_delta))) + LEFT(CON" +
                    "VERT(CHAR(22), CONVERT(MONEY, context_switches_delta), 1), 19)) \'\r\n\t\t\t\t\t\t\t\t\t\t\tWH" +
                    "EN 2 THEN \'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, context_switch" +
                    "es_delta), 1), 19)) \'\r\n\t\t\t\t\t\t\t\t\t\t\tELSE \'context_switches_delta \'\r\n\t\t\t\t\t\t\t\t\t\tEND " +
                    "+ \r\n\t\t\t\t\t\t\t\t\'ELSE NULL \' +\r\n\t\t\t\t\t\t\t\'END AS context_switches_delta, \' +\r\n\t\t\t\t\t\t\t-" +
                    "-used_memory_delta\r\n\t\t\t\t\t\t\t\'CASE \' +\r\n\t\t\t\t\t\t\t\t\'WHEN \' +\r\n\t\t\t\t\t\t\t\t\t\'first_request" +
                    "_start_time = last_request_start_time \' + \r\n\t\t\t\t\t\t\t\t\t\'AND num_events = 2 \' +\r\n\t\t" +
                    "\t\t\t\t\t\t\t\'AND used_memory_delta >= 0 \' +\r\n\t\t\t\t\t\t\t\t\t\t\'THEN \' +\r\n\t\t\t\t\t\t\t\t\t\tCASE @for" +
                    "mat_output\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN 1 THEN \'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCH" +
                    "AR, used_memory_delta))) OVER() - LEN(CONVERT(VARCHAR, used_memory_delta))) + LE" +
                    "FT(CONVERT(CHAR(22), CONVERT(MONEY, used_memory_delta), 1), 19)) \'\r\n\t\t\t\t\t\t\t\t\t\t\tW" +
                    "HEN 2 THEN \'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, used_memory_d" +
                    "elta), 1), 19)) \'\r\n\t\t\t\t\t\t\t\t\t\t\tELSE \'used_memory_delta \'\r\n\t\t\t\t\t\t\t\t\t\tEND + \r\n\t\t\t\t\t" +
                    "\t\t\t\'ELSE NULL \' +\r\n\t\t\t\t\t\t\t\'END AS used_memory_delta, \'\r\n\t\t\t\t\t\tELSE \'\'\r\n\t\t\t\t\tEND " +
                    "+\r\n\t\t\t\t\t--tasks\r\n\t\t\t\t\tCASE @format_output\r\n\t\t\t\t\t\tWHEN 1 THEN \'CONVERT(VARCHAR, S" +
                    "PACE(MAX(LEN(CONVERT(VARCHAR, tasks))) OVER() - LEN(CONVERT(VARCHAR, tasks))) + " +
                    "LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tasks), 1), 19)) AS \'\r\n\t\t\t\t\t\tWHEN 2 THEN \'" +
                    "CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tasks), 1), 19)) \'\r\n\t\t\t\t\t" +
                    "\tELSE \'\'\r\n\t\t\t\t\tEND + \'tasks, \' +\r\n\t\t\t\t\t\'status, \' +\r\n\t\t\t\t\t\'wait_info, \' +\r\n\t\t\t\t\t" +
                    "\'locks, \' +\r\n\t\t\t\t\t\'tran_start_time, \' +\r\n\t\t\t\t\t\'LEFT(tran_log_writes, LEN(tran_lo" +
                    "g_writes) - 1) AS tran_log_writes, \' +\r\n\t\t\t\t\t--open_tran_count\r\n\t\t\t\t\tCASE @forma" +
                    "t_output\r\n\t\t\t\t\t\tWHEN 1 THEN \'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, ope" +
                    "n_tran_count))) OVER() - LEN(CONVERT(VARCHAR, open_tran_count))) + LEFT(CONVERT(" +
                    "CHAR(22), CONVERT(MONEY, open_tran_count), 1), 19)) AS \'\r\n\t\t\t\t\t\tWHEN 2 THEN \'CON" +
                    "VERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, open_tran_count), 1), 19)) A" +
                    "S \'\r\n\t\t\t\t\t\tELSE \'\'\r\n\t\t\t\t\tEND + \'open_tran_count, \' +\r\n\t\t\t\t\t--sql_command\r\n\t\t\t\t\tC" +
                    "ASE @format_output \r\n\t\t\t\t\t\tWHEN 0 THEN \'REPLACE(REPLACE(CONVERT(NVARCHAR(MAX), s" +
                    "ql_command), \'\'<?query --\'\'+CHAR(13)+CHAR(10), \'\'\'\'), CHAR(13)+CHAR(10)+\'\'--?>\'\'" +
                    ", \'\'\'\') AS \'\r\n\t\t\t\t\t\tELSE \'\'\r\n\t\t\t\t\tEND + \'sql_command, \' +\r\n\t\t\t\t\t--sql_text\r\n\t\t\t\t" +
                    "\tCASE @format_output \r\n\t\t\t\t\t\tWHEN 0 THEN \'REPLACE(REPLACE(CONVERT(NVARCHAR(MAX)," +
                    " sql_text), \'\'<?query --\'\'+CHAR(13)+CHAR(10), \'\'\'\'), CHAR(13)+CHAR(10)+\'\'--?>\'\'," +
                    " \'\'\'\') AS \'\r\n\t\t\t\t\t\tELSE \'\'\r\n\t\t\t\t\tEND + \'sql_text, \' +\r\n\t\t\t\t\t\'query_plan, \' +\r\n\t\t" +
                    "\t\t\t\'blocking_session_id, \' +\r\n\t\t\t\t\t--blocked_session_count\r\n\t\t\t\t\tCASE @format_ou" +
                    "tput\r\n\t\t\t\t\t\tWHEN 1 THEN \'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, blocked" +
                    "_session_count))) OVER() - LEN(CONVERT(VARCHAR, blocked_session_count))) + LEFT(" +
                    "CONVERT(CHAR(22), CONVERT(MONEY, blocked_session_count), 1), 19)) AS \'\r\n\t\t\t\t\t\tWH" +
                    "EN 2 THEN \'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, blocked_sessio" +
                    "n_count), 1), 19)) AS \'\r\n\t\t\t\t\t\tELSE \'\'\r\n\t\t\t\t\tEND + \'blocked_session_count, \' +\r\n" +
                    "\t\t\t\t\t--percent_complete\r\n\t\t\t\t\tCASE @format_output\r\n\t\t\t\t\t\tWHEN 1 THEN \'CONVERT(VA" +
                    "RCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, CONVERT(MONEY, percent_complete), 2))) OVE" +
                    "R() - LEN(CONVERT(VARCHAR, CONVERT(MONEY, percent_complete), 2))) + CONVERT(CHAR" +
                    "(22), CONVERT(MONEY, percent_complete), 2)) AS \'\r\n\t\t\t\t\t\tWHEN 2 THEN \'CONVERT(VAR" +
                    "CHAR, CONVERT(CHAR(22), CONVERT(MONEY, blocked_session_count), 1)) AS \'\r\n\t\t\t\t\t\tE" +
                    "LSE \'\'\r\n\t\t\t\t\tEND + \'percent_complete, \' +\r\n\t\t\t\t\t\'host_name, \' +\r\n\t\t\t\t\t\'login_nam" +
                    "e, \' +\r\n\t\t\t\t\t\'database_name, \' +\r\n\t\t\t\t\t\'program_name, \' +\r\n\t\t\t\t\t\'additional_info" +
                    ", \' +\r\n\t\t\t\t\t\'start_time, \' +\r\n\t\t\t\t\t\'login_time, \' +\r\n\t\t\t\t\t\'CASE \' +\r\n\t\t\t\t\t\t\'WHEN" +
                    " status = N\'\'sleeping\'\' THEN NULL \' +\r\n\t\t\t\t\t\t\'ELSE request_id \' +\r\n\t\t\t\t\t\'END AS " +
                    "request_id, \' +\r\n\t\t\t\t\t\'GETDATE() AS collection_time \'\r\n\t\t--End inner column list" +
                    "\r\n\t\t) +\r\n\t\t--Derived table and INSERT specification\r\n\t\tCONVERT\r\n\t\t(\r\n\t\t\tVARCHAR(" +
                    "MAX),\r\n\t\t\t\t\'FROM \' +\r\n\t\t\t\t\'( \' +\r\n\t\t\t\t\t\'SELECT TOP(2147483647) \' +\r\n\t\t\t\t\t\t\'*, \' " +
                    "+\r\n\t\t\t\t\t\t\'CASE \' +\r\n\t\t\t\t\t\t\t\'MAX \' +\r\n\t\t\t\t\t\t\t\'( \' +\r\n\t\t\t\t\t\t\t\t\'LEN \' +\r\n\t\t\t\t\t\t\t\t\'(" +
                    " \' +\r\n\t\t\t\t\t\t\t\t\t\'CONVERT \' +\r\n\t\t\t\t\t\t\t\t\t\'( \' +\r\n\t\t\t\t\t\t\t\t\t\t\'VARCHAR, \' +\r\n\t\t\t\t\t\t\t\t\t" +
                    "\t\'CASE \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\'WHEN elapsed_time < 0 THEN \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\'(-1 * elaps" +
                    "ed_time) / 86400 \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\'ELSE \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\'elapsed_time / 86400000" +
                    " \' +\r\n\t\t\t\t\t\t\t\t\t\t\'END \' +\r\n\t\t\t\t\t\t\t\t\t\') \' +\r\n\t\t\t\t\t\t\t\t\') \' +\r\n\t\t\t\t\t\t\t\') OVER () \' +" +
                    "\r\n\t\t\t\t\t\t\t\t\'WHEN 1 THEN 2 \' +\r\n\t\t\t\t\t\t\t\t\'ELSE \' +\r\n\t\t\t\t\t\t\t\t\t\'MAX \' +\r\n\t\t\t\t\t\t\t\t\t\'( " +
                    "\' +\r\n\t\t\t\t\t\t\t\t\t\t\'LEN \' +\r\n\t\t\t\t\t\t\t\t\t\t\'( \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\'CONVERT \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\'" +
                    "( \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\'VARCHAR, \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\'CASE \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\'WHEN elap" +
                    "sed_time < 0 THEN \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\'(-1 * elapsed_time) / 86400 \' +\r\n\t\t\t\t\t\t\t\t\t" +
                    "\t\t\t\t\'ELSE \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\'elapsed_time / 86400000 \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\'END \' +\r" +
                    "\n\t\t\t\t\t\t\t\t\t\t\t\') \' +\r\n\t\t\t\t\t\t\t\t\t\t\') \' +\r\n\t\t\t\t\t\t\t\t\t\') OVER () \' +\r\n\t\t\t\t\t\t\'END AS max" +
                    "_elapsed_length, \' +\r\n\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\tWHEN @output_column_list LIKE \'%|_delta" +
                    "|]%\' ESCAPE \'|\' THEN\r\n\t\t\t\t\t\t\t\t\'MAX(physical_io * recursion) OVER (PARTITION BY s" +
                    "ession_id, request_id) + \' +\r\n\t\t\t\t\t\t\t\t\t\'MIN(physical_io * recursion) OVER (PARTI" +
                    "TION BY session_id, request_id) AS physical_io_delta, \' +\r\n\t\t\t\t\t\t\t\t\'MAX(reads * " +
                    "recursion) OVER (PARTITION BY session_id, request_id) + \' +\r\n\t\t\t\t\t\t\t\t\t\'MIN(reads" +
                    " * recursion) OVER (PARTITION BY session_id, request_id) AS reads_delta, \' +\r\n\t\t" +
                    "\t\t\t\t\t\t\'MAX(physical_reads * recursion) OVER (PARTITION BY session_id, request_id" +
                    ") + \' +\r\n\t\t\t\t\t\t\t\t\t\'MIN(physical_reads * recursion) OVER (PARTITION BY session_id" +
                    ", request_id) AS physical_reads_delta, \' +\r\n\t\t\t\t\t\t\t\t\'MAX(writes * recursion) OVE" +
                    "R (PARTITION BY session_id, request_id) + \' +\r\n\t\t\t\t\t\t\t\t\t\'MIN(writes * recursion)" +
                    " OVER (PARTITION BY session_id, request_id) AS writes_delta, \' +\r\n\t\t\t\t\t\t\t\t\'MAX(t" +
                    "empdb_allocations * recursion) OVER (PARTITION BY session_id, request_id) + \' +\r" +
                    "\n\t\t\t\t\t\t\t\t\t\'MIN(tempdb_allocations * recursion) OVER (PARTITION BY session_id, re" +
                    "quest_id) AS tempdb_allocations_delta, \' +\r\n\t\t\t\t\t\t\t\t\'MAX(tempdb_current * recurs" +
                    "ion) OVER (PARTITION BY session_id, request_id) + \' +\r\n\t\t\t\t\t\t\t\t\t\'MIN(tempdb_curr" +
                    "ent * recursion) OVER (PARTITION BY session_id, request_id) AS tempdb_current_de" +
                    "lta, \' +\r\n\t\t\t\t\t\t\t\t\'MAX(CPU * recursion) OVER (PARTITION BY session_id, request_i" +
                    "d) + \' +\r\n\t\t\t\t\t\t\t\t\t\'MIN(CPU * recursion) OVER (PARTITION BY session_id, request_" +
                    "id) AS CPU_delta, \' +\r\n\t\t\t\t\t\t\t\t\'MAX(thread_CPU_snapshot * recursion) OVER (PARTI" +
                    "TION BY session_id, request_id) + \' +\r\n\t\t\t\t\t\t\t\t\t\'MIN(thread_CPU_snapshot * recur" +
                    "sion) OVER (PARTITION BY session_id, request_id) AS thread_CPU_delta, \' +\r\n\t\t\t\t\t" +
                    "\t\t\t\'MAX(context_switches * recursion) OVER (PARTITION BY session_id, request_id)" +
                    " + \' +\r\n\t\t\t\t\t\t\t\t\t\'MIN(context_switches * recursion) OVER (PARTITION BY session_i" +
                    "d, request_id) AS context_switches_delta, \' +\r\n\t\t\t\t\t\t\t\t\'MAX(used_memory * recurs" +
                    "ion) OVER (PARTITION BY session_id, request_id) + \' +\r\n\t\t\t\t\t\t\t\t\t\'MIN(used_memory" +
                    " * recursion) OVER (PARTITION BY session_id, request_id) AS used_memory_delta, \'" +
                    " +\r\n\t\t\t\t\t\t\t\t\'MIN(last_request_start_time) OVER (PARTITION BY session_id, request" +
                    "_id) AS first_request_start_time, \'\r\n\t\t\t\t\t\t\tELSE \'\'\r\n\t\t\t\t\t\tEND +\r\n\t\t\t\t\t\t\'COUNT(*" +
                    ") OVER (PARTITION BY session_id, request_id) AS num_events \' +\r\n\t\t\t\t\t\'FROM #sess" +
                    "ions AS s1 \' +\r\n\t\t\t\t\tCASE \r\n\t\t\t\t\t\tWHEN @sort_order = \'\' THEN \'\'\r\n\t\t\t\t\t\tELSE\r\n\t\t\t" +
                    "\t\t\t\t\'ORDER BY \' +\r\n\t\t\t\t\t\t\t\t@sort_order\r\n\t\t\t\t\tEND +\r\n\t\t\t\t\') AS s \' +\r\n\t\t\t\t\'WHERE " +
                    "\' +\r\n\t\t\t\t\t\'s.recursion = 1 \' +\r\n\t\t\t\') x \' +\r\n\t\t\t\'OPTION (KEEPFIXED PLAN); \' +\r\n\t" +
                    "\t\t\'\' +\r\n\t\t\tCASE @return_schema\r\n\t\t\t\tWHEN 1 THEN\r\n\t\t\t\t\t\'SET @schema = \' +\r\n\t\t\t\t\t\t" +
                    "\'\'\'CREATE TABLE <table_name> ( \'\' + \' +\r\n\t\t\t\t\t\t\t\'STUFF \' +\r\n\t\t\t\t\t\t\t\'( \' +\r\n\t\t\t\t\t" +
                    "\t\t\t\'( \' +\r\n\t\t\t\t\t\t\t\t\t\'SELECT \' +\r\n\t\t\t\t\t\t\t\t\t\t\'\'\',\'\' + \' +\r\n\t\t\t\t\t\t\t\t\t\t\'QUOTENAME(CO" +
                    "LUMN_NAME) + \'\' \'\' + \' +\r\n\t\t\t\t\t\t\t\t\t\t\'DATA_TYPE + \' + \r\n\t\t\t\t\t\t\t\t\t\t\'CASE \' +\r\n\t\t\t\t" +
                    "\t\t\t\t\t\t\t\'WHEN DATA_TYPE LIKE \'\'%char\'\' THEN \'\'(\'\' + COALESCE(NULLIF(CONVERT(VARCH" +
                    "AR, CHARACTER_MAXIMUM_LENGTH), \'\'-1\'\'), \'\'max\'\') + \'\') \'\' \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\'ELSE " +
                    "\'\' \'\' \' +\r\n\t\t\t\t\t\t\t\t\t\t\'END + \' +\r\n\t\t\t\t\t\t\t\t\t\t\'CASE IS_NULLABLE \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\'WH" +
                    "EN \'\'NO\'\' THEN \'\'NOT \'\' \' +\r\n\t\t\t\t\t\t\t\t\t\t\t\'ELSE \'\'\'\' \' +\r\n\t\t\t\t\t\t\t\t\t\t\'END + \'\'NULL\'" +
                    "\' AS [text()] \' +\r\n\t\t\t\t\t\t\t\t\t\'FROM tempdb.INFORMATION_SCHEMA.COLUMNS \' +\r\n\t\t\t\t\t\t\t" +
                    "\t\t\'WHERE \' +\r\n\t\t\t\t\t\t\t\t\t\t\'TABLE_NAME = (SELECT name FROM tempdb.sys.objects WHERE" +
                    " object_id = OBJECT_ID(\'\'tempdb..#session_schema\'\')) \' +\r\n\t\t\t\t\t\t\t\t\t\t\'ORDER BY \' " +
                    "+\r\n\t\t\t\t\t\t\t\t\t\t\t\'ORDINAL_POSITION \' +\r\n\t\t\t\t\t\t\t\t\t\'FOR XML \' +\r\n\t\t\t\t\t\t\t\t\t\t\'PATH(\'\'\'\'" +
                    ") \' +\r\n\t\t\t\t\t\t\t\t\'), + \' +\r\n\t\t\t\t\t\t\t\t\'1, \' +\r\n\t\t\t\t\t\t\t\t\'1, \' +\r\n\t\t\t\t\t\t\t\t\'\'\'\'\' \' +\r\n\t" +
                    "\t\t\t\t\t\t\') + \' +\r\n\t\t\t\t\t\t\'\'\')\'\'; \' \r\n\t\t\t\tELSE \'\'\r\n\t\t\tEND\r\n\t\t--End derived table and" +
                    " INSERT specification\r\n\t\t);\r\n\r\n\tSET @sql_n = CONVERT(NVARCHAR(MAX), @sql);\r\n\r\n\tE" +
                    "XEC sp_executesql\r\n\t\t@sql_n,\r\n\t\tN\'@schema VARCHAR(MAX) OUTPUT\',\r\n\t\t@schema OUTPU" +
                    "T;\r\nEND;\r\nGO\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }

#line default
#line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class WhoIsActiveTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0)
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
